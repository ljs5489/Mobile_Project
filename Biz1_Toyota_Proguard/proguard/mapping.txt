com.bixolon.android.library.BxlBitmap -> com.bixolon.android.library.BxlBitmap:
    java.lang.String TAG -> TAG
    int R300_DOT_LENGTH -> R300_DOT_LENGTH
    int r(int) -> r
    int g(int) -> g
    int b(int) -> b
    int word(byte,byte) -> word
    int getBitmapHeight(android.graphics.Bitmap,int) -> getBitmapHeight
    byte[] bitmap2printerData(android.graphics.Bitmap,int,int) -> bitmap2printerData
    byte[] bitmap2Bytes(android.graphics.Bitmap,int,int) -> bitmap2Bytes
    byte[] byteBuffer2Bytes(java.nio.ByteBuffer,int,int,int) -> byteBuffer2Bytes
    void convertToGray(byte[],int,int,boolean) -> convertToGray
    int getNearest(int,int) -> getNearest
    void makeDiffusionImageData(byte[],int,int,int) -> makeDiffusionImageData
    byte getMonoDot(byte,byte,byte,int) -> getMonoDot
    byte[] makeMonoImageData(byte[],int,int,int) -> makeMonoImageData
    java.lang.String log(int) -> log
    int byte2Int(byte) -> byte2Int
    int bytesOfWidth(int) -> bytesOfWidth
    byte[] makeMonoGsvData(byte[],int,int,int,boolean) -> makeMonoGsvData
com.bixolon.android.library.BxlService -> com.bixolon.android.library.BxlService:
    int BXL_SUCCESS -> BXL_SUCCESS
    int BXL_ERR_INITIALIZE -> BXL_ERR_INITIALIZE
    int BXL_ERR_OVERFLOW -> BXL_ERR_OVERFLOW
    int BXL_ERR_NOTSUPPORT -> BXL_ERR_NOTSUPPORT
    int BXL_ERR_INVALID_MODE -> BXL_ERR_INVALID_MODE
    int BXL_ERR_BUFFER_FULL -> BXL_ERR_BUFFER_FULL
    int BXL_ERR_ARGUMENT -> BXL_ERR_ARGUMENT
    int BXL_ERR_INVALIDDATA -> BXL_ERR_INVALIDDATA
    int BXL_ERR_BARCODEDATA -> BXL_ERR_BARCODEDATA
    int BXL_ERR_OPEN -> BXL_ERR_OPEN
    int BXL_ERR_WRITE -> BXL_ERR_WRITE
    int BXL_ERR_READ -> BXL_ERR_READ
    int BXL_ERR_IMAGEOPEN -> BXL_ERR_IMAGEOPEN
    int BXL_STS_NORMAL -> BXL_STS_NORMAL
    int BXL_STS_COVEROPEN -> BXL_STS_COVEROPEN
    int BXL_STS_EMPTYPAPER -> BXL_STS_EMPTYPAPER
    int BXL_STS_POWEROVER -> BXL_STS_POWEROVER
    int BXL_STS_MSRMODE -> BXL_STS_MSRMODE
    int BXL_STS_ICMODE -> BXL_STS_ICMODE
    int BXL_STS_ERROR -> BXL_STS_ERROR
    int BXL_STS_DRAWER_LOW -> BXL_STS_DRAWER_LOW
    int BXL_STS_DRAWER_HIGH -> BXL_STS_DRAWER_HIGH
    int BXL_STS_MECHANICAL_ERROR -> BXL_STS_MECHANICAL_ERROR
    int BXL_STS_AUTO_CUTTER_ERROR -> BXL_STS_AUTO_CUTTER_ERROR
    int BXL_STS_PAPER_NEAR_END -> BXL_STS_PAPER_NEAR_END
    int BXL_STS_NO_PAPER -> BXL_STS_NO_PAPER
    int BXL_PWR_HIGH -> BXL_PWR_HIGH
    int BXL_PWR_MIDDLE -> BXL_PWR_MIDDLE
    int BXL_PWR_LOW -> BXL_PWR_LOW
    int BXL_PWR_SMALL -> BXL_PWR_SMALL
    int BXL_PWR_NOT -> BXL_PWR_NOT
    int BXL_INIT_BLUETOOTH_MODE -> BXL_INIT_BLUETOOTH_MODE
    int BXL_ALIGNMENT_LEFT -> BXL_ALIGNMENT_LEFT
    int BXL_ALIGNMENT_CENTER -> BXL_ALIGNMENT_CENTER
    int BXL_ALIGNMENT_RIGHT -> BXL_ALIGNMENT_RIGHT
    int BXL_FT_DEFAULT -> BXL_FT_DEFAULT
    int BXL_FT_FONTB -> BXL_FT_FONTB
    int BXL_FT_BOLD -> BXL_FT_BOLD
    int BXL_FT_UNDERLINE -> BXL_FT_UNDERLINE
    int BXL_FT_REVERSE -> BXL_FT_REVERSE
    int BXL_TS_0WIDTH -> BXL_TS_0WIDTH
    int BXL_TS_1WIDTH -> BXL_TS_1WIDTH
    int BXL_TS_2WIDTH -> BXL_TS_2WIDTH
    int BXL_TS_3WIDTH -> BXL_TS_3WIDTH
    int BXL_TS_4WIDTH -> BXL_TS_4WIDTH
    int BXL_TS_5WIDTH -> BXL_TS_5WIDTH
    int BXL_TS_6WIDTH -> BXL_TS_6WIDTH
    int BXL_TS_7WIDTH -> BXL_TS_7WIDTH
    int BXL_TS_0HEIGHT -> BXL_TS_0HEIGHT
    int BXL_TS_1HEIGHT -> BXL_TS_1HEIGHT
    int BXL_TS_2HEIGHT -> BXL_TS_2HEIGHT
    int BXL_TS_3HEIGHT -> BXL_TS_3HEIGHT
    int BXL_TS_4HEIGHT -> BXL_TS_4HEIGHT
    int BXL_TS_5HEIGHT -> BXL_TS_5HEIGHT
    int BXL_TS_6HEIGHT -> BXL_TS_6HEIGHT
    int BXL_TS_7HEIGHT -> BXL_TS_7HEIGHT
    int BXL_WIDTH_FULL -> BXL_WIDTH_FULL
    int BXL_WIDTH_NONE -> BXL_WIDTH_NONE
    int BXL_BCS_UPCA -> BXL_BCS_UPCA
    int BXL_BCS_UPCE -> BXL_BCS_UPCE
    int BXL_BCS_EAN13 -> BXL_BCS_EAN13
    int BXL_BCS_JAN13 -> BXL_BCS_JAN13
    int BXL_BCS_EAN8 -> BXL_BCS_EAN8
    int BXL_BCS_JAN8 -> BXL_BCS_JAN8
    int BXL_BCS_Code39 -> BXL_BCS_Code39
    int BXL_BCS_ITF -> BXL_BCS_ITF
    int BXL_BCS_Codabar -> BXL_BCS_Codabar
    int BXL_BCS_Code93 -> BXL_BCS_Code93
    int BXL_BCS_Code128 -> BXL_BCS_Code128
    int BXL_BCS_PDF417 -> BXL_BCS_PDF417
    int BXL_BCS_QRCODE_MODEL2 -> BXL_BCS_QRCODE_MODEL2
    int BXL_BCS_QRCODE_MODEL1 -> BXL_BCS_QRCODE_MODEL1
    int BXL_BCS_DATAMATRIX -> BXL_BCS_DATAMATRIX
    int BXL_BCS_MAXICODE_MODE2 -> BXL_BCS_MAXICODE_MODE2
    int BXL_BCS_MAXICODE_MODE3 -> BXL_BCS_MAXICODE_MODE3
    int BXL_BCS_MAXICODE_MODE4 -> BXL_BCS_MAXICODE_MODE4
    int BXL_BC_TEXT_NONE -> BXL_BC_TEXT_NONE
    int BXL_BC_TEXT_ABOVE -> BXL_BC_TEXT_ABOVE
    int BXL_BC_TEXT_BELOW -> BXL_BC_TEXT_BELOW
    int BXL_MSR_TRACK123 -> BXL_MSR_TRACK123
    int BXL_MSR_TRACK1 -> BXL_MSR_TRACK1
    int BXL_MSR_TRACK2 -> BXL_MSR_TRACK2
    int BXL_MSR_TRACK3 -> BXL_MSR_TRACK3
    int BXL_MSR_TRACK12 -> BXL_MSR_TRACK12
    int BXL_MSR_TRACK23 -> BXL_MSR_TRACK23
    int BXL_CS_PC437 -> BXL_CS_PC437
    int BXL_CS_Katakana -> BXL_CS_Katakana
    int BXL_CS_PC850 -> BXL_CS_PC850
    int BXL_CS_PC860 -> BXL_CS_PC860
    int BXL_CS_PC863 -> BXL_CS_PC863
    int BXL_CS_PC865 -> BXL_CS_PC865
    int BXL_CS_WPC1252 -> BXL_CS_WPC1252
    int BXL_CS_PC866 -> BXL_CS_PC866
    int BXL_CS_PC852 -> BXL_CS_PC852
    int BXL_CS_PC858 -> BXL_CS_PC858
    int BXL_CS_PC862 -> BXL_CS_PC862
    int BXL_CS_PC864 -> BXL_CS_PC864
    int BXL_CS_THAI42 -> BXL_CS_THAI42
    int BXL_CS_WPC1253 -> BXL_CS_WPC1253
    int BXL_CS_WPC1254 -> BXL_CS_WPC1254
    int BXL_CS_WPC1257 -> BXL_CS_WPC1257
    int BXL_CS_FARSI -> BXL_CS_FARSI
    int BXL_CS_WPC1251 -> BXL_CS_WPC1251
    int BXL_CS_PC737 -> BXL_CS_PC737
    int BXL_CS_PC775 -> BXL_CS_PC775
    int BXL_CS_THAI14 -> BXL_CS_THAI14
    int BXL_CS_WPC1255 -> BXL_CS_WPC1255
    int BXL_CS_THAI11 -> BXL_CS_THAI11
    int BXL_CS_THAI18 -> BXL_CS_THAI18
    int BXL_CS_PC855 -> BXL_CS_PC855
    int BXL_CS_PC857 -> BXL_CS_PC857
    int BXL_CS_PC928 -> BXL_CS_PC928
    int BXL_CS_THAI16 -> BXL_CS_THAI16
    int BXL_CS_WPC1256 -> BXL_CS_WPC1256
    int BXL_CS_WPC1258 -> BXL_CS_WPC1258
    int BXL_CS_USER -> BXL_CS_USER
    int BXL_ICS_USA -> BXL_ICS_USA
    int BXL_ICS_FRANCE -> BXL_ICS_FRANCE
    int BXL_ICS_GERMANY -> BXL_ICS_GERMANY
    int BXL_ICS_UK -> BXL_ICS_UK
    int BXL_ICS_DENMARK1 -> BXL_ICS_DENMARK1
    int BXL_ICS_SWEDEN -> BXL_ICS_SWEDEN
    int BXL_ICS_ITALY -> BXL_ICS_ITALY
    int BXL_ICS_SPAIN1 -> BXL_ICS_SPAIN1
    int BXL_ICS_NORWAY -> BXL_ICS_NORWAY
    int BXL_ICS_DENMARK2 -> BXL_ICS_DENMARK2
    int BXL_ICS_SPAIN2 -> BXL_ICS_SPAIN2
    int BXL_ICS_LATINAMERICA -> BXL_ICS_LATINAMERICA
    int BXL_ICS_KOREA -> BXL_ICS_KOREA
    int MSR_ERR_CONNECT -> MSR_ERR_CONNECT
    int MSR_TRACK123_COMMAND -> MSR_TRACK123_COMMAND
    int MSR_TRACK1_AUTO -> MSR_TRACK1_AUTO
    int MSR_TRACK2_AUTO -> MSR_TRACK2_AUTO
    int MSR_TRACK3_AUTO -> MSR_TRACK3_AUTO
    int MSR_TRACK12_AUTO -> MSR_TRACK12_AUTO
    int MSR_TRACK23_AUTO -> MSR_TRACK23_AUTO
    int MSR_TRACK123_AUTO -> MSR_TRACK123_AUTO
    int MSR_NOTUSED -> MSR_NOTUSED
    int Com_Initial -> Com_Initial
    int Com_BlueTooth -> Com_BlueTooth
    int Com_WiFi_TCP -> Com_WiFi_TCP
    int Com_USB -> Com_USB
    int Samsung_GalaxyA -> Samsung_GalaxyA
    int Samsung_GalaxyS -> Samsung_GalaxyS
    int HTC_Desire -> HTC_Desire
    int iMsrReadMode -> iMsrReadMode
    java.lang.String TAG -> TAG
    java.util.UUID MY_UUID -> MY_UUID
    android.bluetooth.BluetoothAdapter mAdapter -> mAdapter
    android.bluetooth.BluetoothDevice mDevice -> mDevice
    android.bluetooth.BluetoothSocket mSocket -> mSocket
    java.io.InputStream mInStream -> mInStream
    java.io.OutputStream mOutStream -> mOutStream
    com.bixolon.android.library.BxlService$ConnectThread mConnectThread -> mConnectThread
    com.bixolon.android.library.BxlService$ConnectedThread mConnectedThread -> mConnectedThread
    java.net.Socket wSocket -> wSocket
    int MsgType -> MsgType
    boolean recievedState -> recievedState
    boolean connectState -> connectState
    byte[] recvBuffer -> recvBuffer
    byte[] recvBuffer2 -> recvBuffer2
    int recvBytes -> recvBytes
    byte[] PackagectsendBuffer -> PackagectsendBuffer
    byte[] PackagectsendBuffer1 -> PackagectsendBuffer1
    java.lang.String reAddr -> reAddr
    int rePort -> rePort
    int m_lState -> m_lState
    int m_cCodePage -> m_cCodePage
    int m_cInterCharSet -> m_cInterCharSet
    boolean logenable -> logenable
    int Com_Mode -> Com_Mode
    int DeviceMoldel -> DeviceMoldel
    int StatusCheck -> StatusCheck
    int Data_Stor -> Data_Stor
    int Data_Load -> Data_Load
    byte[] MsrTrack1 -> MsrTrack1
    byte[] MsrTrack2 -> MsrTrack2
    byte[] MsrTrack3 -> MsrTrack3
    int MsrTrack1_Status -> MsrTrack1_Status
    int MsrTrack2_Status -> MsrTrack2_Status
    int MsrTrack3_Status -> MsrTrack3_Status
    byte[] czESC02 -> czESC02
    byte[] czESC04 -> czESC04
    byte[] GetCmdPower -> GetCmdPower
    byte[] MSR_TRACK123_READERMODE_COMMAND -> MSR_TRACK123_READERMODE_COMMAND
    byte[] MSR_CANCEL_READERMODE_COMMAND -> MSR_CANCEL_READERMODE_COMMAND
    byte[] IC_PowerON -> IC_PowerON
    byte[] IC_PowerOFF -> IC_PowerOFF
    byte[] IC_StatusGet -> IC_StatusGet
    byte[] MSR_SETTING_VALUE_COMMAND -> MSR_SETTING_VALUE_COMMAND
    byte[] ESC_CR -> ESC_CR
    byte[] ESC_LF -> ESC_LF
    byte[] ESC_FF -> ESC_FF
    byte[] msr_track_tail -> msr_track_tail
    byte[] IC_ApduHeader -> IC_ApduHeader
    byte[] ESC_AlignNormal -> ESC_AlignNormal
    byte[] ESC_AlignCenter -> ESC_AlignCenter
    byte[] ESC_AlignRight -> ESC_AlignRight
    byte[] GS_B_Enabled -> GS_B_Enabled
    byte[] GS_B_Disabled -> GS_B_Disabled
    byte[] GS_FontSize -> GS_FontSize
    byte[] ESC_FontChar -> ESC_FontChar
    byte[] Label_Mode -> Label_Mode
    byte[] Receipt_Mode -> Receipt_Mode
    byte[] Auto_Calibration -> Auto_Calibration
    byte[] iImage1 -> iImage1
    byte[] iImage2 -> iImage2
    int iImage1Size -> iImage1Size
    int iImage2Size -> iImage2Size
    byte[] globaliOutBuffer_iOutBuffer -> globaliOutBuffer_iOutBuffer
    int globaliOutBuffer_MaxLength -> globaliOutBuffer_MaxLength
    int globaliOutBuffer_Size -> globaliOutBuffer_Size
    java.nio.ByteBuffer globaliOutBuffer_ByteBuffer -> globaliOutBuffer_ByteBuffer
    int nWaitTimeforDisconnect -> nWaitTimeforDisconnect
    boolean bTerminate -> bTerminate
    java.lang.String mstrEncoding -> mstrEncoding
    java.util.ArrayList NVImageAddressList -> NVImageAddressList
    int SPP_R200 -> SPP_R200
    int EM_220 -> EM_220
    int SPP_R200II -> SPP_R200II
    int SPP_R300 -> SPP_R300
    int SRP_F310 -> SRP_F310
    int SRP_F312 -> SRP_F312
    int SRP_350 -> SRP_350
    int SRP_352 -> SRP_352
    int SPP_R400 -> SPP_R400
    int PrinterModelID -> PrinterModelID
    int SPP_R200_MAX_WIDTH -> SPP_R200_MAX_WIDTH
    int SPP_R300_MAX_WIDTH -> SPP_R300_MAX_WIDTH
    int SRP_F310_MAX_WIDTH -> SRP_F310_MAX_WIDTH
    int SRP_F312_MAX_WIDTH -> SRP_F312_MAX_WIDTH
    int SRP_350_MAX_WIDTH -> SRP_350_MAX_WIDTH
    int SRP_352_MAX_WIDTH -> SRP_352_MAX_WIDTH
    int SPP_R400_MAX_WIDTH -> SPP_R400_MAX_WIDTH
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String mTrack1Start -> mTrack1Start
    java.lang.String mTrack2Start -> mTrack2Start
    java.lang.String mTrack3Start -> mTrack3Start
    java.lang.String mTrack1End -> mTrack1End
    java.lang.String mTrack2End -> mTrack2End
    java.lang.String mTrack3End -> mTrack3End
    android.os.Handler mHandler -> mHandler
    android.app.Activity mActivity -> mActivity
    com.bixolon.android.library.UsbLauncher mUsbLauncher -> mUsbLauncher
    android.hardware.usb.UsbManager mUsbManager -> mUsbManager
    android.app.Activity mUsbActivity -> mUsbActivity
    android.os.Handler mUsbHandler -> mUsbHandler
    int mProductId -> mProductId
    boolean FOR_SMARTRO -> FOR_SMARTRO
    boolean FOR_AMERICAN_AIRLINES -> FOR_AMERICAN_AIRLINES
    boolean FOR_KIS -> FOR_KIS
    int mTrack2Length -> mTrack2Length
    int mKeyIndex -> mKeyIndex
    boolean mIsPageMode -> mIsPageMode
    int BXL_PD_LEFT_TO_RIGHT -> BXL_PD_LEFT_TO_RIGHT
    int BXL_PD_BOTTOM_TO_TOP -> BXL_PD_BOTTOM_TO_TOP
    int BXL_PD_RIGHT_TO_LEFT -> BXL_PD_RIGHT_TO_LEFT
    int BXL_PD_TOP_TO_BOTTM -> BXL_PD_TOP_TO_BOTTM
    com.bixolon.android.library.ConfigurationTool mConfigurationTool -> mConfigurationTool
    boolean mKeepConnection -> mKeepConnection
    boolean transmitLastStatusBack(byte[],android.os.Handler,android.app.Activity) -> transmitLastStatusBack
    int write(byte[]) -> write
    int Connect() -> Connect
    int Connect(java.lang.String) -> Connect
    int _Connect(java.lang.String) -> _Connect
    int Connect(java.lang.String,int,android.app.Activity,android.os.Handler) -> Connect
    int Connect(java.lang.String,int) -> Connect
    int Connect(android.hardware.usb.UsbManager,android.app.Activity,android.os.Handler,int) -> Connect
    int ReConnect() -> ReConnect
    int Disconnect() -> Disconnect
    int getnWaitTimeforDisconnect() -> getnWaitTimeforDisconnect
    void setnWaitTimeforDisconnect(int) -> setnWaitTimeforDisconnect
    int Disconnect(int) -> Disconnect
    java.lang.String getEncoding() -> getEncoding
    int PrintText(java.lang.String,int,int,int) -> PrintText
    int PrintText(java.lang.String,int,int,int,java.lang.String) -> PrintText
    int GetStatus() -> GetStatus
    int GetPowerStatus() -> GetPowerStatus
    int SetCharacterSet(int) -> SetCharacterSet
    int CheckSetCharacterSet() -> CheckSetCharacterSet
    int SetInterCharacterSet(int) -> SetInterCharacterSet
    int CheckSetInterCharacterSet() -> CheckSetInterCharacterSet
    int PrintEscText(byte[]) -> PrintEscText
    int PrintBarcode(byte[],int,int,int,int,int,int) -> PrintBarcode
    int PrintDownloadedImage(java.lang.String,java.lang.String,int,int,int) -> PrintDownloadedImage
    int PrintImage(java.lang.String,int,int,int) -> PrintImage
    int printImage2(java.lang.String,int,int,int) -> printImage2
    int AutoCalibration() -> AutoCalibration
    int ChangeMode(boolean) -> ChangeMode
    int LineFeed(int) -> LineFeed
    int LineFeed(int,boolean) -> LineFeed
    int FormFeed(int) -> FormFeed
    int MsrReady() -> MsrReady
    int MsrGetData() -> MsrGetData
    int MsrCancel() -> MsrCancel
    byte[] MsrTrack1() -> MsrTrack1
    byte[] MsrTrack2() -> MsrTrack2
    byte[] MsrTrack3() -> MsrTrack3
    int IcOn(byte[],int[]) -> IcOn
    int IcOff() -> IcOff
    int IcGetStatus(byte[]) -> IcGetStatus
    int Directio(byte[],int,byte[],int[]) -> Directio
    int IcApdu(byte[],int,byte[],int[]) -> IcApdu
    java.lang.String GetPrinterName() -> GetPrinterName
    int SetBluetoothInterface(boolean,int,byte[],java.lang.String) -> SetBluetoothInterface
    int GetPrinterModel() -> GetPrinterModel
    int PrintNVImage(int) -> PrintNVImage
    int PrintAllNVImage() -> PrintAllNVImage
    int RemoveNVImage(int) -> RemoveNVImage
    int RemoveAllNVImage() -> RemoveAllNVImage
    java.lang.String GetUnusedNVImageCapacity() -> GetUnusedNVImageCapacity
    int GetNVImageAddressList() -> GetNVImageAddressList
    int DownloadNVImage(java.lang.String[],byte[]) -> DownloadNVImage
    int SelectPageMode() -> SelectPageMode
    int SelectStandardMode() -> SelectStandardMode
    int SetPrintArea(int,int,int,int) -> SetPrintArea
    int SelectPrintDirection(int) -> SelectPrintDirection
    int GetConfiguration(java.lang.String[]) -> GetConfiguration
    int SetConfiguration(java.lang.String[]) -> SetConfiguration
    java.lang.String GetSDKVersion() -> GetSDKVersion
    int InitializePrinter() -> InitializePrinter
    int CutPartially() -> CutPartially
    int KickOutDrawer() -> KickOutDrawer
    void SetConnection(boolean) -> SetConnection
    java.lang.String GetSerialNumber() -> GetSerialNumber
    int RegisterPin(java.lang.String) -> RegisterPin
    int InitializeDukptKey(java.lang.String,java.lang.String) -> InitializeDukptKey
    int SetStartSentinel(int,java.lang.String) -> SetStartSentinel
    int SetEndSentinel(int,java.lang.String) -> SetEndSentinel
    java.lang.String GetStartSentinel(int) -> GetStartSentinel
    java.lang.String GetEndSentinel(int) -> GetEndSentinel
    void ptrmsrGetDataReceiveData(byte[],int) -> ptrmsrGetDataReceiveData
    int ptrPrintEscText(byte[],int) -> ptrPrintEscText
    int RandomFun(int,int) -> RandomFun
    int MakeSecurityCode(byte[]) -> MakeSecurityCode
    void Mono_Gsv(byte[],byte[],int,int,int[],int,boolean) -> Mono_Gsv
    int prnAlignMode(int,byte[]) -> prnAlignMode
    int prnBaseMode(int,byte[]) -> prnBaseMode
    int prnTextSizeMode(int,byte[]) -> prnTextSizeMode
    void GetPixel(byte[],int,int,byte[],int,int) -> GetPixel
    int bcMake1st(byte[],int,int,int,int,int,int,byte[],int[]) -> bcMake1st
    int bcMake2st(byte[],int,int,int,int,int,int,byte[],int[]) -> bcMake2st
    int inputOutBuffer_uiCount(byte[],int,int) -> inputOutBuffer_uiCount
    int inputOutBuffer(byte[],int) -> inputOutBuffer
    void PrintOutput(java.lang.String,byte[]) -> PrintOutput
    void DexToHex(byte,char[]) -> DexToHex
    void mywait(int) -> mywait
    void checkGC() -> checkGC
    void access$0(com.bixolon.android.library.BxlService,android.bluetooth.BluetoothDevice) -> access$0
    android.bluetooth.BluetoothDevice access$1(com.bixolon.android.library.BxlService) -> access$1
    java.util.UUID access$2() -> access$2
    void access$3(com.bixolon.android.library.BxlService,android.bluetooth.BluetoothSocket) -> access$3
    void access$4(com.bixolon.android.library.BxlService,boolean) -> access$4
    void access$5(com.bixolon.android.library.BxlService,java.net.Socket) -> access$5
    android.bluetooth.BluetoothAdapter access$6(com.bixolon.android.library.BxlService) -> access$6
    android.bluetooth.BluetoothSocket access$7(com.bixolon.android.library.BxlService) -> access$7
    int access$8(com.bixolon.android.library.BxlService) -> access$8
    java.net.Socket access$9(com.bixolon.android.library.BxlService) -> access$9
    void access$10(com.bixolon.android.library.BxlService,java.io.InputStream) -> access$10
    void access$11(com.bixolon.android.library.BxlService,java.io.OutputStream) -> access$11
    boolean access$12(com.bixolon.android.library.BxlService) -> access$12
    java.io.InputStream access$13(com.bixolon.android.library.BxlService) -> access$13
    byte[] access$14(com.bixolon.android.library.BxlService) -> access$14
    void access$15(com.bixolon.android.library.BxlService,int) -> access$15
    int access$16(com.bixolon.android.library.BxlService) -> access$16
    byte[] access$17(com.bixolon.android.library.BxlService) -> access$17
    boolean access$18(com.bixolon.android.library.BxlService) -> access$18
    int access$19(com.bixolon.android.library.BxlService) -> access$19
    void access$20(com.bixolon.android.library.BxlService,byte[],int) -> access$20
    void access$21(com.bixolon.android.library.BxlService,int) -> access$21
    java.io.OutputStream access$22(com.bixolon.android.library.BxlService) -> access$22
com.bixolon.android.library.BxlService$ConnectThread -> com.bixolon.android.library.BxlService$ConnectThread:
    com.bixolon.android.library.BxlService this$0 -> this$0
    void run() -> run
    void cancel() -> cancel
com.bixolon.android.library.BxlService$ConnectedThread -> com.bixolon.android.library.BxlService$ConnectedThread:
    char[] HexValue -> HexValue
    com.bixolon.android.library.BxlService this$0 -> this$0
    void run() -> run
    int write(byte[]) -> write
    void cancel() -> cancel
com.bixolon.android.library.ConfigurationTool -> com.bixolon.android.library.ConfigurationTool:
    com.bixolon.android.library.ConfigurationTool$ConfigurationThread mConfigurationThread -> mConfigurationThread
    java.lang.String TAG -> TAG
    int mConfigurationResult -> mConfigurationResult
    byte[] mConfigurationCurrentValue -> mConfigurationCurrentValue
    byte[] mSystemName -> mSystemName
    byte mRegion -> mRegion
    byte mNetworkMode -> mNetworkMode
    byte mIpConfigMode -> mIpConfigMode
    byte[] mIpAddress -> mIpAddress
    byte[] mSubNetMask -> mSubNetMask
    byte[] mGateway -> mGateway
    byte[] mSsid -> mSsid
    byte mAuthMode -> mAuthMode
    byte mCryptoMode -> mCryptoMode
    byte[] mWebKey0 -> mWebKey0
    byte[] mWebKey1 -> mWebKey1
    byte[] mWebKey2 -> mWebKey2
    byte[] mWebKey3 -> mWebKey3
    byte[] mPskKey -> mPskKey
    byte mAdhocChannel -> mAdhocChannel
    byte mEapMode -> mEapMode
    byte[] mEapId -> mEapId
    byte[] mEapPassword -> mEapPassword
    byte[] mUserName -> mUserName
    byte[] mUserPassword -> mUserPassword
    byte[] mPrinterPort -> mPrinterPort
    byte mDummy1 -> mDummy1
    byte[] mSysContact -> mSysContact
    byte[] mSysLocation -> mSysLocation
    byte mIpDefaultTtl -> mIpDefaultTtl
    byte mDummy2 -> mDummy2
    byte mIsWebSsl -> mIsWebSsl
    byte mIsTelnet -> mIsTelnet
    byte mIsFtp -> mIsFtp
    byte mIsSnmp -> mIsSnmp
    byte mIsSnmpTrap -> mIsSnmpTrap
    byte[] mSnmpSetCommunity -> mSnmpSetCommunity
    byte[] mSnmpGetCommunity -> mSnmpGetCommunity
    byte[] mSnmpTrapCommunity -> mSnmpTrapCommunity
    byte[] mTrapIp -> mTrapIp
    byte[] mInactivityTime -> mInactivityTime
    byte[] mCheckSum -> mCheckSum
    int start(java.lang.String,boolean,java.lang.String[]) -> start
    java.lang.String getSystemName() -> getSystemName
    java.lang.String getSsid() -> getSsid
    int getConfigurationSize() -> getConfigurationSize
    java.lang.String access$0(com.bixolon.android.library.ConfigurationTool) -> access$0
    void access$1(com.bixolon.android.library.ConfigurationTool,int) -> access$1
    int access$2(com.bixolon.android.library.ConfigurationTool) -> access$2
    byte[] access$3(com.bixolon.android.library.ConfigurationTool) -> access$3
    byte[] access$4(com.bixolon.android.library.ConfigurationTool) -> access$4
    void access$5(com.bixolon.android.library.ConfigurationTool,byte) -> access$5
    void access$6(com.bixolon.android.library.ConfigurationTool,byte) -> access$6
    void access$7(com.bixolon.android.library.ConfigurationTool,byte) -> access$7
    byte[] access$8(com.bixolon.android.library.ConfigurationTool) -> access$8
    byte[] access$9(com.bixolon.android.library.ConfigurationTool) -> access$9
    byte[] access$10(com.bixolon.android.library.ConfigurationTool) -> access$10
    byte[] access$11(com.bixolon.android.library.ConfigurationTool) -> access$11
    void access$12(com.bixolon.android.library.ConfigurationTool,byte) -> access$12
    void access$13(com.bixolon.android.library.ConfigurationTool,byte) -> access$13
    byte[] access$14(com.bixolon.android.library.ConfigurationTool) -> access$14
    byte[] access$15(com.bixolon.android.library.ConfigurationTool) -> access$15
    byte[] access$16(com.bixolon.android.library.ConfigurationTool) -> access$16
    byte[] access$17(com.bixolon.android.library.ConfigurationTool) -> access$17
    byte[] access$18(com.bixolon.android.library.ConfigurationTool) -> access$18
    void access$19(com.bixolon.android.library.ConfigurationTool,byte) -> access$19
    void access$20(com.bixolon.android.library.ConfigurationTool,byte) -> access$20
    byte[] access$21(com.bixolon.android.library.ConfigurationTool) -> access$21
    byte[] access$22(com.bixolon.android.library.ConfigurationTool) -> access$22
    byte[] access$23(com.bixolon.android.library.ConfigurationTool) -> access$23
    byte[] access$24(com.bixolon.android.library.ConfigurationTool) -> access$24
    byte[] access$25(com.bixolon.android.library.ConfigurationTool) -> access$25
    void access$26(com.bixolon.android.library.ConfigurationTool,byte) -> access$26
    byte[] access$27(com.bixolon.android.library.ConfigurationTool) -> access$27
    byte[] access$28(com.bixolon.android.library.ConfigurationTool) -> access$28
    void access$29(com.bixolon.android.library.ConfigurationTool,byte) -> access$29
    void access$30(com.bixolon.android.library.ConfigurationTool,byte) -> access$30
    void access$31(com.bixolon.android.library.ConfigurationTool,byte) -> access$31
    void access$32(com.bixolon.android.library.ConfigurationTool,byte) -> access$32
    void access$33(com.bixolon.android.library.ConfigurationTool,byte) -> access$33
    void access$34(com.bixolon.android.library.ConfigurationTool,byte) -> access$34
    void access$35(com.bixolon.android.library.ConfigurationTool,byte) -> access$35
    byte[] access$36(com.bixolon.android.library.ConfigurationTool) -> access$36
    byte[] access$37(com.bixolon.android.library.ConfigurationTool) -> access$37
    byte[] access$38(com.bixolon.android.library.ConfigurationTool) -> access$38
    byte[] access$39(com.bixolon.android.library.ConfigurationTool) -> access$39
    byte[] access$40(com.bixolon.android.library.ConfigurationTool) -> access$40
    byte access$41(com.bixolon.android.library.ConfigurationTool) -> access$41
    byte access$42(com.bixolon.android.library.ConfigurationTool) -> access$42
    byte access$43(com.bixolon.android.library.ConfigurationTool) -> access$43
    byte access$44(com.bixolon.android.library.ConfigurationTool) -> access$44
    byte access$45(com.bixolon.android.library.ConfigurationTool) -> access$45
    byte access$46(com.bixolon.android.library.ConfigurationTool) -> access$46
    byte access$47(com.bixolon.android.library.ConfigurationTool) -> access$47
    byte access$48(com.bixolon.android.library.ConfigurationTool) -> access$48
    byte access$49(com.bixolon.android.library.ConfigurationTool) -> access$49
    byte access$50(com.bixolon.android.library.ConfigurationTool) -> access$50
    byte access$51(com.bixolon.android.library.ConfigurationTool) -> access$51
    byte access$52(com.bixolon.android.library.ConfigurationTool) -> access$52
    byte access$53(com.bixolon.android.library.ConfigurationTool) -> access$53
    byte access$54(com.bixolon.android.library.ConfigurationTool) -> access$54
    byte access$55(com.bixolon.android.library.ConfigurationTool) -> access$55
com.bixolon.android.library.ConfigurationTool$ConfigurationThread -> com.bixolon.android.library.ConfigurationTool$ConfigurationThread:
    int PRINTER_PORT -> PRINTER_PORT
    java.lang.String GET_CONFIGURATION -> GET_CONFIGURATION
    java.lang.String CURRENT_CONFIGURATION -> CURRENT_CONFIGURATION
    java.lang.String SET_CONFIGURATION -> SET_CONFIGURATION
    java.lang.String SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    java.lang.String FAIL_MESSAGE -> FAIL_MESSAGE
    boolean mIsGetConfiguration -> mIsGetConfiguration
    java.lang.String mConnectIpAddress -> mConnectIpAddress
    com.bixolon.android.library.ConfigurationTool this$0 -> this$0
    short toUnsigned(byte) -> toUnsigned
    int toUnsigned(short) -> toUnsigned
    long toUnsigned(int) -> toUnsigned
    short Checksum(byte[],int) -> Checksum
    void setAttribute(java.lang.String,boolean) -> setAttribute
    void run() -> run
    void getConfiguration(java.nio.ByteBuffer) -> getConfiguration
    void setConfiguration(java.nio.ByteBuffer) -> setConfiguration
    void access$1(com.bixolon.android.library.ConfigurationTool$ConfigurationThread,java.lang.String,boolean) -> access$1
com.bixolon.android.library.ImageProcessor -> com.bixolon.android.library.ImageProcessor:
    int getCodeCount(byte[],byte,int,int) -> getCodeCount
    int runLengthEncoding(byte[],int,int,byte[]) -> runLengthEncoding
    byte[] printImage(java.lang.String,int,int,int,int) -> printImage
com.bixolon.android.library.TextLog -> com.bixolon.android.library.TextLog:
    boolean DEBUG -> DEBUG
    android.content.Context mMain -> mMain
    java.lang.String mFile -> mFile
    java.lang.String mTag -> mTag
    int mDir -> mDir
    int DIR_SELF -> DIR_SELF
    int LOG_SDCARD -> LOG_SDCARD
    int LOG_SYSTEM -> LOG_SYSTEM
    boolean mHaveSD -> mHaveSD
    java.lang.String mSDPath -> mSDPath
    void init(android.content.Context,int) -> init
    void reset() -> reset
    void o(java.lang.String) -> o
    void viewLog() -> viewLog
    void addMenu(android.view.Menu) -> addMenu
    boolean execMenu(android.view.MenuItem) -> execMenu
com.bixolon.android.library.TextLog$log -> com.bixolon.android.library.TextLog$log:
    void o(java.lang.String) -> o
    void o(java.lang.String,java.lang.String) -> o
com.bixolon.android.library.TripleDes -> com.bixolon.android.library.TripleDes:
    java.lang.String[] KEY_TABLE -> KEY_TABLE
    byte[] hexToBytes(java.lang.String) -> hexToBytes
    java.lang.String bytesToHex(byte[]) -> bytesToHex
    java.lang.String generateKey(int,int,int) -> generateKey
    byte[] decrypt(byte[],int,int,int) -> decrypt
com.bixolon.android.library.UsbLauncher -> com.bixolon.android.library.UsbLauncher:
    java.lang.String TAG -> TAG
    android.hardware.usb.UsbManager mUsbManager -> mUsbManager
    android.app.Activity mActivity -> mActivity
    android.hardware.usb.UsbDevice mDevice -> mDevice
    android.hardware.usb.UsbDeviceConnection mConnection -> mConnection
    android.hardware.usb.UsbEndpoint mEndpointIn -> mEndpointIn
    android.hardware.usb.UsbEndpoint mEndpointOut -> mEndpointOut
    android.hardware.usb.UsbInterface mInterface -> mInterface
    java.lang.Thread mThread -> mThread
    android.os.Handler mHandler -> mHandler
    byte[] mBuffer -> mBuffer
    byte[] ENABLE_LSB -> ENABLE_LSB
    byte[] DISABLE_LSB -> DISABLE_LSB
    int MAX_TRANSFER_LENGTH -> MAX_TRANSFER_LENGTH
    int STATE_DONE -> STATE_DONE
    int STATE_RUNNING -> STATE_RUNNING
    int mState -> mState
    int mProductId -> mProductId
    android.content.BroadcastReceiver mUsbReceiver -> mUsbReceiver
    int mResponseWaitTime -> mResponseWaitTime
    byte[] storebuffer -> storebuffer
    boolean connect() -> connect
    void disconnect() -> disconnect
    boolean setUsbInterface(android.hardware.usb.UsbDevice,android.hardware.usb.UsbInterface) -> setUsbInterface
    android.hardware.usb.UsbInterface findUsbInterface(android.hardware.usb.UsbDevice) -> findUsbInterface
    void setDevice(android.hardware.usb.UsbDevice) -> setDevice
    int sendCommand(byte[]) -> sendCommand
    java.lang.String toHexString(byte[]) -> toHexString
    void setResponseWaitTime(int) -> setResponseWaitTime
    void run() -> run
    int access$0(com.bixolon.android.library.UsbLauncher) -> access$0
    android.hardware.usb.UsbInterface access$1(android.hardware.usb.UsbDevice) -> access$1
    boolean access$2(com.bixolon.android.library.UsbLauncher,android.hardware.usb.UsbDevice,android.hardware.usb.UsbInterface) -> access$2
    android.hardware.usb.UsbDevice access$3(com.bixolon.android.library.UsbLauncher) -> access$3
com.bixolon.android.library.UsbLauncher$1 -> com.bixolon.android.library.UsbLauncher$1:
    com.bixolon.android.library.UsbLauncher this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.bixolon.android.library.charset.ByteCharset -> com.bixolon.android.library.charset.ByteCharset:
    char[] lookupTable -> lookupTable
    char NONE -> NONE
    boolean contains(java.nio.charset.Charset) -> contains
    char[] getLookupTable() -> getLookupTable
    java.nio.charset.CharsetDecoder newDecoder() -> newDecoder
    java.nio.charset.CharsetEncoder newEncoder() -> newEncoder
com.bixolon.android.library.charset.ByteCharset$Decoder -> com.bixolon.android.library.charset.ByteCharset$Decoder:
    char[] lookup -> lookup
    java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer) -> decodeLoop
com.bixolon.android.library.charset.ByteCharset$Encoder -> com.bixolon.android.library.charset.ByteCharset$Encoder:
    byte[] lookup -> lookup
    java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer) -> encodeLoop
com.bixolon.android.library.charset.Cp437 -> com.bixolon.android.library.charset.Cp437:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp737 -> com.bixolon.android.library.charset.Cp737:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp775 -> com.bixolon.android.library.charset.Cp775:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp850 -> com.bixolon.android.library.charset.Cp850:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp852 -> com.bixolon.android.library.charset.Cp852:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp855 -> com.bixolon.android.library.charset.Cp855:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp857 -> com.bixolon.android.library.charset.Cp857:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp860 -> com.bixolon.android.library.charset.Cp860:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp862 -> com.bixolon.android.library.charset.Cp862:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp863 -> com.bixolon.android.library.charset.Cp863:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp864 -> com.bixolon.android.library.charset.Cp864:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp865 -> com.bixolon.android.library.charset.Cp865:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Cp866 -> com.bixolon.android.library.charset.Cp866:
    char[] lookup -> lookup
com.bixolon.android.library.charset.US_ASCII -> com.bixolon.android.library.charset.US_ASCII:
    boolean contains(java.nio.charset.Charset) -> contains
    java.nio.charset.CharsetDecoder newDecoder() -> newDecoder
    java.nio.charset.CharsetEncoder newEncoder() -> newEncoder
com.bixolon.android.library.charset.US_ASCII$Decoder -> com.bixolon.android.library.charset.US_ASCII$Decoder:
    java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer) -> decodeLoop
com.bixolon.android.library.charset.US_ASCII$Encoder -> com.bixolon.android.library.charset.US_ASCII$Encoder:
    java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer) -> encodeLoop
com.bixolon.android.library.charset.Windows1251 -> com.bixolon.android.library.charset.Windows1251:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Windows1252 -> com.bixolon.android.library.charset.Windows1252:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Windows1253 -> com.bixolon.android.library.charset.Windows1253:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Windows1254 -> com.bixolon.android.library.charset.Windows1254:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Windows1255 -> com.bixolon.android.library.charset.Windows1255:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Windows1256 -> com.bixolon.android.library.charset.Windows1256:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Windows1257 -> com.bixolon.android.library.charset.Windows1257:
    char[] lookup -> lookup
com.bixolon.android.library.charset.Windows1258 -> com.bixolon.android.library.charset.Windows1258:
    char[] lookup -> lookup
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    java.util.Hashtable VALUES -> VALUES
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat RSS14 -> RSS14
    com.google.zxing.BarcodeFormat PDF417 -> PDF417
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    java.lang.String name -> name
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Hashtable hints -> hints
    java.util.Vector readers -> readers
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    void setHints(java.util.Hashtable) -> setHints
    void reset() -> reset
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Hashtable resultMetadata -> resultMetadata
    long timestamp -> timestamp
    java.lang.String getText() -> getText
    byte[] getRawBytes() -> getRawBytes
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.util.Hashtable getResultMetadata() -> getResultMetadata
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    void putAllMetadata(java.util.Hashtable) -> putAllMetadata
    void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    long getTimestamp() -> getTimestamp
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    java.util.Hashtable VALUES -> VALUES
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    java.lang.String name -> name
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    float getX() -> getX
    float getY() -> getY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String parseName(java.lang.String) -> parseName
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] emails -> emails
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String url -> url
    java.lang.String[] getNames() -> getNames
    java.lang.String getPronunciation() -> getPronunciation
    java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    java.lang.String[] getEmails() -> getEmails
    java.lang.String getNote() -> getNote
    java.lang.String[] getAddresses() -> getAddresses
    java.lang.String getTitle() -> getTitle
    java.lang.String getOrg() -> getOrg
    java.lang.String getURL() -> getURL
    java.lang.String getBirthday() -> getBirthday
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.lang.String summary -> summary
    java.lang.String start -> start
    java.lang.String end -> end
    java.lang.String location -> location
    java.lang.String attendee -> attendee
    java.lang.String description -> description
    java.lang.String getSummary() -> getSummary
    java.lang.String getStart() -> getStart
    java.lang.String getEnd() -> getEnd
    java.lang.String getLocation() -> getLocation
    java.lang.String getAttendee() -> getAttendee
    java.lang.String getDescription() -> getDescription
    java.lang.String getDisplayResult() -> getDisplayResult
    void validateDate(java.lang.String) -> validateDate
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String emailAddress -> emailAddress
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String mailtoURI -> mailtoURI
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getMailtoURI() -> getMailtoURI
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    char[] ATEXT_SYMBOLS -> ATEXT_SYMBOLS
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    boolean isAtextSymbol(char) -> isAtextSymbol
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Hashtable uncommonAIs -> uncommonAIs
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String getProductID() -> getProductID
    java.lang.String getSscc() -> getSscc
    java.lang.String getLotNumber() -> getLotNumber
    java.lang.String getProductionDate() -> getProductionDate
    java.lang.String getPackagingDate() -> getPackagingDate
    java.lang.String getBestBeforeDate() -> getBestBeforeDate
    java.lang.String getExpirationDate() -> getExpirationDate
    java.lang.String getWeight() -> getWeight
    java.lang.String getWeightType() -> getWeightType
    java.lang.String getWeightIncrement() -> getWeightIncrement
    java.lang.String getPrice() -> getPrice
    java.lang.String getPriceIncrement() -> getPriceIncrement
    java.lang.String getPriceCurrency() -> getPriceCurrency
    java.util.Hashtable getUncommonAIs() -> getUncommonAIs
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    java.lang.String findValue(int,java.lang.String) -> findValue
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    java.lang.String getGeoURI() -> getGeoURI
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    java.lang.String getQuery() -> getQuery
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    java.lang.String getISBN() -> getISBN
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuffer) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuffer) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType ANDROID_INTENT -> ANDROID_INTENT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType NDEF_SMART_POSTER -> NDEF_SMART_POSTER
    com.google.zxing.client.result.ParsedResultType MOBILETAG_RICH_WEB -> MOBILETAG_RICH_WEB
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    java.lang.String name -> name
    java.lang.String toString() -> toString
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    java.lang.String getProductID() -> getProductID
    java.lang.String getNormalizedProductID() -> getNormalizedProductID
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    void maybeAppend(java.lang.String,java.lang.StringBuffer) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuffer) -> maybeAppend
    java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    java.lang.String urlDecode(java.lang.String) -> urlDecode
    int findFirstEscape(char[]) -> findFirstEscape
    int parseHexDigit(char) -> parseHexDigit
    boolean isStringOfDigits(java.lang.String,int) -> isStringOfDigits
    boolean isSubstringOfDigits(java.lang.String,int,int) -> isSubstringOfDigits
    java.util.Hashtable parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    void appendKeyValue(java.lang.String,int,int,java.util.Hashtable) -> appendKeyValue
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
    java.lang.String[] toStringArray(java.util.Vector) -> toStringArray
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    void addNumberVia(java.util.Vector,java.util.Vector,java.lang.String) -> addNumberVia
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getSMSURI() -> getSMSURI
    java.lang.String[] getNumbers() -> getNumbers
    java.lang.String[] getVias() -> getVias
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    java.lang.String getNumber() -> getNumber
    java.lang.String getTelURI() -> getTelURI
    java.lang.String getTitle() -> getTitle
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    java.lang.String getText() -> getText
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String getURI() -> getURI
    java.lang.String getTitle() -> getTitle
    boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    boolean containsUser() -> containsUser
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String massageURI(java.lang.String) -> massageURI
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidURI(java.lang.String) -> isBasicallyValidURI
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchVCardPrefixedField(java.lang.String,java.lang.String,boolean) -> matchVCardPrefixedField
    java.lang.String stripContinuationCRLF(java.lang.String) -> stripContinuationCRLF
    java.lang.String decodeQuotedPrintable(java.lang.String,java.lang.String) -> decodeQuotedPrintable
    int toHexValue(char) -> toHexValue
    void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuffer) -> maybeAppendFragment
    java.lang.String matchSingleVCardPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    boolean isLikeVCardDate(java.lang.String) -> isLikeVCardDate
    java.lang.String formatAddress(java.lang.String) -> formatAddress
    void formatNames(java.lang.String[]) -> formatNames
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuffer) -> maybeAppendComponent
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    java.lang.String getSsid() -> getSsid
    java.lang.String getNetworkEncryption() -> getNetworkEncryption
    java.lang.String getPassword() -> getPassword
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.optional.AbstractNDEFResultParser -> com.google.zxing.client.result.optional.AbstractNDEFResultParser:
    java.lang.String bytesToString(byte[],int,int,java.lang.String) -> bytesToString
com.google.zxing.client.result.optional.NDEFRecord -> com.google.zxing.client.result.optional.NDEFRecord:
    int SUPPORTED_HEADER_MASK -> SUPPORTED_HEADER_MASK
    int SUPPORTED_HEADER -> SUPPORTED_HEADER
    java.lang.String TEXT_WELL_KNOWN_TYPE -> TEXT_WELL_KNOWN_TYPE
    java.lang.String URI_WELL_KNOWN_TYPE -> URI_WELL_KNOWN_TYPE
    java.lang.String SMART_POSTER_WELL_KNOWN_TYPE -> SMART_POSTER_WELL_KNOWN_TYPE
    java.lang.String ACTION_WELL_KNOWN_TYPE -> ACTION_WELL_KNOWN_TYPE
    int header -> header
    java.lang.String type -> type
    byte[] payload -> payload
    int totalRecordLength -> totalRecordLength
    com.google.zxing.client.result.optional.NDEFRecord readRecord(byte[],int) -> readRecord
    boolean isMessageBegin() -> isMessageBegin
    boolean isMessageEnd() -> isMessageEnd
    java.lang.String getType() -> getType
    byte[] getPayload() -> getPayload
    int getTotalRecordLength() -> getTotalRecordLength
com.google.zxing.client.result.optional.NDEFSmartPosterParsedResult -> com.google.zxing.client.result.optional.NDEFSmartPosterParsedResult:
    int ACTION_UNSPECIFIED -> ACTION_UNSPECIFIED
    int ACTION_DO -> ACTION_DO
    int ACTION_SAVE -> ACTION_SAVE
    int ACTION_OPEN -> ACTION_OPEN
    java.lang.String title -> title
    java.lang.String uri -> uri
    int action -> action
    java.lang.String getTitle() -> getTitle
    java.lang.String getURI() -> getURI
    int getAction() -> getAction
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.optional.NDEFSmartPosterResultParser -> com.google.zxing.client.result.optional.NDEFSmartPosterResultParser:
    com.google.zxing.client.result.optional.NDEFSmartPosterParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.optional.NDEFTextResultParser -> com.google.zxing.client.result.optional.NDEFTextResultParser:
    com.google.zxing.client.result.TextParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] decodeTextPayload(byte[]) -> decodeTextPayload
com.google.zxing.client.result.optional.NDEFURIResultParser -> com.google.zxing.client.result.optional.NDEFURIResultParser:
    java.lang.String[] URI_PREFIXES -> URI_PREFIXES
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String decodeURIPayload(byte[]) -> decodeURIPayload
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    int getSize() -> getSize
    int getSizeInBytes() -> getSizeInBytes
    void ensureCapacity(int) -> ensureCapacity
    boolean get(int) -> get
    void set(int) -> set
    void flip(int) -> flip
    void setBulk(int,int) -> setBulk
    void clear() -> clear
    boolean isRange(int,int,boolean) -> isRange
    void appendBit(boolean) -> appendBit
    void appendBits(int,int) -> appendBits
    void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    void xor(com.google.zxing.common.BitArray) -> xor
    void toBytes(int,byte[],int,int) -> toBytes
    int[] getBitArray() -> getBitArray
    void reverse() -> reverse
    int[] makeArray(int) -> makeArray
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    boolean get(int,int) -> get
    void set(int,int) -> set
    void flip(int,int) -> flip
    void clear() -> clear
    void setRegion(int,int,int,int) -> setRegion
    com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    int[] getTopLeftOnBit() -> getTopLeftOnBit
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    int readBits(int) -> readBits
    int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    java.util.Hashtable VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Hashtable NAME_TO_ECI -> NAME_TO_ECI
    java.lang.String encodingName -> encodingName
    void initialize() -> initialize
    java.lang.String getEncodingName() -> getEncodingName
    void addCharacterSet(int,java.lang.String) -> addCharacterSet
    void addCharacterSet(int,java.lang.String[]) -> addCharacterSet
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
com.google.zxing.common.Collections -> com.google.zxing.common.Collections:
    void insertionSort(java.util.Vector,com.google.zxing.common.Comparator) -> insertionSort
com.google.zxing.common.Comparator -> com.google.zxing.common.Comparator:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.Vector byteSegments -> byteSegments
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    byte[] getRawBytes() -> getRawBytes
    java.lang.String getText() -> getText
    java.util.Vector getByteSegments() -> getByteSegments
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.ECI -> com.google.zxing.common.ECI:
    int value -> value
    int getValue() -> getValue
    com.google.zxing.common.ECI getECIByValue(int) -> getECIByValue
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] luminances -> luminances
    int[] buckets -> buckets
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void initArrays(int) -> initArrays
    int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    com.google.zxing.common.BitMatrix matrix -> matrix
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void binarizeEntireImage() -> binarizeEntireImage
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    void threshold8x8Block(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> threshold8x8Block
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    void transformPoints(float[]) -> transformPoints
    void transformPoints(float[],float[]) -> transformPoints
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    java.lang.String guessEncoding(byte[],java.util.Hashtable) -> guessEncoding
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    com.google.zxing.ResultPoint[] detect() -> detect
    int round(float) -> round
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    int distanceL2(float,float,float,float) -> distanceL2
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GF256 -> com.google.zxing.common.reedsolomon.GF256:
    com.google.zxing.common.reedsolomon.GF256 QR_CODE_FIELD -> QR_CODE_FIELD
    com.google.zxing.common.reedsolomon.GF256 DATA_MATRIX_FIELD -> DATA_MATRIX_FIELD
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GF256Poly zero -> zero
    com.google.zxing.common.reedsolomon.GF256Poly one -> one
    com.google.zxing.common.reedsolomon.GF256Poly getZero() -> getZero
    com.google.zxing.common.reedsolomon.GF256Poly getOne() -> getOne
    com.google.zxing.common.reedsolomon.GF256Poly buildMonomial(int,int) -> buildMonomial
    int addOrSubtract(int,int) -> addOrSubtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
com.google.zxing.common.reedsolomon.GF256Poly -> com.google.zxing.common.reedsolomon.GF256Poly:
    com.google.zxing.common.reedsolomon.GF256 field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(com.google.zxing.common.reedsolomon.GF256Poly) -> addOrSubtract
    com.google.zxing.common.reedsolomon.GF256Poly multiply(com.google.zxing.common.reedsolomon.GF256Poly) -> multiply
    com.google.zxing.common.reedsolomon.GF256Poly multiply(int) -> multiply
    com.google.zxing.common.reedsolomon.GF256Poly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.common.reedsolomon.GF256Poly[] divide(com.google.zxing.common.reedsolomon.GF256Poly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GF256 field -> field
    void decode(int[],int) -> decode
    com.google.zxing.common.reedsolomon.GF256Poly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GF256Poly,com.google.zxing.common.reedsolomon.GF256Poly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GF256Poly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GF256Poly,int[],boolean) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GF256 field -> field
    java.util.Vector cachedGenerators -> cachedGenerators
    com.google.zxing.common.reedsolomon.GF256Poly buildGenerator(int) -> buildGenerator
    void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    byte[] readCodewords() -> readCodewords
    boolean readModule(int,int,int,int) -> readModule
    int readUtah(int,int,int,int) -> readUtah
    int readCorner1(int,int) -> readCorner1
    int readCorner2(int,int) -> readCorner2
    int readCorner3(int,int) -> readCorner3
    int readCorner4(int,int) -> readCorner4
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    int PAD_ENCODE -> PAD_ENCODE
    int ASCII_ENCODE -> ASCII_ENCODE
    int C40_ENCODE -> C40_ENCODE
    int TEXT_ENCODE -> TEXT_ENCODE
    int ANSIX12_ENCODE -> ANSIX12_ENCODE
    int EDIFACT_ENCODE -> EDIFACT_ENCODE
    int BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    int decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuffer,java.lang.StringBuffer) -> decodeAsciiSegment
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuffer) -> decodeC40Segment
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuffer) -> decodeTextSegment
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuffer) -> decodeAnsiX12Segment
    void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuffer) -> decodeEdifactSegment
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuffer,java.util.Vector) -> decodeBase256Segment
    byte unrandomize255State(int,int) -> unrandomize255State
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int getSymbolSizeRows() -> getSymbolSizeRows
    int getSymbolSizeColumns() -> getSymbolSizeColumns
    int getDataRegionSizeRows() -> getDataRegionSizeRows
    int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    int getTotalCodewords() -> getTotalCodewords
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$1 -> com.google.zxing.datamatrix.decoder.Version$1:
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewords() -> getECCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    java.lang.Integer[] INTEGERS -> INTEGERS
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    int round(float) -> round
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    void increment(java.util.Hashtable,com.google.zxing.ResultPoint) -> increment
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleGrid
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$1 -> com.google.zxing.datamatrix.detector.Detector$1:
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    com.google.zxing.ResultPoint getFrom() -> getFrom
    com.google.zxing.ResultPoint getTo() -> getTo
    int getTransitions() -> getTransitions
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    void reset() -> reset
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decodeMultiple
    void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Hashtable,java.util.Vector,int,int) -> doDecodeMultiple
    com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decodeMultiple
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    com.google.zxing.common.DetectorResult[] detectMulti(java.util.Hashtable) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    com.google.zxing.qrcode.detector.FinderPattern[][] selectBestPatterns() -> selectBestPatterns
    com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Hashtable) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1 -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1:
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int minCharacterLength -> minCharacterLength
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    boolean arrayContains(char[],char) -> arrayContains
    char toNarrowWidePattern(int[]) -> toNarrowWidePattern
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.StringBuffer) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
    byte[] encode(java.lang.String) -> encode
    void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toPattern(int[]) -> toPattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.StringBuffer) -> decodeExtended
    void checkChecksums(java.lang.StringBuffer) -> checkChecksums
    void checkOneChecksum(java.lang.StringBuffer,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuffer) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    void determineFirstDigit(java.lang.StringBuffer,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int codeWidth -> codeWidth
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuffer) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int codeWidth -> codeWidth
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.Vector ranges -> ranges
    java.util.Vector countryIdentifiers -> countryIdentifiers
    java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    void add(int[],java.lang.String) -> add
    void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuffer) -> decodeMiddle
    int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    java.util.Vector readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    java.util.Vector readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    void reset() -> reset
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> doDecode
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Hashtable) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuffer) -> decodeMiddle
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuffer decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuffer) -> decodeMiddle
    int extensionChecksum(java.lang.String) -> extensionChecksum
    int determineCheckDigit(int) -> determineCheckDigit
    java.util.Hashtable parseExtensionString(java.lang.String) -> parseExtensionString
    java.lang.Integer parseExtension2String(java.lang.String) -> parseExtension2String
    java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuffer decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Hashtable) -> decodeRow
    boolean checkChecksum(java.lang.String) -> checkChecksum
    boolean checkStandardUPCEANChecksum(java.lang.String) -> checkStandardUPCEANChecksum
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuffer) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
    com.google.zxing.common.BitMatrix renderResult(byte[],int,int) -> renderResult
    int appendPattern(byte[],int,int[],int) -> appendPattern
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuffer) -> decodeMiddle
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    boolean checkChecksum(java.lang.String) -> checkChecksum
    void determineNumSysAndCheckDigit(java.lang.StringBuffer,int) -> determineNumSysAndCheckDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    int parseFinderValue(int[],int[][]) -> parseFinderValue
    int count(int[]) -> count
    void increment(int[],float[]) -> increment
    void decrement(int[],float[]) -> decrement
    boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    int getValue() -> getValue
    int getChecksumPortion() -> getChecksumPortion
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    int getValue() -> getValue
    int[] getStartEnd() -> getStartEnd
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    int getCount() -> getCount
    void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.Vector possibleLeftPairs -> possibleLeftPairs
    java.util.Vector possibleRightPairs -> possibleRightPairs
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    void addOrTally(java.util.Vector,com.google.zxing.oned.rss.Pair) -> addOrTally
    void reset() -> reset
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Hashtable) -> decodePair
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    int[] getRSSwidths(int,int,int,int,boolean) -> getRSSwidths
    int getRSSvalue(int[],int,boolean) -> getRSSvalue
    int combins(int,int) -> combins
    int[] elements(int[],int,int) -> elements
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    com.google.zxing.common.BitArray buildBitArray(java.util.Vector) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    boolean mayBeLast() -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    boolean mustBeLast() -> mustBeLast
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int LONGEST_SEQUENCE_SIZE -> LONGEST_SEQUENCE_SIZE
    int MAX_PAIRS -> MAX_PAIRS
    java.util.Vector pairs -> pairs
    int[] startEnd -> startEnd
    int[] currentSequence -> currentSequence
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Hashtable) -> decodeRow
    void reset() -> reset
    java.util.Vector decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    com.google.zxing.Result constructResult(java.util.Vector) -> constructResult
    boolean checkChecksum() -> checkChecksum
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.Vector,int) -> retrieveNextPair
    boolean checkPairSequence(java.util.Vector,com.google.zxing.oned.rss.FinderPattern) -> checkPairSequence
    void findNextPair(com.google.zxing.common.BitArray,java.util.Vector,int) -> findNextPair
    void reverseCounters(int[]) -> reverseCounters
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    void addWeightCode(java.lang.StringBuffer,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    void addWeightCode(java.lang.StringBuffer,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int headerSize -> headerSize
    int lastDigitSize -> lastDigitSize
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int headerSize -> headerSize
    int lastDigitSize -> lastDigitSize
    int firstThreeDigitsSize -> firstThreeDigitsSize
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int headerSize -> headerSize
    int weightSize -> weightSize
    int dateSize -> dateSize
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    java.lang.String parseInformation() -> parseInformation
    void encodeCompressedDate(java.lang.StringBuffer,int) -> encodeCompressedDate
    void addWeightCode(java.lang.StringBuffer,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int headerSize -> headerSize
    int weightSize -> weightSize
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int gtinSize -> gtinSize
    void encodeCompressedGtin(java.lang.StringBuffer,int) -> encodeCompressedGtin
    void encodeCompressedGtinWithoutAI(java.lang.StringBuffer,int,int) -> encodeCompressedGtinWithoutAI
    void appendCheckDigit(java.lang.StringBuffer,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    void encodeCompressedWeight(java.lang.StringBuffer,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuffer,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    java.lang.String parseInformation() -> parseInformation
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    int encoding -> encoding
    int NUMERIC -> NUMERIC
    int ALPHA -> ALPHA
    int ISO_IEC_646 -> ISO_IEC_646
    boolean isAlpha() -> isAlpha
    boolean isNumeric() -> isNumeric
    boolean isIsoIec646() -> isIsoIec646
    void setNumeric() -> setNumeric
    void setAlpha() -> setAlpha
    void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    char getValue() -> getValue
    boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    java.lang.String getNewString() -> getNewString
    boolean isRemaining() -> isRemaining
    int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    int getFirstDigit() -> getFirstDigit
    int getSecondDigit() -> getSecondDigit
    int getValue() -> getValue
    boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuffer buffer -> buffer
    java.lang.String decodeAllCodes(java.lang.StringBuffer,int) -> decodeAllCodes
    boolean isStillNumeric(int) -> isStillNumeric
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    boolean isStillIsoIec646(int) -> isStillIsoIec646
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    boolean isStillAlpha(int) -> isStillAlpha
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.pdf417.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    void reset() -> reset
com.google.zxing.pdf417.decoder.BitMatrixParser -> com.google.zxing.pdf417.decoder.BitMatrixParser:
    int MAX_ROW_DIFFERENCE -> MAX_ROW_DIFFERENCE
    int MAX_ROWS -> MAX_ROWS
    int MAX_CW_CAPACITY -> MAX_CW_CAPACITY
    int MODULES_IN_SYMBOL -> MODULES_IN_SYMBOL
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    int rows -> rows
    int leftColumnECData -> leftColumnECData
    int rightColumnECData -> rightColumnECData
    int eraseCount -> eraseCount
    int[] erasures -> erasures
    int ecLevel -> ecLevel
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    int[] readCodewords() -> readCodewords
    int[] trimArray(int[],int) -> trimArray
    int processRow(int[],int,int,int[],int) -> processRow
    int getCodeword(long) -> getCodeword
    int findCodewordIndex(long) -> findCodewordIndex
    int[] getErasures() -> getErasures
    int getECLevel() -> getECLevel
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int ALPHA -> ALPHA
    int LOWER -> LOWER
    int MIXED -> MIXED
    int PUNCT -> PUNCT
    int PUNCT_SHIFT -> PUNCT_SHIFT
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.lang.String[] EXP900 -> EXP900
    com.google.zxing.common.DecoderResult decode(int[]) -> decode
    int textCompaction(int[],int,java.lang.StringBuffer) -> textCompaction
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuffer) -> decodeTextCompaction
    int byteCompaction(int,int[],int,java.lang.StringBuffer) -> byteCompaction
    int numericCompaction(int[],int,java.lang.StringBuffer) -> numericCompaction
    java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
    java.lang.StringBuffer multiply(java.lang.String,int) -> multiply
    java.lang.StringBuffer add(java.lang.String,java.lang.String) -> add
com.google.zxing.pdf417.decoder.Decoder -> com.google.zxing.pdf417.decoder.Decoder:
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void verifyCodewordCount(int[],int) -> verifyCodewordCount
    int correctErrors(int[],int[],int) -> correctErrors
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int SKEW_THRESHOLD -> SKEW_THRESHOLD
    int[] START_PATTERN -> START_PATTERN
    int[] START_PATTERN_REVERSE -> START_PATTERN_REVERSE
    int[] STOP_PATTERN -> STOP_PATTERN
    int[] STOP_PATTERN_REVERSE -> STOP_PATTERN_REVERSE
    com.google.zxing.BinaryBitmap image -> image
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Hashtable) -> detect
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix) -> findVertices
    com.google.zxing.ResultPoint[] findVertices180(com.google.zxing.common.BitMatrix) -> findVertices180
    void correctCodeWordVertices(com.google.zxing.ResultPoint[],boolean) -> correctCodeWordVertices
    float computeModuleWidth(com.google.zxing.ResultPoint[]) -> computeModuleWidth
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleGrid
    int round(float) -> round
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[]) -> findGuardPattern
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Hashtable) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    int copyBit(int,int,int) -> copyBit
    byte[] readCodewords() -> readCodewords
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Hashtable) -> decode
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuffer,int) -> decodeKanjiSegment
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuffer,int,com.google.zxing.common.CharacterSetECI,java.util.Vector,java.util.Hashtable) -> decodeByteSegment
    char toAlphaNumericChar(int) -> toAlphaNumericChar
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuffer,int,boolean) -> decodeAlphanumericSegment
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuffer,int) -> decodeNumericSegment
    int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Hashtable) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Hashtable) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int ordinal -> ordinal
    int bits -> bits
    java.lang.String name -> name
    int ordinal() -> ordinal
    int getBits() -> getBits
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    int numBitsDiffering(int,int) -> numBitsDiffering
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    byte getDataMask() -> getDataMask
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    java.lang.String name -> name
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    int getBits() -> getBits
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    int getTotalCodewords() -> getTotalCodewords
    int getDimensionForVersion() -> getDimensionForVersion
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    int getNumBlocks() -> getNumBlocks
    int getTotalECCodewords() -> getTotalECCodewords
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    boolean aboutEquals(float,float,float) -> aboutEquals
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.Vector possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Hashtable) -> detect
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
    int round(float) -> round
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    float getEstimatedModuleSize() -> getEstimatedModuleSize
    int getCount() -> getCount
    void incrementCount() -> incrementCount
    boolean aboutEquals(float,float,float) -> aboutEquals
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    com.google.zxing.common.BitMatrix image -> image
    java.util.Vector possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    java.util.Vector getPossibleCenters() -> getPossibleCenters
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Hashtable) -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    boolean handlePossibleCenter(int[],int,int) -> handlePossibleCenter
    int findRowSkip() -> findRowSkip
    boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    byte[] getDataBytes() -> getDataBytes
    byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    byte get(int,int) -> get
    byte[][] getArray() -> getArray
    void set(int,int,byte) -> set
    void set(int,int,int) -> set
    void set(int,int,boolean) -> set
    void clear(byte) -> clear
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    void encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.encoder.QRCode) -> encode
    void encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Hashtable,com.google.zxing.qrcode.encoder.QRCode) -> encode
    int getAlphanumericCode(int) -> getAlphanumericCode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    void initQRCode(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.qrcode.encoder.QRCode) -> initQRCode
    void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    void interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int,com.google.zxing.common.BitArray) -> interleaveWithECBytes
    byte[] generateECBytes(byte[],int) -> generateECBytes
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    void appendLengthInfo(int,int,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    void appendNumericBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendNumericBytes
    void appendAlphanumericBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    void appendECI(com.google.zxing.common.ECI,com.google.zxing.common.BitArray) -> appendECI
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] HORIZONTAL_SEPARATION_PATTERN -> HORIZONTAL_SEPARATION_PATTERN
    int[][] VERTICAL_SEPARATION_PATTERN -> VERTICAL_SEPARATION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    void embedBasicPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    void maybeEmbedVersionInfo(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    int findMSBSet(int) -> findMSBSet
    int calculateBCHCode(int,int) -> calculateBCHCode
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    void makeVersionInfoBits(int,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    boolean isEmpty(int) -> isEmpty
    boolean isValidValue(int) -> isValidValue
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    void maybeEmbedPositionAdjustmentPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    int version -> version
    int matrixWidth -> matrixWidth
    int maskPattern -> maskPattern
    int numTotalBytes -> numTotalBytes
    int numDataBytes -> numDataBytes
    int numECBytes -> numECBytes
    int numRSBlocks -> numRSBlocks
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    int getVersion() -> getVersion
    int getMatrixWidth() -> getMatrixWidth
    int getMaskPattern() -> getMaskPattern
    int getNumTotalBytes() -> getNumTotalBytes
    int getNumDataBytes() -> getNumDataBytes
    int getNumECBytes() -> getNumECBytes
    int getNumRSBlocks() -> getNumRSBlocks
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    int at(int,int) -> at
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    void setVersion(int) -> setVersion
    void setMatrixWidth(int) -> setMatrixWidth
    void setMaskPattern(int) -> setMaskPattern
    void setNumTotalBytes(int) -> setNumTotalBytes
    void setNumDataBytes(int) -> setNumDataBytes
    void setNumECBytes(int) -> setNumECBytes
    void setNumRSBlocks(int) -> setNumRSBlocks
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    boolean isValidMaskPattern(int) -> isValidMaskPattern
com.mcnc.hsmart.configuration.model.ConfigurationModel -> com.mcnc.hsmart.configuration.a.a:
    com.mcnc.hsmart.configuration.model.ConfigurationModel configurationModel -> a
    android.content.SharedPreferences configurationSharedPreferences -> b
    android.content.SharedPreferences$Editor configurationEditor -> c
    java.lang.String network_accessIP -> d
    java.lang.String network_accessPort -> e
    java.lang.String network_accessContext -> f
    java.lang.String network_ssl -> g
    java.lang.String network_downloadURL -> h
    java.lang.String network_downloadPort -> i
    java.lang.String network_downloadContext -> j
    java.lang.String network_downloadSsl -> k
    int imageMode -> l
    java.lang.String network_resourceURL -> m
    java.lang.String contentsRoot -> n
    java.lang.String userId -> o
    java.lang.String password -> p
    int versionAppMajor -> q
    int versionAppMinor -> r
    int versionAppBuild -> s
    int versionContentMajor -> t
    int versionContentMinor -> u
    int versionMetaMajor -> v
    int versionMetaMinor -> w
    com.mcnc.hsmart.configuration.model.ConfigurationModel getConfigurationModel() -> a
    java.lang.Boolean setNetwork_accessIP(java.lang.String) -> a
    java.lang.String getNetwork_accessIP() -> b
    boolean setNetwork_accessPort(java.lang.String) -> b
    java.lang.String getNetwork_accessPort() -> c
    java.lang.String getServerContextRoot() -> d
    void setServerContextRoot(java.lang.String) -> c
    java.lang.String getNetwork_SSL() -> e
    void setNetwork_SSL(java.lang.String) -> d
    java.lang.String getNetwork_downloadURL() -> f
    boolean setNetwork_downloadURL(java.lang.String) -> e
    java.lang.String getNetwork_downloadPort() -> g
    boolean setNetwork_downloadPort(java.lang.String) -> f
    java.lang.String getNetwork_downloadContext() -> h
    boolean setNetwork_downloadContext(java.lang.String) -> g
    java.lang.String getNetwork_downloadSSL() -> i
    void setNetwork_downloadSSL(java.lang.String) -> h
    int getImageMode() -> j
    boolean setImageMode(int) -> a
    java.lang.String getNetwork_resourceURL() -> k
    boolean setNetwork_resourceURL(java.lang.String) -> i
    java.lang.String getContentsRoot() -> l
    void setContentsRoot(java.lang.String) -> j
    java.lang.String getUserId() -> m
    boolean setUserId(java.lang.String) -> k
    java.lang.String getPassword() -> n
    boolean setPassword(java.lang.String) -> l
    int getVersionAppMajor() -> o
    int getVersionAppMinor() -> p
    int getVersionAppBuild() -> q
    int getVersionContentMajor() -> r
    void setVersionContentMajor(int) -> b
    int getVersionContentMinor() -> s
    void setVersionContentMinor(int) -> c
    int getVersionMetaMajor() -> t
    int getVersionMetaMinor() -> u
    void setCheckUpdate(boolean) -> a
    boolean getBooleanSharedPreferences(java.lang.String) -> m
    void setBooleanSharedPreferences(java.lang.String,boolean) -> a
    java.lang.String getStringSharedPreferences(java.lang.String) -> n
    void setStringSharedPreferences(java.lang.String,java.lang.String) -> a
    int getIntSharedPreferences(java.lang.String) -> o
    void setIntSharedPreferences(java.lang.String,int) -> a
com.mcnc.hsmart.configuration.provider.LocalFileProviderHsmart -> com.mcnc.hsmart.configuration.provider.LocalFileProviderHsmart:
    java.lang.String URI_PREFIX -> a
    java.lang.String URI_LOCALFILE -> b
    void setProviderName(java.lang.String) -> a
    void setProviderPath(java.lang.String) -> b
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    boolean onCreate() -> onCreate
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity -> com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity:
    android.content.Context mContext -> o
    android.widget.TextView accessIPTitle -> p
    android.widget.EditText accessIP -> q
    android.widget.TextView accessPortTitle -> r
    android.widget.EditText accessPort -> s
    android.widget.TextView accessContextTitle -> t
    android.widget.EditText accessContext -> u
    android.widget.TextView sslTitle -> v
    android.widget.EditText ssl -> w
    android.widget.TextView downloadURLTitle -> x
    android.widget.EditText downloadURL -> y
    android.widget.TextView downloadPortTitle -> z
    android.widget.EditText downloadPort -> A
    android.widget.TextView downloadContextTitle -> B
    android.widget.EditText downloadContext -> C
    android.widget.TextView downloadSslTitle -> D
    android.widget.EditText downloadSsl -> E
    android.widget.TextView loglevelTitle -> F
    android.widget.EditText loglevel -> G
    android.widget.TextView imageModeTitle -> H
    android.widget.EditText imageMode -> I
    android.widget.TextView resourceURLTitle -> J
    android.widget.EditText resourceURL -> K
    android.widget.TextView contentsRootTitle -> L
    android.widget.EditText contentsRoot -> M
    android.widget.TextView alertMessgeTitle -> N
    android.widget.Button networkSaveButton -> O
    java.lang.String TAG -> P
    void onCreateContent(android.os.Bundle) -> a
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void setHeader(android.widget.LinearLayout) -> c
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    boolean checkIPformat$552c4dfd() -> a
    void networkConfigutionSave() -> b
    void alert(android.content.Context,java.lang.String) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    android.widget.EditText access$0(com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity) -> a
    android.widget.EditText access$1(com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity) -> b
    android.widget.EditText access$2(com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity) -> c
    android.widget.EditText access$3(com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity) -> d
    android.content.Context access$4(com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity) -> e
com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity$1 -> com.mcnc.hsmart.configuration.view.a:
    com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.configuration.view.NetworkConfigurationActivity$2 -> com.mcnc.hsmart.configuration.view.b:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.controller.Smart2ProcessController -> com.mcnc.hsmart.controller.Smart2ProcessController:
    java.util.HashMap memoryData -> a
    android.content.SharedPreferences webSharedPreferences -> b
    java.lang.String TAG -> k
    void onCreate() -> onCreate
    void initTask() -> a
    void startActivityForResult(android.content.Intent,android.app.Activity) -> a
com.mcnc.hsmart.core.comm.CommManager -> com.mcnc.hsmart.core.comm.a:
    com.mcnc.hsmart.core.comm.CommManager instance -> a
    java.util.HashMap services -> b
    com.mcnc.hsmart.core.comm.CommManager getInstance() -> a
    com.mcnc.hsmart.core.comm.ICommService getService(java.lang.String) -> a
com.mcnc.hsmart.core.comm.ConnectionChangeReceiver -> com.mcnc.hsmart.core.comm.ConnectionChangeReceiver:
    java.lang.String TAG -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mcnc.hsmart.core.comm.HttpService -> com.mcnc.hsmart.core.comm.b:
    java.lang.String TAG -> a
    org.apache.http.protocol.HttpContext localContext -> b
    org.apache.http.client.CookieStore cookieStore -> c
    org.apache.http.client.HttpClient httpclient -> d
    int MAX_TOTAL_CONNECTIONS -> e
    int CONNECTION_TIMEOUT -> f
    int SOCKET_TIMEOUT -> g
    int HTTP_PORT -> h
    java.lang.Object send(java.lang.Object) -> a
    org.apache.http.HttpResponse doPost(java.lang.String,org.json.JSONObject) -> a
    int setReadTimeOut(int) -> a
com.mcnc.hsmart.core.comm.HttpService$1 -> com.mcnc.hsmart.core.comm.c:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.mcnc.hsmart.core.comm.HttpService$3 -> com.mcnc.hsmart.core.comm.d:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.mcnc.hsmart.core.comm.ICommService -> com.mcnc.hsmart.core.comm.e:
    java.lang.Object send(java.lang.Object) -> a
    int setReadTimeOut(int) -> a
com.mcnc.hsmart.core.comm.ssl.EasySSLProtocalSocketFactory -> com.mcnc.hsmart.core.comm.a.a:
    javax.net.ssl.SSLContext sslcontext -> a
    javax.net.ssl.SSLContext createEasySSLContext() -> a
    javax.net.ssl.SSLContext getSSLContext() -> b
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.mcnc.hsmart.core.comm.ssl.EasySSLProtocalSocketFactory$1 -> com.mcnc.hsmart.core.comm.a.b:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.mcnc.hsmart.core.common.Request -> com.mcnc.hsmart.core.a.a:
    java.lang.String TAG -> a
    java.lang.String ID -> b
    java.lang.String trCode -> c
    java.lang.Object data -> d
    com.mcnc.hsmart.core.view.BaseActivity srcActivity -> e
    java.lang.Class targetActivity -> f
    com.mcnc.hsmart.core.view.IResponseListener listener -> g
    java.lang.String targetPage -> h
    boolean asyncDownload -> i
    java.lang.String downloadFileName -> j
    boolean replaceDownloadFile -> k
    boolean terminated -> l
    int classCnt -> m
    com.mcnc.hsmart.core.view.BaseActivity getSrcActivity() -> a
    void setSrcActivity(com.mcnc.hsmart.core.view.BaseActivity) -> a
    java.lang.String getTrCode() -> b
    void setTrCode(java.lang.String) -> a
    java.lang.Object getData() -> c
    void setData(java.lang.Object) -> a
    com.mcnc.hsmart.core.view.IResponseListener getListener() -> d
    void setListener(com.mcnc.hsmart.core.view.IResponseListener) -> a
    java.lang.String getTargetPage() -> e
    void setTargetPage(java.lang.String) -> b
    boolean isTerminated() -> f
    void setTerminated$1385ff() -> g
    void setCallType$552c4e01() -> h
    java.lang.String getID() -> i
    void setID(java.lang.String) -> c
    boolean isAsyncDownload() -> j
    void setAsyncDownload(boolean) -> a
    java.lang.String getDownloadFileName() -> k
    void setDownloadFileName(java.lang.String) -> d
    boolean isReplaceDownloadFile() -> l
    void setReplaceDownloadFile$1385ff() -> m
    java.lang.Class getTargetActivity() -> n
    void setTargetActivity(java.lang.Class) -> a
    android.webkit.WebView getRequestWebView() -> o
com.mcnc.hsmart.core.common.Response -> com.mcnc.hsmart.core.a.b:
    java.lang.Object data -> a
    com.mcnc.hsmart.core.common.Request request -> b
    java.lang.String targetPage -> c
    boolean error -> d
    android.content.Intent intent -> e
    java.lang.String callback -> f
    java.lang.Object getData() -> a
    void setData(java.lang.Object) -> a
    boolean isError() -> b
    void setError(boolean) -> a
    com.mcnc.hsmart.core.common.Request getRequest() -> c
    void setRequest(com.mcnc.hsmart.core.common.Request) -> a
    java.lang.Object getTargetPage() -> d
    void setTargetPage(java.lang.String) -> a
    android.content.Intent getIntent() -> e
    void setIntent(android.content.Intent) -> a
    java.lang.String getCallback() -> f
    void setCallback(java.lang.String) -> b
    java.lang.String toString() -> toString
com.mcnc.hsmart.core.controller.BaseProcessController -> com.mcnc.hsmart.core.controller.BaseProcessController:
    java.lang.String TAG -> a
    java.util.HashMap tasks -> c
    java.util.HashMap activities -> d
    java.util.HashMap dataMap -> b
    java.lang.String START_ACTIVITY -> e
    java.lang.String HOME_ACTIVITY -> f
    java.lang.String MAIN_ACTIVITY -> g
    java.lang.String DOWN_ACTIVITY -> h
    com.mcnc.hsmart.core.download.IDownload downloadService -> i
    com.mcnc.hsmart.core.upload.IUpload uploadService -> j
    android.os.Handler handler -> k
    void onCreate() -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void onTerminate() -> onTerminate
    void execute$b62c816(java.lang.String,com.mcnc.hsmart.core.common.Request) -> a
    com.mcnc.hsmart.core.task.AbstractBaseTask getTask(java.lang.String) -> d
    void putActivityClass(java.lang.String,java.lang.Class) -> a
    java.lang.Class getActivityClass(java.lang.String) -> a
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void handleResponse(com.mcnc.hsmart.core.common.Response) -> c
    java.lang.String getDataMap(java.lang.String) -> b
    java.lang.String putDataMap(java.lang.String) -> c
    com.mcnc.hsmart.core.download.IDownload getDownloadService() -> b
    com.mcnc.hsmart.core.upload.IUpload getUploadService() -> c
    void startActivityForResult(android.content.Intent,android.app.Activity) -> a
    void access$0(com.mcnc.hsmart.core.controller.BaseProcessController,android.os.Message) -> a
    java.lang.String access$1(com.mcnc.hsmart.core.controller.BaseProcessController) -> a
com.mcnc.hsmart.core.controller.BaseProcessController$1 -> com.mcnc.hsmart.core.controller.a:
    com.mcnc.hsmart.core.controller.BaseProcessController this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.core.controller.BaseProcessController$2 -> com.mcnc.hsmart.core.controller.b:
    com.mcnc.hsmart.core.controller.BaseProcessController this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.mcnc.hsmart.core.controller.BaseProcessController$3 -> com.mcnc.hsmart.core.controller.c:
    com.mcnc.hsmart.core.controller.BaseProcessController this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.mcnc.hsmart.core.download.AbstractDownloadService -> com.mcnc.hsmart.core.download.AbstractDownloadService:
    java.lang.String TAG -> d
    android.os.IBinder binder -> e
    java.util.HashMap notificationMap -> a
    java.lang.String path -> b
    android.app.NotificationManager notificationManager -> c
    void setDownloadPath(java.lang.String) -> a
    java.lang.String getDownloadPath() -> a
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onRebind(android.content.Intent) -> onRebind
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean onUnbind(android.content.Intent) -> onUnbind
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.mcnc.hsmart.core.download.AbstractDownloadService$DownloadServiceBinder -> com.mcnc.hsmart.core.download.a:
    com.mcnc.hsmart.core.download.AbstractDownloadService this$0 -> a
    com.mcnc.hsmart.core.download.IDownload getService() -> a
com.mcnc.hsmart.core.download.IDownload -> com.mcnc.hsmart.core.download.b:
    void asyncDownload(com.mcnc.hsmart.core.common.Request) -> a
    void syncDownload$4791104b(com.mcnc.hsmart.core.common.Request) -> b
com.mcnc.hsmart.core.exception.ReqCancelException -> com.mcnc.hsmart.core.b.a:
com.mcnc.hsmart.core.exception.RequestException -> com.mcnc.hsmart.core.b.b:
com.mcnc.hsmart.core.exception.ResponseException -> com.mcnc.hsmart.core.b.c:
com.mcnc.hsmart.core.exception.ServerException -> com.mcnc.hsmart.core.b.d:
com.mcnc.hsmart.core.log.ILoggerStrategy -> com.mcnc.hsmart.core.c.a:
com.mcnc.hsmart.core.log.Logger -> com.mcnc.hsmart.core.c.b:
    com.mcnc.hsmart.core.log.ILoggerStrategy logger -> b
    int LogLevel -> a
    void setLogLevel(int) -> a
    void f(java.lang.String,java.lang.String) -> a
    void d(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String) -> c
    void i(java.lang.String,java.lang.String) -> d
    void v(java.lang.String,java.lang.String) -> e
com.mcnc.hsmart.core.task.AbstractBaseTask -> com.mcnc.hsmart.core.d.a:
    com.mcnc.hsmart.core.controller.BaseProcessController controller -> a
    com.mcnc.hsmart.core.common.Request request -> b
    com.mcnc.hsmart.core.common.Response response -> c
    com.mcnc.hsmart.core.view.IResponseListener responseListener -> d
    com.mcnc.hsmart.core.common.Request getRequest() -> a
    void setRequest(com.mcnc.hsmart.core.common.Request) -> a
    com.mcnc.hsmart.core.common.Response getResponse() -> b
    void setResponse(com.mcnc.hsmart.core.common.Response) -> a
    com.mcnc.hsmart.core.view.IResponseListener getResponseListener() -> c
    void setResponseListener(com.mcnc.hsmart.core.view.IResponseListener) -> a
    com.mcnc.hsmart.core.controller.BaseProcessController getController() -> d
    void setController(com.mcnc.hsmart.core.controller.BaseProcessController) -> a
com.mcnc.hsmart.core.task.AbstractTask -> com.mcnc.hsmart.core.d.b:
    java.lang.String TAG -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.mcnc.hsmart.core.upload.AbstractUploadService -> com.mcnc.hsmart.core.upload.AbstractUploadService:
    java.lang.String TAG -> b
    android.os.IBinder binder -> c
    java.lang.String path -> a
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onRebind(android.content.Intent) -> onRebind
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean onUnbind(android.content.Intent) -> onUnbind
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.mcnc.hsmart.core.upload.AbstractUploadService$UploadServiceBinder -> com.mcnc.hsmart.core.upload.a:
    com.mcnc.hsmart.core.upload.AbstractUploadService this$0 -> a
    com.mcnc.hsmart.core.upload.IUpload getService() -> a
com.mcnc.hsmart.core.upload.IUpload -> com.mcnc.hsmart.core.upload.b:
    void syncUpload$4791104b(com.mcnc.hsmart.core.common.Request) -> a
com.mcnc.hsmart.core.util.Base64Coder -> com.mcnc.hsmart.core.e.a:
    char[] map1 -> a
    byte[] map2 -> b
    char[] encode(byte[],int) -> a
com.mcnc.hsmart.core.util.FileUtils -> com.mcnc.hsmart.core.e.b:
    void delete(java.io.File) -> a
com.mcnc.hsmart.core.util.ImageUtil -> com.mcnc.hsmart.core.e.c:
    java.lang.String ROOT_PATH -> a
    java.lang.String RESOURCE_URL -> c
    int screenDensity -> d
    java.lang.String CONTENT_ROOT -> b
    java.lang.String getUri(int,java.lang.String) -> a
    void setDensity(int) -> a
    void setProviderPath(java.lang.String) -> a
    void setResourceUrl(java.lang.String) -> b
    void setContentRoot(java.lang.String) -> c
    android.graphics.drawable.Drawable getDrawable(int,java.lang.String,android.content.Context) -> a
    android.graphics.drawable.Drawable getDrawableAsset(java.lang.String,android.content.Context) -> a
    android.graphics.drawable.Drawable getDrawableFile(java.lang.String) -> d
    android.graphics.drawable.Drawable LoadImageFromWebOperations(java.lang.String) -> e
com.mcnc.hsmart.core.view.AbstractActivity -> com.mcnc.hsmart.core.view.AbstractActivity:
    java.lang.String TAG -> c
    android.app.ProgressDialog dlg -> a
    com.mcnc.hsmart.core.common.Request request -> b
    void onCreate(android.os.Bundle) -> onCreate
    com.mcnc.hsmart.core.controller.BaseProcessController getController() -> a_
    void onCreateContent(android.os.Bundle) -> a
    void execute(java.lang.String,com.mcnc.hsmart.core.common.Request,boolean,int) -> a
    void hideProgress() -> d
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    android.app.ProgressDialog getDlg() -> e
    java.lang.String access$0(com.mcnc.hsmart.core.view.AbstractActivity) -> a
com.mcnc.hsmart.core.view.AbstractActivity$1 -> com.mcnc.hsmart.core.view.a:
    com.mcnc.hsmart.core.view.AbstractActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.mcnc.hsmart.core.view.AbstractActivity$2 -> com.mcnc.hsmart.core.view.b:
    com.mcnc.hsmart.core.view.AbstractActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.mcnc.hsmart.core.view.BaseActivity -> com.mcnc.hsmart.core.view.BaseActivity:
    com.phonegap.BrowserKey mKey -> o
    com.phonegap.CallbackServer callbackServer -> c
    java.lang.String url -> p
    java.lang.String baseUrl -> q
    int splashscreen -> r
    int loadUrlTimeoutValue -> d
    boolean keepRunning -> s
    java.lang.String TAG -> t
    android.widget.LinearLayout baseLayout -> e
    android.widget.LinearLayout headerLayout -> f
    android.widget.LinearLayout toolbarLayout -> g
    android.widget.LinearLayout bottomLayout -> h
    android.widget.LinearLayout emptyLayout -> i
    android.widget.FrameLayout frameLayout -> j
    android.webkit.WebView webView -> k
    int loadUrlTimeout -> l
    com.phonegap.api.PluginManager pluginManager -> m
    java.util.HashMap progressbarMap -> n
    void onCreateContent(android.os.Bundle) -> a
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void bindBrowser(android.webkit.WebView) -> a
    void loadUrl(java.lang.String) -> a
    boolean getBooleanProperty(java.lang.String,boolean) -> a
    int getIntegerProperty$505cff29(java.lang.String) -> c
    java.lang.String getStringProperty$7157d249(java.lang.String) -> b
    void addService(java.lang.String,java.lang.String) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void access$0(com.mcnc.hsmart.core.view.BaseActivity) -> a
    java.lang.String access$1(com.mcnc.hsmart.core.view.BaseActivity) -> b
com.mcnc.hsmart.core.view.BaseActivity$1 -> com.mcnc.hsmart.core.view.c:
    com.mcnc.hsmart.core.view.BaseActivity this$0 -> a
    com.mcnc.hsmart.core.view.BaseActivity val$me -> b
    java.lang.String val$url -> c
    void run() -> run
com.mcnc.hsmart.core.view.BaseActivity$1$1 -> com.mcnc.hsmart.core.view.d:
    com.mcnc.hsmart.core.view.BaseActivity val$me -> a
    int val$currentLoadUrlTimeout -> b
    void run() -> run
com.mcnc.hsmart.core.view.BaseAppActivity -> com.mcnc.hsmart.core.view.BaseAppActivity:
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void setHeader(android.widget.LinearLayout) -> c
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void addService(java.lang.String,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
com.mcnc.hsmart.core.view.BaseWebView -> com.mcnc.hsmart.core.view.e:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.view.BaseActivity context -> b
    com.mcnc.hsmart.core.view.BaseActivity access$0(com.mcnc.hsmart.core.view.BaseWebView) -> a
    java.lang.String access$1(com.mcnc.hsmart.core.view.BaseWebView) -> b
com.mcnc.hsmart.core.view.BaseWebView$BaseWebChromeClient -> com.mcnc.hsmart.core.view.f:
    java.lang.String TAG -> a
    long MAX_QUOTA -> b
    com.mcnc.hsmart.core.view.BaseWebView this$0 -> c
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
com.mcnc.hsmart.core.view.BaseWebView$BaseWebChromeClient$1 -> com.mcnc.hsmart.core.view.g:
    android.webkit.JsResult val$result -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.core.view.BaseWebView$BaseWebChromeClient$2 -> com.mcnc.hsmart.core.view.h:
    android.webkit.JsResult val$result -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.core.view.BaseWebView$BaseWebChromeClient$3 -> com.mcnc.hsmart.core.view.i:
    android.webkit.JsResult val$result -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.core.view.BaseWebView$BaseWebViewClient -> com.mcnc.hsmart.core.view.j:
    com.mcnc.hsmart.core.view.BaseActivity ctx -> a
    com.mcnc.hsmart.core.view.BaseWebView this$0 -> b
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.mcnc.hsmart.core.view.IResponseListener -> com.mcnc.hsmart.core.view.k:
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onError(com.mcnc.hsmart.core.common.Response) -> a
com.mcnc.hsmart.core.view.param.LayoutParam -> com.mcnc.hsmart.core.view.a.a:
    android.view.ViewGroup$LayoutParams FF -> a
    android.view.ViewGroup$LayoutParams FW -> b
    android.view.ViewGroup$LayoutParams WW -> c
    android.widget.LinearLayout$LayoutParams FF1 -> d
com.mcnc.hsmart.def.AppConfig -> com.mcnc.hsmart.a.a:
    int MAX_ACTIVITY_STACK_SIZE -> a
    java.lang.String START_PAGE -> b
    org.json.JSONArray HOME_PAGE_LIST -> c
    int TEXTCOLOR -> d
    boolean DEFAULT_TITLEBAR_VISIBLE -> e
    java.lang.String DEFAULT_TITLEBAR_IMAGE -> f
    boolean DEFAULT_BOTTOM_TOOLBAR_VISIBLE -> g
    java.lang.String DEFAULT_BOTTOM_TOOLBAR_IMAGE -> h
    org.json.JSONArray ALLOWED_DOMAIN -> i
com.mcnc.hsmart.def.Def -> com.mcnc.hsmart.a.b:
    java.lang.String PROJECT_NAME -> a
    java.lang.String APPLICTION_NAME -> b
    java.lang.String HYBRID_PATH -> c
    int TITLE_H -> d
    int TOP_BUTTON_W -> e
    int BOTTOM_H -> f
    int IMAGE_MODE -> g
    java.lang.String IMAGE_ROOT -> h
    boolean IS_RELEASE -> i
    boolean USE_VERSION_CHECK -> j
    java.lang.String ROOT_URL_IP -> k
    java.lang.String ROOT_URL_PORT -> l
    java.lang.String ROOT_URL_DIR -> m
    java.lang.String ROOT_URL_EXT -> n
    java.lang.String ROOT_DOWNLOAD_URL_IP -> o
    java.lang.String ROOT_DOWNLOAD_URL_PORT -> p
    java.lang.String ROOT_DOWNLOAD_URL_DIR -> q
    java.lang.String ROOT_DOWNLOAD_DIR -> r
    java.lang.String ROOT_UPLOAD_DIR -> s
    java.lang.String CONTENT_UPGRADE_URI -> t
    java.lang.String INSTALL_APP_NAME -> u
    java.lang.String ROOT_DIR_CONTENT -> v
    java.lang.String ROOT_DIR_NATIVE -> w
    java.lang.String ROOT_DIR_TEMP -> x
    boolean IS_SSL -> y
    boolean IS_SSL_DOWNLOAD -> z
    int LOG_LEVEL -> A
    int topTitleColor_01 -> B
    int topTitleColor_02 -> C
    int publicTransparent -> D
    int bg_White -> E
    int top_DipFontSize -> F
    int GALLARY_REQUEST_CODE -> G
    java.lang.String LICENSE_NO_VALUE -> H
    java.lang.String USER_TYPE_VALUE -> I
    java.lang.String DEVICE_TYPE_VALUE -> J
    java.lang.String USER_ID_VALUE -> K
    java.lang.String DEVICE_ID_VALUE -> L
    java.lang.String COMPANY_ID_VALUE -> M
    boolean IS_RESTART_BY_LOW_MEMORY -> N
    int screenDensity -> O
    int targetDensity -> P
    java.lang.String TRCODE_LOGIN -> Q
    java.lang.String TRCODE_DOWNLOAD -> R
    java.lang.String REQUESTURL -> S
    java.lang.String getRootURL() -> a
    java.lang.String getUploadRootURL() -> b
    java.lang.String getPrefixURL() -> d
    java.lang.String getDownloadPrefixURL() -> c
com.mcnc.hsmart.download.BaseDownloadService -> com.mcnc.hsmart.download.BaseDownloadService:
    java.util.regex.Pattern p -> e
    java.util.regex.Pattern p2 -> f
    java.io.File downloadDest -> d
    void asyncDownload(com.mcnc.hsmart.core.common.Request) -> a
    java.lang.String getFileName(java.io.File,java.lang.String,int) -> a
    void beforeAsyncDownload(com.mcnc.hsmart.core.common.Request) -> c
    void download(com.mcnc.hsmart.core.common.Request) -> d
    void afterAsyncDownload(com.mcnc.hsmart.core.common.Request) -> e
com.mcnc.hsmart.download.DownloadObject -> com.mcnc.hsmart.download.a:
    java.lang.String fileName -> a
    int icon -> b
    int percent -> c
    boolean complete -> d
    boolean isComplete() -> a
    void setComplete(boolean) -> a
    java.lang.String getFileName() -> b
    void setFileName(java.lang.String) -> a
    int getIcon() -> c
    void setIcon(int) -> a
    int getPercent() -> d
    void setPercent(int) -> b
com.mcnc.hsmart.download.DownloadServiceImpl -> com.mcnc.hsmart.download.DownloadServiceImpl:
    java.lang.String TAG -> e
    android.os.Handler handler -> f
    void beforeAsyncDownload(com.mcnc.hsmart.core.common.Request) -> c
    void download(com.mcnc.hsmart.core.common.Request) -> d
    void afterAsyncDownload(com.mcnc.hsmart.core.common.Request) -> e
    void syncDownload$4791104b(com.mcnc.hsmart.core.common.Request) -> b
com.mcnc.hsmart.download.DownloadServiceImpl$1 -> com.mcnc.hsmart.download.b:
    com.mcnc.hsmart.download.DownloadServiceImpl this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.download.DownloadServiceImpl$2 -> com.mcnc.hsmart.download.c:
    com.mcnc.hsmart.core.common.Request val$request -> a
    float val$viewTotalSize -> b
    float val$fileSize -> c
    void run() -> run
com.mcnc.hsmart.imageViewer.IImageContentView -> com.mcnc.hsmart.imageViewer.a:
    com.mcnc.hsmart.imageViewer.ImageViewerTouch view -> a
    void setImageURL(java.lang.String) -> a
    android.view.View getView() -> a
com.mcnc.hsmart.imageViewer.IImageViewEventListener -> com.mcnc.hsmart.imageViewer.b:
    void onImageAcquired(com.mcnc.hsmart.imageViewer.ImageEventSource) -> a
    void onErrorOccured(com.mcnc.hsmart.imageViewer.ImageEventSource) -> b
com.mcnc.hsmart.imageViewer.IImageViewer -> com.mcnc.hsmart.imageViewer.c:
    void openProgressDialog() -> a
    void alertNoMoreImage() -> b
    void finishImageViewer() -> c
com.mcnc.hsmart.imageViewer.ImageEventSource -> com.mcnc.hsmart.imageViewer.d:
    int currentImageIndex -> a
    boolean completed -> b
    boolean imageResult -> c
    int imageCount -> d
    java.io.File file -> e
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode resultCode -> f
    java.lang.Exception ex -> g
    boolean isImageResult() -> a
    int getImageCount() -> b
    void setCurrentImageIndex(int) -> a
    int getCurrentImageIndex() -> c
    boolean isCompleted() -> d
    java.io.File getFile() -> e
    void setFile(java.io.File) -> a
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode getResultCode() -> f
    java.lang.Exception getExcetion() -> g
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode -> com.mcnc.hsmart.imageViewer.e:
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode INIT -> a
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode SUCCESS_OK -> b
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode FAIL_NO_MORE_IMAGE -> c
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode FAIL_RETRY_REQUEST_OVER -> d
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode FAIL_NOT_EXISTED_IMAGE -> e
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode FAIL_IMAGE_CONVERSION -> f
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode FAIL_SERVER_EXCPETION -> g
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode FAIL_SMARF_EXCEPTION -> h
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode FAIL_REQUEST_CANCELED -> i
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode[] ENUM$VALUES -> j
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode[] values() -> values
    com.mcnc.hsmart.imageViewer.ImageEventSource$ResultCode valueOf(java.lang.String) -> valueOf
com.mcnc.hsmart.imageViewer.ImageViewer -> com.mcnc.hsmart.imageViewer.ImageViewer:
    com.mcnc.hsmart.imageViewer.IImageContentView imageContentView -> o
    com.mcnc.hsmart.imageViewer.ImageViewerModel model -> p
    com.mcnc.hsmart.imageViewer.ImageViewerController controller -> q
    android.app.ProgressDialog progressDialog -> r
    com.mcnc.hsmart.imageViewer.TopArea$TopView topview -> s
    android.app.AlertDialog$Builder imageSelectionMenu -> t
    int[] $SWITCH_TABLE$com$mcnc$hsmart$imageViewer$ImageEventSource$ResultCode -> u
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void setHeader(android.widget.LinearLayout) -> c
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void updateImageSelectionMenuUI(int,boolean) -> a
    void onImageAcquired(com.mcnc.hsmart.imageViewer.ImageEventSource) -> a
    void onErrorOccured(com.mcnc.hsmart.imageViewer.ImageEventSource) -> b
    void openProgressDialog() -> a
    android.app.ProgressDialog createAndOpenProgressDialog() -> g
    void closeProgressDialog() -> f
    void alertNoMoreImage() -> b
    void finishImageViewer() -> c
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    com.mcnc.hsmart.imageViewer.ImageViewerController access$0(com.mcnc.hsmart.imageViewer.ImageViewer) -> a
    void access$1(com.mcnc.hsmart.imageViewer.ImageViewer,int) -> a
    void access$2(com.mcnc.hsmart.imageViewer.ImageViewer,java.lang.String) -> a
    void access$3(com.mcnc.hsmart.imageViewer.ImageViewer,int,boolean) -> a
    int[] $SWITCH_TABLE$com$mcnc$hsmart$imageViewer$ImageEventSource$ResultCode() -> h
com.mcnc.hsmart.imageViewer.ImageViewer$1 -> com.mcnc.hsmart.imageViewer.f:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.imageViewer.ImageViewer$2 -> com.mcnc.hsmart.imageViewer.g:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.imageViewer.ImageViewer$3 -> com.mcnc.hsmart.imageViewer.h:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mcnc.hsmart.imageViewer.ImageViewer$4 -> com.mcnc.hsmart.imageViewer.i:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.imageViewer.ImageViewer$5 -> com.mcnc.hsmart.imageViewer.j:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    com.mcnc.hsmart.imageViewer.ImageEventSource val$imageEventSource -> b
    void run() -> run
com.mcnc.hsmart.imageViewer.ImageViewer$6 -> com.mcnc.hsmart.imageViewer.k:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    com.mcnc.hsmart.imageViewer.ImageEventSource val$imageEventSource -> b
    void run() -> run
com.mcnc.hsmart.imageViewer.ImageViewer$7 -> com.mcnc.hsmart.imageViewer.l:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.imageViewer.ImageViewer$8 -> com.mcnc.hsmart.imageViewer.m:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.mcnc.hsmart.imageViewer.ImageViewer$9 -> com.mcnc.hsmart.imageViewer.n:
    com.mcnc.hsmart.imageViewer.ImageViewer this$0 -> a
    void run() -> run
com.mcnc.hsmart.imageViewer.ImageViewerController -> com.mcnc.hsmart.imageViewer.o:
    com.mcnc.hsmart.imageViewer.IImageViewer view -> a
    com.mcnc.hsmart.imageViewer.ImageViewerModel model -> b
    java.lang.String docId -> c
    int getImageRequestDelayTime -> d
    java.lang.String serverId -> e
    java.lang.String cacheKey -> f
    java.lang.String cacheName -> g
    void showCurrentImage() -> a
    void showNextImage() -> b
    void showPrevImage() -> c
    void showSelectedImage(int) -> a
    void stopAllJobs() -> d
    void removeAllCachedImages() -> e
    void setRestryConfig(java.lang.String) -> a
    org.json.JSONObject makeActivationTR(java.lang.String,java.lang.String,java.lang.String) -> a
com.mcnc.hsmart.imageViewer.ImageViewerModel -> com.mcnc.hsmart.imageViewer.p:
    int retryCount -> a
    int maxRetryCnt -> b
    java.util.List listeners -> c
    java.util.Map imageFileMap -> d
    com.mcnc.hsmart.imageViewer.ImageEventSource imageEventSource -> e
    com.mcnc.hsmart.imageViewer.ImageViewerModel$GetImageRequestThread requestGetImageJob -> f
    com.mcnc.hsmart.imageViewer.ImageEventSource getImageEventSource() -> a
    void setImageEventSource(com.mcnc.hsmart.imageViewer.ImageEventSource) -> a
    java.io.File getCachedImageFile(int) -> a
    void removeAllCachedImageFiles() -> b
    void cacheImageFile(int,java.io.File) -> a
    void addListener(com.mcnc.hsmart.imageViewer.IImageViewEventListener) -> a
    void removeListener(com.mcnc.hsmart.imageViewer.IImageViewEventListener) -> b
    void notifyListenersImageAcquired(com.mcnc.hsmart.imageViewer.ImageEventSource) -> b
    void notifyListenersErrorOccured(com.mcnc.hsmart.imageViewer.ImageEventSource) -> c
    java.io.File toFile(java.lang.String) -> b
    void processImageAcquired(int,boolean,boolean,int,java.lang.String) -> a
    void getImage$5c69e0de(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void stopToGetImage() -> c
    org.json.JSONObject sendReq(com.mcnc.hsmart.core.common.Request) -> a
    java.lang.String imageDownload2(com.mcnc.hsmart.core.common.Request,java.lang.String) -> a
    void access$0(com.mcnc.hsmart.imageViewer.ImageViewerModel,com.mcnc.hsmart.imageViewer.ImageEventSource) -> a
    org.json.JSONObject access$1$4d0d309b(com.mcnc.hsmart.imageViewer.ImageViewerModel,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.io.File access$2$8d48a55(java.lang.String) -> a
    java.util.Map access$3(com.mcnc.hsmart.imageViewer.ImageViewerModel) -> a
com.mcnc.hsmart.imageViewer.ImageViewerModel$1 -> com.mcnc.hsmart.imageViewer.q:
    com.mcnc.hsmart.imageViewer.ImageViewerModel this$0 -> a
    void run() -> run
com.mcnc.hsmart.imageViewer.ImageViewerModel$GetImageRequestThread -> com.mcnc.hsmart.imageViewer.r:
    boolean requestCanceled -> a
    java.lang.String docId -> b
    int imageIndex -> c
    int delaytime -> d
    com.mcnc.hsmart.imageViewer.ImageEventSource previousImageEventSource -> e
    java.lang.String serverId -> f
    java.lang.String cacheKey -> g
    java.lang.String cacheName -> h
    com.mcnc.hsmart.imageViewer.ImageViewerModel this$0 -> i
    void cancelRequest() -> a
    void run() -> run
    void onRequestCancled() -> b
    boolean doWork() -> c
com.mcnc.hsmart.imageViewer.ImageViewerTouch -> com.mcnc.hsmart.imageViewer.ImageViewerTouch:
    android.graphics.Matrix matrix -> a
    android.graphics.Matrix savedMatrix -> b
    android.graphics.Matrix savedMatrix2 -> c
    int mode -> d
    android.graphics.PointF start -> e
    android.graphics.PointF mid -> f
    float oldDist -> g
    boolean isInit -> h
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void init() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    float spacing(android.view.MotionEvent) -> a
    void matrixTurning(android.graphics.Matrix,android.widget.ImageView) -> a
com.mcnc.hsmart.imageViewer.TopArea$TopView -> com.mcnc.hsmart.imageViewer.s:
    android.widget.TextView tv -> a
    android.widget.ImageButton prev -> b
    android.widget.ImageButton next -> c
    com.mcnc.hsmart.imageViewer.TopArea$TopView setTitle(java.lang.CharSequence) -> a
com.mcnc.hsmart.interfaces.MemoryInterface -> com.mcnc.hsmart.interfaces.MemoryInterface:
    java.lang.String TAG -> TAG
    com.mcnc.hsmart.interfaces.MemoryInterface instance -> instance
    java.util.HashMap docMap -> docMap
    java.util.HashMap tempMap -> tempMap
    com.mcnc.hsmart.interfaces.MemoryInterface getInstance() -> getInstance
    boolean clear(java.lang.String) -> clear
    boolean containsKey(java.lang.String,java.lang.String) -> containsKey
    boolean containsValue(java.lang.String,java.lang.String) -> containsValue
    java.lang.String get(java.lang.String,java.lang.String) -> get
    java.lang.String keySet(java.lang.String) -> keySet
    boolean put(java.lang.String,java.lang.String,java.lang.String) -> put
    boolean remove(java.lang.String,java.lang.String) -> remove
    boolean putAll(java.lang.String,java.lang.String) -> putAll
    int size(java.lang.String) -> size
    void clearAll() -> clearAll
com.mcnc.hsmart.interfaces.SqliteInterface -> com.mcnc.hsmart.interfaces.SqliteInterface:
    com.mcnc.hsmart.interfaces.SqliteInterface instance -> instance
    java.lang.String packageName -> packageName
    java.lang.String defaultDbName -> defaultDbName
    java.lang.String lastDbName -> lastDbName
    android.database.sqlite.SQLiteDatabase sqliteDb -> sqliteDb
    boolean btransaction -> btransaction
    boolean isExecuteBatchSql -> isExecuteBatchSql
    java.lang.String TAG -> TAG
    int CREATE_IF_NECESSARY -> CREATE_IF_NECESSARY
    int OPEN_READONLY -> OPEN_READONLY
    int OPEN_READWRITE -> OPEN_READWRITE
    int NO_LOCALIZED_COLLATORS -> NO_LOCALIZED_COLLATORS
    int SQLITE_MAX_LIKE_PATTERN_LENGTH -> SQLITE_MAX_LIKE_PATTERN_LENGTH
    int UNKNOWN_ERR -> UNKNOWN_ERR
    int DATABASE_ERR -> DATABASE_ERR
    int VERSION_ERR -> VERSION_ERR
    int TOO_LARGE_ERR -> TOO_LARGE_ERR
    int QUOTA_ERR -> QUOTA_ERR
    int SYNTAX_ERR -> SYNTAX_ERR
    int CONSTRAINT_ERR -> CONSTRAINT_ERR
    int TIME_ERR -> TIME_ERR
    java.lang.String SUCCESS -> SUCCESS
    java.lang.String ROWS -> ROWS
    java.lang.String ERROR -> ERROR
    java.lang.String CODE -> CODE
    java.lang.String MESSAGE -> MESSAGE
    java.lang.String MSGERR1 -> MSGERR1
    java.lang.String MSGERR2 -> MSGERR2
    java.lang.String MSGERR3 -> MSGERR3
    com.mcnc.hsmart.interfaces.SqliteInterface getInstance() -> getInstance
    boolean openDatabase(java.lang.String) -> openDatabase
    boolean openDatabase() -> openDatabase
    boolean closeDatabase() -> closeDatabase
    android.database.sqlite.SQLiteDatabase getDatabaseHandle() -> getDatabaseHandle
    boolean beginTransaction() -> beginTransaction
    void endTransaction() -> endTransaction
    boolean commit() -> commit
    boolean commitTransaction() -> commitTransaction
    boolean rollback() -> rollback
    boolean rollbackTransaction() -> rollbackTransaction
    java.lang.String executeSelect(java.lang.String) -> executeSelect
    java.lang.String executeSelect(java.lang.String,java.lang.String) -> executeSelect
    java.lang.String executeSql(java.lang.String) -> executeSql
    java.lang.String executeSql(java.lang.String,java.lang.String) -> executeSql
    java.lang.String executeBatchSql(java.lang.String,java.lang.String) -> executeBatchSql
    boolean isRunBatchSql() -> isRunBatchSql
com.mcnc.hsmart.nativeApp.signature.SignatureActivity -> com.mcnc.hsmart.nativeApp.signature.SignatureActivity:
    android.graphics.Paint mPaint -> a
    java.lang.String callback -> b
    java.lang.String target_path -> c
    java.lang.String orientation -> d
    int width -> e
    int height -> f
    int view_width -> g
    int view_height -> h
    com.mcnc.hsmart.nativeApp.signature.SignatureActivity$MyView myView -> i
    android.view.View$OnClickListener onClick -> j
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    void onCreate(android.os.Bundle) -> onCreate
    com.mcnc.hsmart.nativeApp.signature.SignatureActivity$MyView access$0(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> a
    int access$1(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> b
    int access$2(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> c
    java.lang.String access$3(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> d
    java.lang.String access$4(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> e
    int access$5(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> f
    int access$6(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> g
    android.graphics.Paint access$7(com.mcnc.hsmart.nativeApp.signature.SignatureActivity) -> h
com.mcnc.hsmart.nativeApp.signature.SignatureActivity$1 -> com.mcnc.hsmart.nativeApp.signature.a:
    com.mcnc.hsmart.nativeApp.signature.SignatureActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.nativeApp.signature.SignatureActivity$MyView -> com.mcnc.hsmart.nativeApp.signature.b:
    android.graphics.Bitmap mBitmap -> a
    android.graphics.Canvas mCanvas -> b
    android.graphics.Path mPath -> c
    android.graphics.Paint mBitmapPaint -> d
    float mX -> e
    float mY -> f
    com.mcnc.hsmart.nativeApp.signature.SignatureActivity this$0 -> g
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.mcnc.hsmart.nativeApp.util.ProgressDialogHelper -> com.mcnc.hsmart.nativeApp.a.a:
    android.content.SharedPreferences configurationSharedPreferences -> a
    android.content.SharedPreferences$Editor configurationEditor -> b
    void showProgressDialog(android.app.Activity,java.lang.Runnable,java.lang.Runnable) -> a
    android.content.SharedPreferences getConfigurationSharedPreferences() -> a
    java.lang.String getString(org.json.JSONObject,java.lang.String) -> a
com.mcnc.hsmart.nativeApp.util.ProgressDialogHelper$4 -> com.mcnc.hsmart.nativeApp.a.b:
    java.lang.Runnable val$runner -> a
    android.app.Activity val$context -> b
    java.lang.Runnable val$afterUI -> c
    android.app.ProgressDialog val$dlg -> d
    void run() -> run
com.mcnc.hsmart.nativeApp.util.ProgressDialogHelper$4$1 -> com.mcnc.hsmart.nativeApp.a.c:
    java.lang.Runnable val$afterUI -> a
    android.app.ProgressDialog val$dlg -> b
    void run() -> run
com.mcnc.hsmart.plugin.BizmobInterface -> com.mcnc.hsmart.plugin.BizmobInterface:
    android.content.Context context -> context
    android.webkit.WebView webView -> webView
    void print(java.lang.String) -> print
    void hello() -> hello
    void helloWithParam(java.lang.String) -> helloWithParam
com.mcnc.hsmart.plugin.BizmobPlugin -> com.mcnc.hsmart.plugin.BizmobPlugin:
    android.webkit.WebView webView -> webView
    android.app.Activity ctx -> ctx
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void setContext(android.app.Activity) -> setContext
    void setView(android.webkit.WebView) -> setView
com.mcnc.hsmart.plugin.BizmobPluginManager -> com.mcnc.hsmart.plugin.BizmobPluginManager:
    java.util.HashMap plugins -> plugins
    android.app.Activity ctx -> ctx
    android.webkit.WebView webview -> webview
    com.mcnc.hsmart.plugin.BizmobPlugin addPlugin(java.lang.String) -> addPlugin
    java.lang.Class getClassByName(java.lang.String) -> getClassByName
    com.mcnc.hsmart.plugin.BizmobPlugin addPlugin(java.lang.String,java.lang.Class) -> addPlugin
    com.mcnc.hsmart.plugin.BizmobPlugin getPlugin(java.lang.String) -> getPlugin
    void setMessageDlg(java.lang.String,boolean) -> setMessageDlg
    void dismissDlg() -> dismissDlg
com.mcnc.hsmart.plugin.BizmobPluginManager$1 -> com.mcnc.hsmart.plugin.BizmobPluginManager$1:
    com.mcnc.hsmart.plugin.BizmobPluginManager this$0 -> this$0
    android.app.Activity val$activity -> val$activity
    boolean val$cancelable -> val$cancelable
    java.lang.String val$message -> val$message
    void run() -> run
com.mcnc.hsmart.plugin.BizmobPluginManager$2 -> com.mcnc.hsmart.plugin.BizmobPluginManager$2:
    com.mcnc.hsmart.plugin.BizmobPluginManager this$0 -> this$0
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> val$activity
    com.mcnc.hsmart.core.view.BaseActivity val$context -> val$context
    void run() -> run
com.mcnc.hsmart.plugin.IBizmobPlugin -> com.mcnc.hsmart.plugin.IBizmobPlugin:
    void setContext(android.app.Activity) -> setContext
    void setView(android.webkit.WebView) -> setView
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.mcnc.hsmart.potal.ActivationTask -> com.mcnc.hsmart.potal.a:
    java.lang.String TAG -> a
    org.json.JSONObject result -> b
    android.app.Activity context -> c
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    android.app.Activity access$1(com.mcnc.hsmart.potal.ActivationTask) -> a
com.mcnc.hsmart.potal.ActivationTask$1 -> com.mcnc.hsmart.potal.b:
    com.mcnc.hsmart.potal.ActivationTask this$0 -> a
    void run() -> run
com.mcnc.hsmart.potal.DeviceRegistActivity -> com.mcnc.hsmart.potal.DeviceRegistActivity:
    java.lang.String TAG -> L
    android.widget.Button loginButton -> M
    android.widget.EditText userIdEditText -> N
    android.widget.EditText passwordEditText -> O
    java.lang.String number -> P
    void onCreateContent(android.os.Bundle) -> a
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void setHeader(android.widget.LinearLayout) -> c
    void processActivation() -> a
    void onBackPressed() -> onBackPressed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String access$0(com.mcnc.hsmart.potal.DeviceRegistActivity) -> a
com.mcnc.hsmart.potal.DeviceRegistActivity$1 -> com.mcnc.hsmart.potal.c:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.potal.DeviceRegistActivity$2 -> com.mcnc.hsmart.potal.d:
    com.mcnc.hsmart.potal.DeviceRegistActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.potal.Login20Task -> com.mcnc.hsmart.potal.e:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.potal.Login20Task$1 -> com.mcnc.hsmart.potal.f:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.Login20Task$2 -> com.mcnc.hsmart.potal.g:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.Login20Task$3 -> com.mcnc.hsmart.potal.h:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.Login20Task$4 -> com.mcnc.hsmart.potal.i:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.RegisterLicenseTask -> com.mcnc.hsmart.potal.j:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    boolean registDevice(org.json.JSONObject,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.potal.Upgrade20Task -> com.mcnc.hsmart.potal.k:
    java.lang.String TAG -> a
    java.lang.String REQUESTURL_VALUE -> b
    java.lang.String RESOURCE_ROOT -> c
    java.lang.String CONTENT_ROOT -> d
    java.lang.String DOWNLOAD_ROOT -> e
    java.lang.String META_ROOT -> f
    java.lang.String display_type -> g
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject makeVersionCheckObject(android.content.Context) -> a
    org.json.JSONObject makeDownloadFileObject(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean DownLoadReqeust(com.mcnc.hsmart.core.common.Request,com.mcnc.hsmart.core.common.Response,java.lang.String,java.lang.String,java.lang.String) -> a
    void DeleteDownloadFile(java.lang.String) -> a
    boolean Backup(com.mcnc.hsmart.core.common.Request,java.lang.String,java.lang.String) -> a
    boolean Restore(java.lang.String) -> b
    boolean updateSave(java.lang.String,java.lang.String) -> a
    void AppUpgrade(android.app.Activity,java.lang.String) -> a
    boolean copyFile(java.lang.String,java.lang.String) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.potal.Upgrade20Task) -> a
com.mcnc.hsmart.potal.Upgrade20Task$1 -> com.mcnc.hsmart.potal.l:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.Upgrade20Task$2 -> com.mcnc.hsmart.potal.m:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.Upgrade20Task$3 -> com.mcnc.hsmart.potal.n:
    com.mcnc.hsmart.potal.Upgrade20Task this$0 -> a
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> b
    java.lang.String val$msg -> c
    void run() -> run
com.mcnc.hsmart.potal.Upgrade20Task$4 -> com.mcnc.hsmart.potal.o:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.Upgrade20Task$5 -> com.mcnc.hsmart.potal.p:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.potal.Upgrade20Task$6 -> com.mcnc.hsmart.potal.q:
    com.mcnc.hsmart.potal.Upgrade20Task this$0 -> a
    android.app.Activity val$activity -> b
    void run() -> run
com.mcnc.hsmart.potal.Upgrade20Task$7 -> com.mcnc.hsmart.potal.r:
    android.app.Activity val$context -> a
    void run() -> run
com.mcnc.hsmart.task.APKInstallTask -> com.mcnc.hsmart.b.a:
    java.lang.String TAG -> a
    java.lang.String downPath -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ActivityFinishTask -> com.mcnc.hsmart.b.b:
    java.lang.String TAG -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ApplicationExitTask -> com.mcnc.hsmart.b.c:
    java.lang.String TAG -> a
    android.os.Handler handler -> b
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    boolean sendLogout(java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.ApplicationExitTask) -> a
com.mcnc.hsmart.task.ApplicationExitTask$1 -> com.mcnc.hsmart.b.d:
    com.mcnc.hsmart.task.ApplicationExitTask this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.task.BaseTask -> com.mcnc.hsmart.b.e:
    java.lang.String TAG -> a
    int retryCount -> b
    int maxRetryCnt -> c
    org.json.JSONObject sendReq(com.mcnc.hsmart.core.common.Request) -> b
com.mcnc.hsmart.task.CameraCaptureTask -> com.mcnc.hsmart.b.f:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.CheckUseApplicationTask -> com.mcnc.hsmart.b.g:
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ClearFStorageTask -> com.mcnc.hsmart.b.h:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.ClearFStorageTask) -> a
com.mcnc.hsmart.task.ClearFStorageTask$1 -> com.mcnc.hsmart.b.i:
    com.mcnc.hsmart.task.ClearFStorageTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$preferencesStr -> c
    void run() -> run
com.mcnc.hsmart.task.ClearMStorageTask -> com.mcnc.hsmart.b.j:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.ClearMStorageTask) -> a
com.mcnc.hsmart.task.ClearMStorageTask$1 -> com.mcnc.hsmart.b.k:
    com.mcnc.hsmart.task.ClearMStorageTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$mapStr -> c
    void run() -> run
com.mcnc.hsmart.task.ContextMenuTask -> com.mcnc.hsmart.b.l:
    java.lang.String TAG -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ContextMenuTask$1 -> com.mcnc.hsmart.b.m:
    com.mcnc.hsmart.core.common.Request val$request -> a
    void run() -> run
com.mcnc.hsmart.task.DissmissPopupViewTask -> com.mcnc.hsmart.b.n:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.DissmissWebModalTask -> com.mcnc.hsmart.b.o:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.DownloadImageTask -> com.mcnc.hsmart.b.p:
    java.lang.String ROOT_URL_IP -> a
    java.lang.String ROOT_URL_PORT -> b
    java.lang.String ROOT_URL_DIR -> c
    java.lang.String REQUESTURL_VALUE -> d
    java.lang.String TAG -> e
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    boolean DownLoadReqeust(com.mcnc.hsmart.core.common.Request,com.mcnc.hsmart.core.common.Response,java.lang.String,java.lang.String) -> a
    org.json.JSONObject makeDownloadFileObject(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.DownloadTask -> com.mcnc.hsmart.b.q:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    void AppUpgrade(android.app.Activity,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.DownloadTask$1 -> com.mcnc.hsmart.b.r:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.FileCopyTask -> com.mcnc.hsmart.b.s:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    void copy(java.lang.String,java.lang.String) -> a
    boolean copyFile(java.lang.String,java.lang.String) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.FileMoveTask -> com.mcnc.hsmart.b.t:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject move(java.lang.String,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.FilesRemoveTask -> com.mcnc.hsmart.b.u:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject remove(org.json.JSONArray) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GetContactDefailTask -> com.mcnc.hsmart.b.v:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject makeResponseContactDetail$27dfaefb(java.util.ArrayList) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GetContactTask -> com.mcnc.hsmart.b.w:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject makeResponseContactList$27dfaefb(java.util.ArrayList) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GetDeviceInfoTask -> com.mcnc.hsmart.b.x:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject getDeviceInfo(com.mcnc.hsmart.core.common.Request) -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GetDirectoryInfoTask -> com.mcnc.hsmart.b.y:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject getDirectoryInfo(java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GetImagePickTask -> com.mcnc.hsmart.b.z:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GetImageTask -> com.mcnc.hsmart.b.aa:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GetNetworkInfoTask -> com.mcnc.hsmart.b.ab:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject getWifyInfo(com.mcnc.hsmart.core.common.Request) -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GoHomeTask -> com.mcnc.hsmart.b.ac:
    java.lang.String TAG -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GoHomeTask$1 -> com.mcnc.hsmart.b.ad:
    com.mcnc.hsmart.core.common.Request val$request -> a
    android.content.Intent val$intent -> b
    void run() -> run
com.mcnc.hsmart.task.GoLogoutTask -> com.mcnc.hsmart.b.ae:
    java.lang.String TAG -> a
    android.os.Handler handler -> b
    boolean sendLogout(java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.GoLogoutTask) -> a
    boolean access$2(com.mcnc.hsmart.task.GoLogoutTask,java.lang.String) -> a
    android.os.Handler access$3(com.mcnc.hsmart.task.GoLogoutTask) -> b
com.mcnc.hsmart.task.GoLogoutTask$1 -> com.mcnc.hsmart.b.af:
    com.mcnc.hsmart.task.GoLogoutTask this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.task.GoLogoutTask$2 -> com.mcnc.hsmart.b.ag:
    com.mcnc.hsmart.task.GoLogoutTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.task.GoLogoutTask$3 -> com.mcnc.hsmart.b.ah:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.task.GoLogoutTask$4 -> com.mcnc.hsmart.b.ai:
    android.app.Activity val$context -> a
    java.lang.String val$message -> b
    android.content.DialogInterface$OnClickListener val$listener1 -> c
    android.content.DialogInterface$OnClickListener val$listener2 -> d
    void run() -> run
com.mcnc.hsmart.task.GotoAttachToImageTask -> com.mcnc.hsmart.b.aj:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GotoFileUploadTask -> com.mcnc.hsmart.b.ak:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.String getImageData(java.lang.String) -> a
    java.lang.String imageResize(java.lang.String,java.lang.String,int) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GotoSettingsTask -> com.mcnc.hsmart.b.al:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GotoSignatureTask -> com.mcnc.hsmart.b.am:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GotoWebModalTask -> com.mcnc.hsmart.b.an:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.GotoWebTask -> com.mcnc.hsmart.b.ao:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.HttpPostTask -> com.mcnc.hsmart.b.ap:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ImageViewTask -> com.mcnc.hsmart.b.aq:
    java.lang.String TAG -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.LoginTask -> com.mcnc.hsmart.b.ar:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.PDFViewTask -> com.mcnc.hsmart.b.as:
    java.lang.String TAG -> a
    java.lang.String downPath -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.PopViewTask -> com.mcnc.hsmart.b.at:
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.PopupMessageBoxTask -> com.mcnc.hsmart.b.au:
    java.lang.String TAG -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.PopupMessageBoxTask) -> a
    void access$2(com.mcnc.hsmart.task.PopupMessageBoxTask,com.mcnc.hsmart.core.view.BaseActivity,java.lang.String,org.json.JSONArray) -> a
com.mcnc.hsmart.task.PopupMessageBoxTask$1 -> com.mcnc.hsmart.b.av:
    com.mcnc.hsmart.task.PopupMessageBoxTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    void run() -> run
    com.mcnc.hsmart.task.PopupMessageBoxTask access$0(com.mcnc.hsmart.task.PopupMessageBoxTask$1) -> a
com.mcnc.hsmart.task.PopupMessageBoxTask$1$1 -> com.mcnc.hsmart.b.aw:
    com.mcnc.hsmart.task.PopupMessageBoxTask$1 this$1 -> a
    java.lang.String val$callback -> b
    com.mcnc.hsmart.core.common.Request val$request -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.task.PopupMessageBoxTask$1$2 -> com.mcnc.hsmart.b.ax:
    com.mcnc.hsmart.task.PopupMessageBoxTask$1 this$1 -> a
    java.lang.String val$callback -> b
    com.mcnc.hsmart.core.common.Request val$request -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.task.PopupMessageBoxTask$1$3 -> com.mcnc.hsmart.b.ay:
    com.mcnc.hsmart.task.PopupMessageBoxTask$1 this$1 -> a
    java.lang.String val$callback2 -> b
    com.mcnc.hsmart.core.common.Request val$request -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.task.PopupMessageBoxTask$2 -> com.mcnc.hsmart.b.az:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mcnc.hsmart.task.PopupMessageBoxTask$3 -> com.mcnc.hsmart.b.ba:
    com.mcnc.hsmart.task.PopupMessageBoxTask this$0 -> a
    java.lang.String[] val$callback2 -> b
    com.mcnc.hsmart.core.view.BaseActivity val$mContext -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.task.QrAndBarCodeTask -> com.mcnc.hsmart.b.bb:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ReloadTask -> com.mcnc.hsmart.b.bc:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.RemoveFStorageTask -> com.mcnc.hsmart.b.bd:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.RemoveMStorageTask -> com.mcnc.hsmart.b.be:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ReplaceWebTask -> com.mcnc.hsmart.b.bf:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.SMSTask -> com.mcnc.hsmart.b.bg:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.SetFStorageTask -> com.mcnc.hsmart.b.bh:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.SetFStorageTask) -> a
com.mcnc.hsmart.task.SetFStorageTask$1 -> com.mcnc.hsmart.b.bi:
    com.mcnc.hsmart.task.SetFStorageTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$preferencesStr -> c
    void run() -> run
com.mcnc.hsmart.task.SetMStorageTask -> com.mcnc.hsmart.b.bj:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.SetMStorageTask) -> a
com.mcnc.hsmart.task.SetMStorageTask$1 -> com.mcnc.hsmart.b.bk:
    com.mcnc.hsmart.task.SetMStorageTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$mapStr -> c
    void run() -> run
com.mcnc.hsmart.task.SetSessionTimeoutTask -> com.mcnc.hsmart.b.bl:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.SettingsActionTask -> com.mcnc.hsmart.b.bm:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowImagePickTask -> com.mcnc.hsmart.b.bn:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowMapTask -> com.mcnc.hsmart.b.bo:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowMessageTask -> com.mcnc.hsmart.b.bp:
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowMessageTask$1 -> com.mcnc.hsmart.b.bq:
    android.app.Activity val$activity -> a
    java.lang.String val$strMessage -> b
    int val$nDuration -> c
    void run() -> run
com.mcnc.hsmart.task.ShowPopupViewTask -> com.mcnc.hsmart.b.br:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowSubViewTask -> com.mcnc.hsmart.b.bs:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowWaitCursorTask -> com.mcnc.hsmart.b.bt:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowWaitCursorTask$1 -> com.mcnc.hsmart.b.bu:
    org.json.JSONObject val$paramData -> a
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> b
    void run() -> run
com.mcnc.hsmart.task.ShowWebModalTask -> com.mcnc.hsmart.b.bv:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowWebTask -> com.mcnc.hsmart.b.bw:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    boolean isHome(java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.ShowWebsiteTask -> com.mcnc.hsmart.b.bx:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.SqliteExcuteTask -> com.mcnc.hsmart.b.by:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.SqliteSelectTask -> com.mcnc.hsmart.b.bz:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.TelTask -> com.mcnc.hsmart.b.ca:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.UnZipFileTask -> com.mcnc.hsmart.b.cb:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.UnZipFileTask) -> a
com.mcnc.hsmart.task.UnZipFileTask$1 -> com.mcnc.hsmart.b.cc:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.UnZipFileTask$2 -> com.mcnc.hsmart.b.cd:
    com.mcnc.hsmart.task.UnZipFileTask this$0 -> a
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> b
    void run() -> run
com.mcnc.hsmart.task.UnZipFileTask$3 -> com.mcnc.hsmart.b.ce:
    com.mcnc.hsmart.task.UnZipFileTask this$0 -> a
    java.lang.String val$callback2 -> b
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> c
    void run() -> run
com.mcnc.hsmart.task.UploadFormDataTask -> com.mcnc.hsmart.b.cf:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.UploadFormDataTask$1 -> com.mcnc.hsmart.b.cg:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.UploadFormDataTask$2 -> com.mcnc.hsmart.b.ch:
    com.mcnc.hsmart.core.common.Request val$request -> a
    java.lang.String val$success_callback -> b
    void run() -> run
com.mcnc.hsmart.task.UploadFormDataTask$3 -> com.mcnc.hsmart.b.ci:
    com.mcnc.hsmart.core.common.Request val$request -> a
    java.lang.String val$error_callback -> b
    void run() -> run
com.mcnc.hsmart.task.UploadImageDataTask -> com.mcnc.hsmart.b.cj:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.String imageResize(java.lang.String,java.lang.String,int) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.UploadImageDataTask$1 -> com.mcnc.hsmart.b.ck:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.UploadImageDataTask$2 -> com.mcnc.hsmart.b.cl:
    com.mcnc.hsmart.core.common.Request val$request -> a
    java.lang.String val$success_callback -> b
    void run() -> run
com.mcnc.hsmart.task.UploadImageDataTask$3 -> com.mcnc.hsmart.b.cm:
    com.mcnc.hsmart.core.common.Request val$request -> a
    java.lang.String val$error_callback -> b
    void run() -> run
com.mcnc.hsmart.task.VersionCheckTask -> com.mcnc.hsmart.b.cn:
    java.lang.String TAG -> a
    java.lang.String REQUESTURL_VALUE -> b
    java.lang.String RESOURCE_ROOT -> c
    java.lang.String CONTENT_ROOT -> d
    java.lang.String DOWNLOAD_ROOT -> e
    java.lang.String META_ROOT -> f
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject makeVersionCheckObject(android.content.Context) -> a
    org.json.JSONObject makeDownloadFileObject(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean DownLoadReqeust(com.mcnc.hsmart.core.common.Request,com.mcnc.hsmart.core.common.Response,java.lang.String,java.lang.String,java.lang.String) -> a
    void DeleteDownloadFile(java.lang.String) -> a
    boolean Backup(com.mcnc.hsmart.core.common.Request,java.lang.String,java.lang.String) -> a
    boolean Restore(java.lang.String) -> b
    boolean updateSave(java.lang.String,java.lang.String) -> a
    void AppUpgrade(android.app.Activity,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.hsmart.task.VersionCheckTask$1 -> com.mcnc.hsmart.b.co:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.VersionCheckTask$2 -> com.mcnc.hsmart.b.cp:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.VersionCheckTask$3 -> com.mcnc.hsmart.b.cq:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    java.lang.String val$msg -> b
    void run() -> run
com.mcnc.hsmart.task.VersionCheckTask$4 -> com.mcnc.hsmart.b.cr:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.VersionCheckTask$5 -> com.mcnc.hsmart.b.cs:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.VersionCheckTask$6 -> com.mcnc.hsmart.b.ct:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.ZipFileTask -> com.mcnc.hsmart.b.cu:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    boolean zip(java.lang.String,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.hsmart.task.ZipFileTask) -> a
com.mcnc.hsmart.task.ZipFileTask$1 -> com.mcnc.hsmart.b.cv:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.hsmart.task.ZipFileTask$2 -> com.mcnc.hsmart.b.cw:
    com.mcnc.hsmart.task.ZipFileTask this$0 -> a
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> b
    void run() -> run
com.mcnc.hsmart.task.ZipFileTask$3 -> com.mcnc.hsmart.b.cx:
    com.mcnc.hsmart.task.ZipFileTask this$0 -> a
    java.lang.String val$callback2 -> b
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> c
    void run() -> run
com.mcnc.hsmart.upload.BaseUploadService -> com.mcnc.hsmart.upload.BaseUploadService:
com.mcnc.hsmart.upload.UploadServiceImpl -> com.mcnc.hsmart.upload.UploadServiceImpl:
    java.lang.String TAG -> b
    void syncUpload$4791104b(com.mcnc.hsmart.core.common.Request) -> a
com.mcnc.hsmart.upload.UploadServiceImpl$1 -> com.mcnc.hsmart.upload.a:
    com.mcnc.hsmart.upload.UploadServiceImpl this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.upload.UploadServiceImpl$_FakeX509TrustManager -> com.mcnc.hsmart.upload.b:
    javax.net.ssl.TrustManager[] trustManagers -> a
    java.security.cert.X509Certificate[] _AcceptedIssuers -> b
    com.mcnc.hsmart.upload.UploadServiceImpl this$0 -> c
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void allowAllSSL() -> a
com.mcnc.hsmart.upload.UploadServiceImpl$_FakeX509TrustManager$1 -> com.mcnc.hsmart.upload.c:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.mcnc.hsmart.util.ActivityObserver -> com.mcnc.hsmart.util.a:
    java.lang.String AUTO_LOGOUT -> a
    com.mcnc.hsmart.util.ActivityObserver observer -> c
    int TIMEOUT -> b
    int CHECK_INTERVAL -> d
    long lastCheckTime -> e
    android.app.Activity savedContext -> f
    java.util.Timer timer -> g
    void setTime(int) -> a
    int getTime() -> a
    void sessionCheck(android.app.Activity) -> a
    void setTimer(android.app.Activity) -> c
    void resetTimer(android.app.Activity) -> b
    com.mcnc.hsmart.util.ActivityObserver access$0() -> b
    void access$1(com.mcnc.hsmart.util.ActivityObserver,android.app.Activity) -> a
    android.app.Activity access$2(com.mcnc.hsmart.util.ActivityObserver) -> a
    long access$3(com.mcnc.hsmart.util.ActivityObserver) -> b
    java.util.Timer access$4() -> c
    void access$5$43c99264(com.mcnc.hsmart.util.ActivityObserver) -> c
com.mcnc.hsmart.util.ActivityObserver$1 -> com.mcnc.hsmart.util.b:
    android.view.Window$Callback val$cb -> a
    android.app.Activity val$context -> b
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    boolean onSearchRequested() -> onSearchRequested
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onContentChanged() -> onContentChanged
    void onAttachedToWindow() -> onAttachedToWindow
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
com.mcnc.hsmart.util.ActivityObserver$2 -> com.mcnc.hsmart.util.c:
    com.mcnc.hsmart.util.ActivityObserver this$0 -> a
    java.lang.Class val$activity -> b
    void run() -> run
    com.mcnc.hsmart.util.ActivityObserver access$0(com.mcnc.hsmart.util.ActivityObserver$2) -> a
com.mcnc.hsmart.util.ActivityObserver$2$1 -> com.mcnc.hsmart.util.d:
    com.mcnc.hsmart.util.ActivityObserver$2 this$1 -> a
    java.lang.Class val$activity -> b
    void run() -> run
com.mcnc.hsmart.util.ActivityObserver$2$2 -> com.mcnc.hsmart.util.e:
    com.mcnc.hsmart.util.ActivityObserver$2 this$1 -> a
    java.lang.Class val$activity -> b
    void run() -> run
com.mcnc.hsmart.util.ActivityStack -> com.mcnc.hsmart.util.f:
    java.util.ArrayList ActivityStack -> a
    void pushActivity(android.app.Activity) -> a
    void removeActivity(android.app.Activity) -> b
    void printStack() -> a
    android.app.Activity getActivityForFinish() -> b
    boolean isHomeActivity(java.lang.String) -> a
    boolean isStartActivity(java.lang.String) -> b
com.mcnc.hsmart.util.AppConfigReader -> com.mcnc.hsmart.util.g:
    int total_count -> a
    int convert_count -> b
    int current_page -> c
    int status -> d
    java.util.ArrayList DocImages -> e
    boolean LoadAppConfig(android.content.Context,java.lang.String) -> a
    org.json.JSONObject getFileToJson(android.content.Context,java.lang.String) -> b
    java.lang.String inputStreamToString(java.io.InputStream) -> a
    org.json.JSONObject getPageList() -> a
    com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageItem getPageItem(int) -> a
    void updateConvertCount(int) -> b
com.mcnc.hsmart.util.DialogUtility -> com.mcnc.hsmart.util.h:
    java.lang.String BUTTON_OK -> a
    java.lang.String BUTTON_CANCEL -> b
    void alert(android.content.Context,java.lang.String) -> a
    void alertNoneTitle(android.content.Context,java.lang.String) -> b
    void alertNoneTitle(android.app.Activity,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
    java.lang.String access$0() -> a
    java.lang.String access$1() -> b
com.mcnc.hsmart.util.DialogUtility$1 -> com.mcnc.hsmart.util.i:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.util.DialogUtility$3 -> com.mcnc.hsmart.util.j:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.util.DialogUtility$4 -> com.mcnc.hsmart.util.k:
    android.app.Activity val$context -> a
    java.lang.String val$message -> b
    android.content.DialogInterface$OnClickListener val$listener -> c
    void run() -> run
com.mcnc.hsmart.util.DialogUtility$4$1 -> com.mcnc.hsmart.util.l:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.util.ExceptionUtil -> com.mcnc.hsmart.util.m:
    java.lang.String HTTPHOSTCONNECTEXCEPTION -> a
    java.lang.String HTTPSOCKETTIMEOUTEXCEPTION -> b
    java.lang.String SOCKETEXCEPTION -> c
    java.lang.String IOEXCEPTION -> d
    java.lang.String REQCANCELEXCEPTION -> e
    java.lang.String JSONEXCEPTION -> f
    java.lang.String NULLPOINTEREXCEPTION -> g
    java.lang.String process(java.lang.Exception) -> a
    com.mcnc.hsmart.core.exception.ServerException toServerException(org.json.JSONObject) -> a
com.mcnc.hsmart.util.FileUtil -> com.mcnc.hsmart.util.n:
    java.lang.String TAG -> a
    java.lang.String getExt(java.lang.String) -> c
    java.lang.String getMimetypeString(java.lang.String) -> a
    boolean isImage(java.lang.String) -> b
    java.lang.String getAbsolutePath(java.lang.String,java.lang.String) -> a
com.mcnc.hsmart.util.MyReceiver -> com.mcnc.hsmart.util.MyReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mcnc.hsmart.util.RUtil -> com.mcnc.hsmart.util.o:
    java.lang.String packageName -> a
    int getR(android.content.Context,java.lang.String,java.lang.String) -> a
    int getLayoutR(android.content.Context,java.lang.String) -> a
    int getDrawableR(android.content.Context,java.lang.String) -> b
    int getStringR(android.content.Context,java.lang.String) -> c
    int getIdR(android.content.Context,java.lang.String) -> d
com.mcnc.hsmart.util.ServiceReceiver -> com.mcnc.hsmart.util.ServiceReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mcnc.hsmart.util.ServiceReceiver$1 -> com.mcnc.hsmart.util.p:
    android.content.Context val$context -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.mcnc.hsmart.util.device.contact.AddressBookDetailItem -> com.mcnc.hsmart.util.device.a.a:
    java.lang.String UID -> a
    java.lang.String boxId -> b
    java.lang.String FirstName -> c
    java.lang.String Name -> d
    java.lang.String Nickname -> e
    java.lang.String Company_Name -> f
    java.lang.String Company_Department -> g
    java.lang.String Grade -> h
    java.lang.String Company_Tel -> i
    java.lang.String Company_Tel2 -> j
    java.lang.String Company_Fax -> k
    java.lang.String Company_Post -> l
    java.lang.String Company_CityState -> m
    java.lang.String Company_GuGunCity -> n
    java.lang.String Company_DetailAddress -> o
    java.lang.String Company_Country -> p
    java.lang.String IM -> q
    java.lang.String IM2 -> r
    java.lang.String IM3 -> s
    java.lang.String Email -> t
    java.lang.String Email2 -> u
    java.lang.String Email3 -> v
    java.lang.String Mobile -> w
    java.lang.String WebPage -> x
    java.lang.String Company_OfficeName -> y
    java.lang.String Home_Tel -> z
    java.lang.String Home_Tel2 -> A
    java.lang.String Home_Post -> B
    java.lang.String Home_CityState -> C
    java.lang.String Home_GuGunCity -> D
    java.lang.String Home_DetailAddress -> E
    java.lang.String Home_Country -> F
    java.lang.String Other_Post -> G
    java.lang.String Other_CityState -> H
    java.lang.String Other_GuGunCity -> I
    java.lang.String Other_DetailAddress -> J
    java.lang.String Other_Country -> K
    java.lang.String Secretary_Name -> L
    java.lang.String Secretary_Tel -> M
    java.lang.String Birthday -> N
    java.lang.String Memo -> O
    java.lang.String photoId -> P
    java.lang.String getUID() -> a
    java.lang.String getBoxId() -> b
    java.lang.String getPhotoId() -> c
    void setPhotoId(java.lang.String) -> a
    java.lang.String getFirstName() -> d
    java.lang.String getName() -> e
    java.lang.String getNickname() -> f
    java.lang.String getCompany_Name() -> g
    java.lang.String getCompany_Department() -> h
    java.lang.String getGrade() -> i
    java.lang.String getCompany_Tel() -> j
    java.lang.String getCompany_Tel2() -> k
    java.lang.String getCompany_Fax() -> l
    java.lang.String getCompany_Post() -> m
    java.lang.String getCompany_CityState() -> n
    java.lang.String getCompany_GuGunCity() -> o
    java.lang.String getCompany_DetailAddress() -> p
    java.lang.String getCompany_Country() -> q
    java.lang.String getIM() -> r
    java.lang.String getIM2() -> s
    java.lang.String getIM3() -> t
    java.lang.String getEmail() -> u
    java.lang.String getEmail2() -> v
    java.lang.String getEmail3() -> w
    java.lang.String getMobile() -> x
    java.lang.String getWebPage() -> y
    java.lang.String getCompany_OfficeName() -> z
    java.lang.String getHome_Tel() -> A
    java.lang.String getHome_Tel2() -> B
    java.lang.String getHome_Post() -> C
    java.lang.String getHome_CityState() -> D
    java.lang.String getHome_GuGunCity() -> E
    java.lang.String getHome_DetailAddress() -> F
    java.lang.String getHome_Country() -> G
    java.lang.String getOther_Post() -> H
    java.lang.String getOther_CityState() -> I
    java.lang.String getOther_GuGunCity() -> J
    java.lang.String getOther_DetailAddress() -> K
    java.lang.String getOther_Country() -> L
    java.lang.String getSecretary_Name() -> M
    java.lang.String getSecretary_Tel() -> N
    java.lang.String getBirthday() -> O
    java.lang.String getMemo() -> P
    void setFirstName(java.lang.String) -> b
    void setName(java.lang.String) -> c
    void setCompany_Name(java.lang.String) -> d
    void setGrade(java.lang.String) -> e
    void setCompany_Tel(java.lang.String) -> f
    void setCompany_Fax(java.lang.String) -> g
    void setCompany_Post(java.lang.String) -> h
    void setCompany_CityState(java.lang.String) -> i
    void setCompany_GuGunCity(java.lang.String) -> j
    void setCompany_DetailAddress(java.lang.String) -> k
    void setCompany_Country(java.lang.String) -> l
    void setEmail(java.lang.String) -> m
    void setMobile(java.lang.String) -> n
    void setHome_Tel(java.lang.String) -> o
com.mcnc.hsmart.util.device.contact.AddressBookListItem -> com.mcnc.hsmart.util.device.a.b:
    java.lang.String boxPath -> a
    java.lang.String UID -> b
    java.lang.String displayName -> c
    java.lang.String mobilePhone -> d
    java.lang.String emailAddress -> e
    java.lang.String depart -> f
    java.lang.String company -> g
    java.lang.String faxNumber -> h
    java.lang.String companyPhone -> i
    java.lang.String getCompanyPhone() -> a
    void setCompanyPhone(java.lang.String) -> a
    java.lang.String getDepart() -> b
    java.lang.String getBoxPath() -> c
    java.lang.String getUID() -> d
    void setUID(java.lang.String) -> b
    java.lang.String getDisplayName() -> e
    java.lang.String getMobilePhone() -> f
    java.lang.String getEmailAddress() -> g
    java.lang.String getCompany() -> h
    void setCompany(java.lang.String) -> c
    void setDisplayName(java.lang.String) -> d
    void setMobilePhone(java.lang.String) -> e
    void setEmailAddress(java.lang.String) -> f
    java.lang.String getFaxNumber() -> i
    void setFaxNumber(java.lang.String) -> g
com.mcnc.hsmart.util.device.contact.SearchHelperForDeviceContact -> com.mcnc.hsmart.util.device.a.c:
    java.lang.String[] GROUP_PROJECTION -> a
    java.lang.String[] projection -> b
    java.util.ArrayList getSearchListResult(android.app.Activity,java.lang.String,java.lang.String) -> a
    java.lang.String getSearchPhoto(android.app.Activity,java.lang.String) -> a
    java.util.ArrayList getSearchDetailResult(android.app.Activity,java.lang.String) -> b
    boolean isGroup(android.app.Activity,java.lang.String,java.lang.String) -> b
    android.net.Uri addGroupContact(android.app.Activity,java.lang.String,java.lang.String) -> c
    int deletePerson(android.app.Activity,java.lang.String,java.lang.String) -> d
    android.content.ContentProviderResult[] addPersonContact$4cc57f6e(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.android.AndroidHttpClient -> com.mcnc.hsmart.util.device.qrcode.android.a:
    java.lang.ThreadLocal sThreadBlocked -> a
    org.apache.http.HttpRequestInterceptor sThreadCheckInterceptor -> b
    org.apache.http.client.HttpClient delegate -> c
    com.mcnc.hsmart.util.device.qrcode.android.AndroidHttpClient newInstance(java.lang.String) -> a
    void close() -> a
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.ThreadLocal access$0() -> b
    org.apache.http.HttpRequestInterceptor access$1() -> c
com.mcnc.hsmart.util.device.qrcode.android.AndroidHttpClient$1 -> com.mcnc.hsmart.util.device.qrcode.android.b:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.mcnc.hsmart.util.device.qrcode.android.AndroidHttpClient$2 -> com.mcnc.hsmart.util.device.qrcode.android.c:
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
com.mcnc.hsmart.util.device.qrcode.android.BaseLuminanceSource -> com.mcnc.hsmart.util.device.qrcode.android.d:
com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity -> com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity:
    java.lang.String TAG -> a
    java.util.Set DISPLAYABLE_METADATA_TYPES -> b
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler handler -> c
    com.mcnc.hsmart.util.device.qrcode.android.ViewfinderView viewfinderView -> d
    android.view.View statusView -> e
    android.view.View resultView -> f
    android.media.MediaPlayer mediaPlayer -> g
    com.google.zxing.Result lastResult -> h
    boolean hasSurface -> i
    boolean playBeep -> j
    boolean vibrate -> k
    boolean copyToClipboard -> l
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source source -> m
    java.lang.String sourceUrl -> n
    java.util.Vector decodeFormats -> o
    java.lang.String characterSet -> p
    java.lang.String versionName -> q
    com.mcnc.hsmart.util.device.qrcode.android.history.HistoryManager historyManager -> r
    android.content.Context mContext -> s
    android.media.MediaPlayer$OnCompletionListener beepListener -> t
    android.content.DialogInterface$OnClickListener aboutListener -> u
    int[] $SWITCH_TABLE$com$mcnc$hsmart$util$device$qrcode$android$CaptureActivity$Source -> v
    com.mcnc.hsmart.util.device.qrcode.android.ViewfinderView getViewfinderView() -> a
    android.os.Handler getHandler() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap) -> a
    void drawLine(android.graphics.Canvas,android.graphics.Paint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    boolean showHelpOnFirstLaunch() -> d
    void initCamera(android.view.SurfaceHolder) -> a
    void displayFrameworkBugMessageAndExit() -> e
    void resetStatusView() -> f
    void drawViewfinder() -> c
    android.content.Context access$0(com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity) -> a
    int[] $SWITCH_TABLE$com$mcnc$hsmart$util$device$qrcode$android$CaptureActivity$Source() -> g
com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$1 -> com.mcnc.hsmart.util.device.qrcode.android.e:
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$2 -> com.mcnc.hsmart.util.device.qrcode.android.f:
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source -> com.mcnc.hsmart.util.device.qrcode.android.g:
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source NATIVE_APP_INTENT -> a
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source PRODUCT_SEARCH_LINK -> b
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source ZXING_LINK -> c
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source NONE -> d
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source[] ENUM$VALUES -> e
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source[] values() -> values
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivity$Source valueOf(java.lang.String) -> valueOf
com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler -> com.mcnc.hsmart.util.device.qrcode.android.h:
    com.mcnc.hsmart.util.device.qrcode.android.CaptureBaseActivity activity -> a
    com.mcnc.hsmart.util.device.qrcode.android.DecodeThread decodeThread -> b
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State state -> c
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> a
    void restartPreviewAndDecode() -> b
com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State -> com.mcnc.hsmart.util.device.qrcode.android.i:
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State PREVIEW -> a
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State SUCCESS -> b
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State DONE -> c
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State[] ENUM$VALUES -> d
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State[] values() -> values
    com.mcnc.hsmart.util.device.qrcode.android.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
com.mcnc.hsmart.util.device.qrcode.android.CaptureBaseActivity -> com.mcnc.hsmart.util.device.qrcode.android.CaptureBaseActivity:
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap) -> a
    void drawViewfinder() -> c
    android.os.Handler getHandler() -> b
    com.mcnc.hsmart.util.device.qrcode.android.ViewfinderView getViewfinderView() -> a
com.mcnc.hsmart.util.device.qrcode.android.Contents -> com.mcnc.hsmart.util.device.qrcode.android.j:
    java.lang.String[] PHONE_KEYS -> a
    java.lang.String[] EMAIL_KEYS -> b
com.mcnc.hsmart.util.device.qrcode.android.DecodeFormatManager -> com.mcnc.hsmart.util.device.qrcode.android.k:
    java.util.regex.Pattern COMMA_PATTERN -> e
    java.util.Vector PRODUCT_FORMATS -> a
    java.util.Vector ONE_D_FORMATS -> b
    java.util.Vector QR_CODE_FORMATS -> c
    java.util.Vector DATA_MATRIX_FORMATS -> d
    java.util.Vector parseDecodeFormats(android.content.Intent) -> a
    java.util.Vector parseDecodeFormats(android.net.Uri) -> a
    java.util.Vector parseDecodeFormats(java.lang.Iterable,java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.android.DecodeHandler -> com.mcnc.hsmart.util.device.qrcode.android.l:
    java.lang.String TAG -> a
    com.mcnc.hsmart.util.device.qrcode.android.CaptureBaseActivity activity -> b
    com.google.zxing.MultiFormatReader multiFormatReader -> c
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.util.device.qrcode.android.DecodeThread -> com.mcnc.hsmart.util.device.qrcode.android.m:
    com.mcnc.hsmart.util.device.qrcode.android.CaptureBaseActivity activity -> a
    java.util.Hashtable hints -> b
    android.os.Handler handler -> c
    java.util.concurrent.CountDownLatch handlerInitLatch -> d
    android.os.Handler getHandler() -> a
    void run() -> run
com.mcnc.hsmart.util.device.qrcode.android.HelpActivity -> com.mcnc.hsmart.util.device.qrcode.android.HelpActivity:
    android.webkit.WebView webView -> a
    android.widget.Button backButton -> b
    android.view.View$OnClickListener backListener -> c
    android.view.View$OnClickListener doneListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.webkit.WebView access$0(com.mcnc.hsmart.util.device.qrcode.android.HelpActivity) -> a
    android.widget.Button access$1(com.mcnc.hsmart.util.device.qrcode.android.HelpActivity) -> b
com.mcnc.hsmart.util.device.qrcode.android.HelpActivity$1 -> com.mcnc.hsmart.util.device.qrcode.android.n:
    com.mcnc.hsmart.util.device.qrcode.android.HelpActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.HelpActivity$2 -> com.mcnc.hsmart.util.device.qrcode.android.o:
    com.mcnc.hsmart.util.device.qrcode.android.HelpActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.HelpActivity$HelpClient -> com.mcnc.hsmart.util.device.qrcode.android.p:
    com.mcnc.hsmart.util.device.qrcode.android.HelpActivity this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.mcnc.hsmart.util.device.qrcode.android.PlanarYUVLuminanceSource -> com.mcnc.hsmart.util.device.qrcode.android.q:
    byte[] yuvData -> a
    int dataWidth -> b
    int dataHeight -> c
    int left -> d
    int top -> e
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    android.graphics.Bitmap renderCroppedGreyscaleBitmap() -> a
com.mcnc.hsmart.util.device.qrcode.android.PreferencesActivity -> com.mcnc.hsmart.util.device.qrcode.android.PreferencesActivity:
    android.preference.CheckBoxPreference decode1D -> a
    android.preference.CheckBoxPreference decodeQR -> b
    android.preference.CheckBoxPreference decodeDataMatrix -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void disableLastCheckedPref() -> a
com.mcnc.hsmart.util.device.qrcode.android.ViewfinderResultPointCallback -> com.mcnc.hsmart.util.device.qrcode.android.r:
    com.mcnc.hsmart.util.device.qrcode.android.ViewfinderView viewfinderView -> a
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.mcnc.hsmart.util.device.qrcode.android.ViewfinderView -> com.mcnc.hsmart.util.device.qrcode.android.ViewfinderView:
    int[] SCANNER_ALPHA -> a
    android.graphics.Paint paint -> b
    android.graphics.Bitmap resultBitmap -> c
    int maskColor -> d
    int resultColor -> e
    int frameColor -> f
    int laserColor -> g
    int resultPointColor -> h
    int scannerAlpha -> i
    java.util.Collection possibleResultPoints -> j
    java.util.Collection lastPossibleResultPoints -> k
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawViewfinder() -> a
    void drawResultBitmap(android.graphics.Bitmap) -> a
    void addPossibleResultPoint(com.google.zxing.ResultPoint) -> a
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity -> com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity:
    com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity$NetworkThread networkThread -> a
    java.lang.String isbn -> b
    android.widget.EditText queryTextView -> c
    android.widget.Button queryButton -> d
    android.widget.ListView resultListView -> e
    android.widget.TextView headerView -> f
    android.os.Handler handler -> g
    android.view.View$OnClickListener buttonListener -> h
    android.view.View$OnKeyListener keyListener -> i
    java.util.regex.Pattern TAG_PATTERN -> j
    java.util.regex.Pattern LT_ENTITY_PATTERN -> k
    java.util.regex.Pattern GT_ENTITY_PATTERN -> l
    java.util.regex.Pattern QUOTE_ENTITY_PATTERN -> m
    java.util.regex.Pattern QUOT_ENTITY_PATTERN -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsResult parseResult(org.json.JSONObject) -> a
    void access$0(com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity,org.json.JSONObject) -> a
    void access$1(com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity) -> a
    android.widget.TextView access$2(com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity) -> b
    void access$3(com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity) -> c
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity$1 -> com.mcnc.hsmart.util.device.qrcode.android.book.a:
    com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity$2 -> com.mcnc.hsmart.util.device.qrcode.android.book.b:
    com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity$3 -> com.mcnc.hsmart.util.device.qrcode.android.book.c:
    com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsActivity$NetworkThread -> com.mcnc.hsmart.util.device.qrcode.android.book.d:
    java.lang.String isbn -> a
    java.lang.String query -> b
    android.os.Handler handler -> c
    void run() -> run
    java.lang.String getCookie(java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsAdapter -> com.mcnc.hsmart.util.device.qrcode.android.book.e:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsListItem -> com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsListItem:
    android.widget.TextView pageNumberView -> a
    android.widget.TextView snippetView -> b
    void onFinishInflate() -> onFinishInflate
    void set(com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsResult) -> a
com.mcnc.hsmart.util.device.qrcode.android.book.SearchBookContentsResult -> com.mcnc.hsmart.util.device.qrcode.android.book.f:
    java.lang.String query -> a
    java.lang.String pageNumber -> b
    java.lang.String snippet -> c
    boolean validSnippet -> d
    void setQuery(java.lang.String) -> a
    java.lang.String getPageNumber() -> a
    java.lang.String getSnippet() -> b
    boolean getValidSnippet() -> c
    java.lang.String getQuery() -> d
com.mcnc.hsmart.util.device.qrcode.android.camera.AutoFocusCallback -> com.mcnc.hsmart.util.device.qrcode.android.a.a:
    java.lang.String TAG -> a
    android.os.Handler autoFocusHandler -> b
    int autoFocusMessage -> c
    void setHandler(android.os.Handler,int) -> a
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.mcnc.hsmart.util.device.qrcode.android.camera.CameraConfigurationManager -> com.mcnc.hsmart.util.device.qrcode.android.a.b:
    java.lang.String TAG -> a
    java.util.regex.Pattern COMMA_PATTERN -> b
    android.content.Context context -> c
    android.graphics.Point screenResolution -> d
    android.graphics.Point cameraResolution -> e
    int previewFormat -> f
    java.lang.String previewFormatString -> g
    void initFromCameraParameters(android.hardware.Camera) -> a
    void setDesiredCameraParameters(android.hardware.Camera) -> b
    android.graphics.Point getCameraResolution() -> a
    android.graphics.Point getScreenResolution() -> b
    int getPreviewFormat() -> c
    java.lang.String getPreviewFormatString() -> d
    android.graphics.Point findBestPreviewSizeValue(java.lang.CharSequence,android.graphics.Point) -> a
    int findBestMotZoomValue(java.lang.CharSequence,int) -> a
com.mcnc.hsmart.util.device.qrcode.android.camera.CameraManager -> com.mcnc.hsmart.util.device.qrcode.android.a.c:
    java.lang.String TAG -> b
    com.mcnc.hsmart.util.device.qrcode.android.camera.CameraManager cameraManager -> c
    int SDK_INT -> a
    android.content.Context context -> d
    com.mcnc.hsmart.util.device.qrcode.android.camera.CameraConfigurationManager configManager -> e
    android.hardware.Camera camera -> f
    android.graphics.Rect framingRect -> g
    android.graphics.Rect framingRectInPreview -> h
    boolean initialized -> i
    boolean previewing -> j
    boolean useOneShotPreviewCallback -> k
    com.mcnc.hsmart.util.device.qrcode.android.camera.PreviewCallback previewCallback -> l
    com.mcnc.hsmart.util.device.qrcode.android.camera.AutoFocusCallback autoFocusCallback -> m
    void init(android.content.Context) -> a
    com.mcnc.hsmart.util.device.qrcode.android.camera.CameraManager get() -> a
    void openDriver(android.view.SurfaceHolder) -> a
    void closeDriver() -> b
    void startPreview() -> c
    void stopPreview() -> d
    void requestPreviewFrame$2a8797e(android.os.Handler) -> a
    void requestAutoFocus$2a8797e(android.os.Handler) -> b
    android.graphics.Rect getFramingRect() -> e
    com.mcnc.hsmart.util.device.qrcode.android.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> a
com.mcnc.hsmart.util.device.qrcode.android.camera.FlashlightManager -> com.mcnc.hsmart.util.device.qrcode.android.a.d:
    java.lang.String TAG -> a
    java.lang.Object iHardwareService -> b
    java.lang.reflect.Method setFlashEnabledMethod -> c
    java.lang.Class maybeForName(java.lang.String) -> a
    java.lang.reflect.Method maybeGetMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> a
    void disableFlashlight() -> a
com.mcnc.hsmart.util.device.qrcode.android.camera.PreviewCallback -> com.mcnc.hsmart.util.device.qrcode.android.a.e:
    java.lang.String TAG -> a
    com.mcnc.hsmart.util.device.qrcode.android.camera.CameraConfigurationManager configManager -> b
    boolean useOneShotPreviewCallback -> c
    android.os.Handler previewHandler -> d
    int previewMessage -> e
    void setHandler(android.os.Handler,int) -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity -> com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity:
    com.mcnc.hsmart.util.device.qrcode.android.encode.QRCodeEncoder qrCodeEncoder -> a
    android.app.ProgressDialog progressDialog -> b
    boolean firstLayout -> c
    android.view.ViewTreeObserver$OnGlobalLayoutListener layoutListener -> d
    android.os.Handler handler -> e
    android.content.DialogInterface$OnClickListener clickListener -> f
    android.content.DialogInterface$OnCancelListener cancelListener -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean access$0(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity) -> a
    void access$1(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity,com.mcnc.hsmart.util.device.qrcode.android.encode.QRCodeEncoder) -> a
    com.mcnc.hsmart.util.device.qrcode.android.encode.QRCodeEncoder access$2(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity) -> b
    android.os.Handler access$3(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity) -> c
    android.content.DialogInterface$OnCancelListener access$4(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity) -> d
    void access$5(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity,android.app.ProgressDialog) -> a
    void access$6(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity,int) -> a
    void access$7$4a70152f(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity) -> e
    android.app.ProgressDialog access$8(com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity) -> f
com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity$1 -> com.mcnc.hsmart.util.device.qrcode.android.encode.a:
    com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity$2 -> com.mcnc.hsmart.util.device.qrcode.android.encode.b:
    com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity$3 -> com.mcnc.hsmart.util.device.qrcode.android.encode.c:
    com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity$4 -> com.mcnc.hsmart.util.device.qrcode.android.encode.d:
    com.mcnc.hsmart.util.device.qrcode.android.encode.EncodeActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.mcnc.hsmart.util.device.qrcode.android.encode.QRCodeEncoder -> com.mcnc.hsmart.util.device.qrcode.android.encode.e:
    android.app.Activity activity -> a
    java.lang.String contents -> b
    java.lang.String displayContents -> c
    java.lang.String title -> d
    com.google.zxing.BarcodeFormat format -> e
    void requestBarcode(android.os.Handler,int) -> a
    java.lang.String getDisplayContents() -> a
    java.lang.String getTitle() -> b
    boolean encodeContentsFromShareIntent(android.content.Intent) -> a
    void encodeQRCodeContents(android.content.Intent,java.lang.String) -> a
    boolean encodeQRCodeContents(com.mcnc.hsmart.util.device.qrcode.result.AddressBookParsedResult) -> a
com.mcnc.hsmart.util.device.qrcode.android.encode.QRCodeEncoder$EncodeThread -> com.mcnc.hsmart.util.device.qrcode.android.encode.f:
    java.lang.String contents -> a
    android.os.Handler handler -> b
    int pixelResolution -> c
    com.google.zxing.BarcodeFormat format -> d
    void run() -> run
com.mcnc.hsmart.util.device.qrcode.android.history.DBHelper -> com.mcnc.hsmart.util.device.qrcode.android.b.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.mcnc.hsmart.util.device.qrcode.android.history.HistoryManager -> com.mcnc.hsmart.util.device.qrcode.android.b.b:
    java.lang.String[] TEXT_COL_PROJECTION -> a
    java.lang.String[] TEXT_FORMAT_COL_PROJECTION -> b
    java.lang.String[] ID_COL_PROJECTION -> c
    com.mcnc.hsmart.util.device.qrcode.android.CaptureBaseActivity activity -> d
    java.util.List getHistoryItems() -> d
    android.app.AlertDialog buildAlert() -> a
    void addHistoryItem(com.google.zxing.Result) -> a
    void trimHistory() -> b
    void clearHistory() -> c
    com.mcnc.hsmart.util.device.qrcode.android.CaptureBaseActivity access$0(com.mcnc.hsmart.util.device.qrcode.android.history.HistoryManager) -> a
com.mcnc.hsmart.util.device.qrcode.android.history.HistoryManager$1 -> com.mcnc.hsmart.util.device.qrcode.android.b.c:
    com.mcnc.hsmart.util.device.qrcode.android.history.HistoryManager this$0 -> a
    java.lang.String[] val$dialogItems -> b
    java.util.List val$items -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.result.AddressBookResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.a:
    java.text.DateFormat DATE_FORMAT -> a
    boolean[] fields -> b
    int buttonCount -> c
    java.lang.CharSequence getDisplayContents() -> a
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.CalendarResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.b:
    java.text.DateFormat DATE_FORMAT -> a
    java.text.DateFormat DATE_TIME_FORMAT -> b
    java.lang.CharSequence getDisplayContents() -> a
    void appendTime(java.lang.String,java.lang.StringBuffer) -> a
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.EmailAddressResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.c:
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.GeoResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.d:
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.ISBNResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.e:
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.ProductResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.f:
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.ResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.g:
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResult result -> a
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResult getResult() -> c
    java.lang.CharSequence getDisplayContents() -> a
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.ResultHandlerFactory -> com.mcnc.hsmart.util.device.qrcode.android.c.h:
    com.mcnc.hsmart.util.device.qrcode.android.result.ResultHandler makeResultHandler(android.app.Activity,com.google.zxing.Result) -> a
com.mcnc.hsmart.util.device.qrcode.android.result.SMSResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.i:
    java.lang.CharSequence getDisplayContents() -> a
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.TelResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.j:
    java.lang.CharSequence getDisplayContents() -> a
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.TextResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.k:
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.result.URIResultHandler -> com.mcnc.hsmart.util.device.qrcode.android.c.l:
    int getDisplayTitle() -> b
com.mcnc.hsmart.util.device.qrcode.android.share.BookmarkPickerActivity -> com.mcnc.hsmart.util.device.qrcode.android.share.BookmarkPickerActivity:
    java.lang.String[] BOOKMARK_PROJECTION -> a
    int[] TWO_LINE_VIEW_IDS -> b
    android.database.Cursor cursor -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity -> com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity:
    java.lang.String[] METHODS_PROJECTION -> a
    java.lang.String[] PHONES_PROJECTION -> b
    android.widget.Button clipboardButton -> c
    android.view.View$OnClickListener contactListener -> d
    android.view.View$OnClickListener bookmarkListener -> e
    android.view.View$OnClickListener clipboardListener -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showContactAsBarcode(android.net.Uri) -> a
    java.lang.String massageContactData(java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity$1 -> com.mcnc.hsmart.util.device.qrcode.android.share.a:
    com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity$2 -> com.mcnc.hsmart.util.device.qrcode.android.share.b:
    com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity$3 -> com.mcnc.hsmart.util.device.qrcode.android.share.c:
    com.mcnc.hsmart.util.device.qrcode.android.share.ShareActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.util.device.qrcode.result.AbstractDoCoMoResultParser -> com.mcnc.hsmart.util.device.qrcode.a.a:
    java.lang.String[] matchDoCoMoPrefixedField$3d9ab706(java.lang.String,java.lang.String) -> a
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> a
com.mcnc.hsmart.util.device.qrcode.result.AddressBookAUResultParser -> com.mcnc.hsmart.util.device.qrcode.a.b:
    com.mcnc.hsmart.util.device.qrcode.result.AddressBookParsedResult parse(com.google.zxing.Result) -> a
    java.lang.String[] matchMultipleValuePrefix$1d94d535(java.lang.String,java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.result.AddressBookDoCoMoResultParser -> com.mcnc.hsmart.util.device.qrcode.a.c:
    com.mcnc.hsmart.util.device.qrcode.result.AddressBookParsedResult parse(com.google.zxing.Result) -> a
com.mcnc.hsmart.util.device.qrcode.result.AddressBookParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.d:
    java.lang.String[] names -> a
    java.lang.String pronunciation -> b
    java.lang.String[] phoneNumbers -> c
    java.lang.String[] emails -> d
    java.lang.String note -> e
    java.lang.String address -> f
    java.lang.String org -> g
    java.lang.String birthday -> h
    java.lang.String title -> i
    java.lang.String url -> j
    java.lang.String[] getNames() -> a
    java.lang.String getPronunciation() -> b
    java.lang.String[] getPhoneNumbers() -> c
    java.lang.String[] getEmails() -> d
    java.lang.String getNote() -> e
    java.lang.String getAddress() -> f
    java.lang.String getTitle() -> g
    java.lang.String getOrg() -> h
    java.lang.String getURL() -> i
    java.lang.String getBirthday() -> j
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.BizcardResultParser -> com.mcnc.hsmart.util.device.qrcode.a.e:
    com.mcnc.hsmart.util.device.qrcode.result.AddressBookParsedResult parse(com.google.zxing.Result) -> a
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.result.BookmarkDoCoMoResultParser -> com.mcnc.hsmart.util.device.qrcode.a.f:
com.mcnc.hsmart.util.device.qrcode.result.CalendarParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.g:
    java.lang.String summary -> a
    java.lang.String start -> b
    java.lang.String end -> c
    java.lang.String getSummary() -> a
    java.lang.String getStart() -> b
    java.lang.String getEnd() -> c
    java.lang.String getDisplayResult() -> k
    void validateDate(java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.result.EmailAddressParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.h:
    java.lang.String emailAddress -> a
    java.lang.String subject -> b
    java.lang.String body -> c
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.EmailAddressResultParser -> com.mcnc.hsmart.util.device.qrcode.a.i:
com.mcnc.hsmart.util.device.qrcode.result.EmailDoCoMoResultParser -> com.mcnc.hsmart.util.device.qrcode.a.j:
    char[] ATEXT_SYMBOLS -> a
    com.mcnc.hsmart.util.device.qrcode.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> a
    boolean isBasicallyValidEmailAddress(java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.result.GeoParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.k:
    double latitude -> a
    double longitude -> b
    double altitude -> c
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.GeoResultParser -> com.mcnc.hsmart.util.device.qrcode.a.l:
    com.mcnc.hsmart.util.device.qrcode.result.GeoParsedResult parse(com.google.zxing.Result) -> a
com.mcnc.hsmart.util.device.qrcode.result.ISBNParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.m:
    java.lang.String isbn -> a
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.ParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.n:
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType type -> a
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType getType() -> l
    java.lang.String getDisplayResult() -> k
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuffer) -> a
    void maybeAppend(java.lang.String[],java.lang.StringBuffer) -> a
com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType -> com.mcnc.hsmart.util.device.qrcode.a.o:
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType ADDRESSBOOK -> a
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType EMAIL_ADDRESS -> b
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType PRODUCT -> c
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType URI -> d
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType TEXT -> e
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType GEO -> f
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType TEL -> g
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType SMS -> h
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType CALENDAR -> i
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResultType ISBN -> j
    java.lang.String name -> k
    java.lang.String toString() -> toString
com.mcnc.hsmart.util.device.qrcode.result.ProductParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.p:
    java.lang.String productID -> a
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.ProductResultParser -> com.mcnc.hsmart.util.device.qrcode.a.q:
    com.mcnc.hsmart.util.device.qrcode.result.ProductParsedResult parse(com.google.zxing.Result) -> a
com.mcnc.hsmart.util.device.qrcode.result.ResultParser -> com.mcnc.hsmart.util.device.qrcode.a.r:
    com.mcnc.hsmart.util.device.qrcode.result.ParsedResult parseResult(com.google.zxing.Result) -> b
    java.lang.String[] maybeWrap(java.lang.String) -> b
    java.lang.String unescapeBackslash(java.lang.String) -> a
    int parseHexDigit(char) -> a
    boolean isStringOfDigits$505cff18(java.lang.String) -> c
    java.util.Hashtable parseNameValuePairs(java.lang.String) -> d
    void appendKeyValue(java.lang.String,int,int,java.util.Hashtable) -> a
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> a
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> b
    java.lang.String[] toStringArray(java.util.Vector) -> a
com.mcnc.hsmart.util.device.qrcode.result.SMSMMSResultParser -> com.mcnc.hsmart.util.device.qrcode.a.s:
com.mcnc.hsmart.util.device.qrcode.result.SMSParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.t:
    java.lang.String number -> a
    java.lang.String via -> b
    java.lang.String subject -> c
    java.lang.String body -> d
    java.lang.String getNumber() -> a
    java.lang.String getVia() -> b
    java.lang.String getSubject() -> c
    java.lang.String getBody() -> d
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.TelParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.u:
    java.lang.String number -> a
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.TextParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.v:
    java.lang.String text -> a
    java.lang.String getDisplayResult() -> k
com.mcnc.hsmart.util.device.qrcode.result.URIParsedResult -> com.mcnc.hsmart.util.device.qrcode.a.w:
    java.lang.String uri -> a
    java.lang.String title -> b
    java.lang.String getDisplayResult() -> k
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> a
com.mcnc.hsmart.util.device.qrcode.result.URIResultParser -> com.mcnc.hsmart.util.device.qrcode.a.x:
    boolean isBasicallyValidURI(java.lang.String) -> a
com.mcnc.hsmart.util.device.qrcode.result.VCardResultParser -> com.mcnc.hsmart.util.device.qrcode.a.y:
    com.mcnc.hsmart.util.device.qrcode.result.AddressBookParsedResult parse(com.google.zxing.Result) -> a
    java.lang.String[] matchVCardPrefixedField(java.lang.String,java.lang.String,boolean) -> b
    java.lang.String matchSingleVCardPrefixedField(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String formatAddress(java.lang.String) -> a
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuffer) -> a
com.mcnc.hsmart.util.device.qrcode.result.VEventResultParser -> com.mcnc.hsmart.util.device.qrcode.a.z:
    com.mcnc.hsmart.util.device.qrcode.result.CalendarParsedResult parse(com.google.zxing.Result) -> a
com.mcnc.hsmart.util.device.sqlite.sqliteUtil -> com.mcnc.hsmart.util.device.b.a:
    org.json.JSONObject selectQueryString$9dd4b50(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean excuteQuery(java.lang.String,java.lang.String,java.lang.String[]) -> a
com.mcnc.hsmart.view.ContextMenuButton -> com.mcnc.hsmart.view.a:
    android.widget.ImageView imgView -> a
    android.widget.TextView textView -> b
    int contextBgColor -> c
    int contextTextColor -> d
    int contextLayoutColor -> e
    void setText(java.lang.CharSequence) -> a
    void setImageDrawable(android.graphics.drawable.Drawable) -> a
    void setImageColor(int) -> a
    void setVisibleText(boolean) -> a
    void setContextMenuButtonBgColor$13462e() -> a
    void setContextLayoutColor(int) -> b
    void setContextMenuButtonTextColor(int) -> c
    int getContextLayoutColor() -> b
com.mcnc.hsmart.view.DownloadList -> com.mcnc.hsmart.view.DownloadList:
    void onCreate(android.os.Bundle) -> onCreate
com.mcnc.hsmart.view.DownloadList$1 -> com.mcnc.hsmart.view.b:
    com.mcnc.hsmart.view.DownloadList this$0 -> a
    java.util.ArrayList val$list -> b
    android.widget.ArrayAdapter val$aa -> c
    void run() -> run
com.mcnc.hsmart.view.DownloadList$1$1 -> com.mcnc.hsmart.view.c:
    java.util.ArrayList val$list -> a
    android.widget.ArrayAdapter val$aa -> b
    void run() -> run
com.mcnc.hsmart.view.DownloadListActivity -> com.mcnc.hsmart.view.DownloadListActivity:
    java.lang.String TAG -> p
    android.widget.LinearLayout headerLayout -> q
    android.widget.ImageView backBtn -> r
    android.widget.TextView titleTv -> s
    java.util.ArrayList downloadObjects -> t
    com.mcnc.hsmart.view.DownloadListActivity$DownloadAdapter adapter -> u
    android.content.BroadcastReceiver completeReceiver -> v
    android.view.View$OnClickListener clicklistener -> o
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onPause() -> onPause
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void addService(java.lang.String,java.lang.String) -> a
    void AppUpgrade(android.app.Activity,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    com.mcnc.hsmart.view.DownloadListActivity$DownloadAdapter access$0(com.mcnc.hsmart.view.DownloadListActivity) -> a
    java.util.ArrayList access$1() -> a
    java.lang.String access$2(com.mcnc.hsmart.view.DownloadListActivity) -> b
com.mcnc.hsmart.view.DownloadListActivity$1 -> com.mcnc.hsmart.view.d:
    com.mcnc.hsmart.view.DownloadListActivity this$0 -> a
    void run() -> run
com.mcnc.hsmart.view.DownloadListActivity$2 -> com.mcnc.hsmart.view.e:
    com.mcnc.hsmart.view.DownloadListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mcnc.hsmart.view.DownloadListActivity$3 -> com.mcnc.hsmart.view.f:
    com.mcnc.hsmart.view.DownloadListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.mcnc.hsmart.view.DownloadListActivity access$0(com.mcnc.hsmart.view.DownloadListActivity$3) -> a
com.mcnc.hsmart.view.DownloadListActivity$3$1 -> com.mcnc.hsmart.view.g:
    com.mcnc.hsmart.view.DownloadListActivity$3 this$1 -> a
    com.mcnc.hsmart.download.DownloadObject val$downloadObj -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    com.mcnc.hsmart.view.DownloadListActivity$3 access$0(com.mcnc.hsmart.view.DownloadListActivity$3$1) -> a
com.mcnc.hsmart.view.DownloadListActivity$3$1$1 -> com.mcnc.hsmart.view.h:
    com.mcnc.hsmart.download.DownloadObject val$downloadObj -> a
    void run() -> run
com.mcnc.hsmart.view.DownloadListActivity$3$1$2 -> com.mcnc.hsmart.view.i:
    com.mcnc.hsmart.view.DownloadListActivity$3$1 this$2 -> a
    void run() -> run
com.mcnc.hsmart.view.DownloadListActivity$DownloadAdapter -> com.mcnc.hsmart.view.j:
    com.mcnc.hsmart.view.DownloadListActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mcnc.hsmart.view.HomeActivity -> com.mcnc.hsmart.view.HomeActivity:
    java.lang.String TAG -> L
    android.widget.ViewFlipper bodyFlipper -> M
    android.view.GestureDetector mBodyGestures -> N
    com.mcnc.hsmart.core.view.BaseWebView[] mainView -> O
    boolean[] initView -> P
    int page_count -> Q
    android.view.View$OnTouchListener menuBodyTouchListener -> R
    void onCreateContent(android.os.Bundle) -> a
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onClick(android.view.View) -> onClick
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addPage(int) -> a
    java.lang.String access$0(com.mcnc.hsmart.view.HomeActivity) -> a
    android.view.GestureDetector access$1(com.mcnc.hsmart.view.HomeActivity) -> b
    void access$2(com.mcnc.hsmart.view.HomeActivity) -> c
    void access$3(com.mcnc.hsmart.view.HomeActivity) -> d
    void access$4(com.mcnc.hsmart.view.HomeActivity) -> e
    void access$5(com.mcnc.hsmart.view.HomeActivity) -> f
com.mcnc.hsmart.view.HomeActivity$1 -> com.mcnc.hsmart.view.k:
    com.mcnc.hsmart.view.HomeActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mcnc.hsmart.view.HomeActivity$3 -> com.mcnc.hsmart.view.l:
    com.mcnc.hsmart.view.HomeActivity this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mcnc.hsmart.view.HomeActivity$4 -> com.mcnc.hsmart.view.m:
    com.mcnc.hsmart.view.HomeActivity this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mcnc.hsmart.view.ImageViewActivity -> com.mcnc.hsmart.view.ImageViewActivity:
    java.lang.String TAG -> o
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onClick(android.view.View) -> onClick
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void addService(java.lang.String,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
com.mcnc.hsmart.view.ImageViewActivity$1 -> com.mcnc.hsmart.view.n:
    com.mcnc.hsmart.view.ImageViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.view.ImageViewActivity$2 -> com.mcnc.hsmart.view.o:
    com.mcnc.hsmart.view.ImageViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.view.LoginActivity -> com.mcnc.hsmart.view.LoginActivity:
    java.lang.String TAG -> o
    android.widget.ImageButton btn_helpdesk -> p
    android.widget.ImageButton loginButton -> q
    boolean isVersionCheck -> r
    org.json.JSONObject jsonLogin -> s
    android.widget.EditText userIdEditText -> t
    android.widget.EditText passwordEditText -> u
    android.content.Context mContext -> v
    void onCreateContent(android.os.Bundle) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void setHeader(android.widget.LinearLayout) -> c
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onBackPressed() -> onBackPressed
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean isValidationCheck() -> a
    void processDownloadCheck() -> f
    void processLogin() -> b
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void requestKillProcess(android.app.Activity) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void addService(java.lang.String,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    java.lang.String access$0(com.mcnc.hsmart.view.LoginActivity) -> a
    android.content.Context access$1(com.mcnc.hsmart.view.LoginActivity) -> b
com.mcnc.hsmart.view.LoginActivity$1 -> com.mcnc.hsmart.view.p:
    com.mcnc.hsmart.view.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.view.LoginActivity$2 -> com.mcnc.hsmart.view.q:
    com.mcnc.hsmart.view.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.hsmart.view.LoginActivity$3 -> com.mcnc.hsmart.view.r:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.hsmart.view.LoginActivity$4 -> com.mcnc.hsmart.view.s:
    android.app.Activity val$context -> a
    void run() -> run
com.mcnc.hsmart.view.MainActivity -> com.mcnc.hsmart.view.MainActivity:
    java.lang.String callback_name -> L
    java.lang.String back_action -> M
    java.lang.Object etcData -> N
    boolean btoolbarVisible -> O
    java.lang.String TAG -> P
    android.widget.LinearLayout bottomBaseLayout -> o
    boolean isHomeActivity -> p
    android.widget.LinearLayout$LayoutParams paramLeftbtn -> q
    android.widget.LinearLayout$LayoutParams paramRightbtn -> r
    android.widget.LinearLayout$LayoutParams paramRightbtns -> s
    android.widget.TextView titleTv -> t
    android.widget.ImageButton[] updownBtn -> u
    android.widget.LinearLayout contextMenuLayout -> v
    boolean contextAnimation -> w
    boolean fullScreen -> x
    android.widget.FrameLayout bodyFramLayout -> y
    android.widget.LinearLayout headerLeftLayout -> z
    android.widget.LinearLayout headerTitleLayout -> A
    android.widget.LinearLayout headerRightLayout -> B
    android.view.animation.Animation slideOut -> C
    android.view.animation.Animation slideIn -> D
    android.view.animation.Animation slideUpIn -> E
    android.view.animation.Animation slideDownIn -> F
    android.view.animation.Animation slideUpOut -> G
    android.view.animation.Animation slideDownOut -> H
    boolean modal -> I
    long lastTouchTime -> Q
    android.widget.LinearLayout$LayoutParams layoutParam -> J
    android.widget.LinearLayout$LayoutParams a -> R
    android.widget.LinearLayout$LayoutParams b -> K
    android.widget.LinearLayout$LayoutParams c -> S
    void onCreateContent(android.os.Bundle) -> a
    void init() -> b
    void onPause() -> onPause
    void onStart() -> onStart
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onClick(android.view.View) -> onClick
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void setContainer(org.json.JSONObject) -> a
    void toggleContext() -> f
    void onBackPressed() -> onBackPressed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
    org.json.JSONObject getImageInfo(android.net.Uri) -> a
    java.lang.String getCallback_name() -> g
    void setCallback_name(java.lang.String) -> c
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    java.lang.String access$0(com.mcnc.hsmart.view.MainActivity) -> a
    android.widget.LinearLayout access$3(com.mcnc.hsmart.view.MainActivity) -> b
    android.widget.LinearLayout access$4(com.mcnc.hsmart.view.MainActivity) -> c
    android.widget.LinearLayout access$5(com.mcnc.hsmart.view.MainActivity) -> d
    android.widget.LinearLayout access$6(com.mcnc.hsmart.view.MainActivity) -> e
    boolean access$7(com.mcnc.hsmart.view.MainActivity) -> f
com.mcnc.hsmart.view.MainActivity$1 -> com.mcnc.hsmart.view.t:
    com.mcnc.hsmart.view.MainActivity this$0 -> a
    com.mcnc.hsmart.core.common.Response val$response -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    com.mcnc.hsmart.view.MainActivity access$0(com.mcnc.hsmart.view.MainActivity$1) -> a
com.mcnc.hsmart.view.MainActivity$1$1 -> com.mcnc.hsmart.view.u:
    com.mcnc.hsmart.view.MainActivity$1 this$1 -> a
    void run() -> run
com.mcnc.hsmart.view.MainActivity$4 -> com.mcnc.hsmart.view.v:
    com.mcnc.hsmart.view.MainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.hsmart.view.MainActivity$5 -> com.mcnc.hsmart.view.w:
    com.mcnc.hsmart.view.MainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.hsmart.view.MainActivity$6 -> com.mcnc.hsmart.view.x:
    com.mcnc.hsmart.view.MainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.hsmart.view.MainActivity$7 -> com.mcnc.hsmart.view.y:
    com.mcnc.hsmart.view.MainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.hsmart.view.PopupViewActivity -> com.mcnc.hsmart.view.PopupViewActivity:
    java.lang.String TAG -> L
    java.lang.String tagetPage -> M
    java.lang.String back_action -> N
    int width -> O
    int height -> P
    int orientation -> Q
    android.widget.LinearLayout bodyLayout -> R
    int titleBarHeight -> S
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onBackPressed() -> onBackPressed
    void init() -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.mcnc.hsmart.view.SubViewActivity -> com.mcnc.hsmart.view.SubViewActivity:
    java.lang.String TAG -> L
    java.lang.String tagetPage -> M
    java.lang.String title -> N
    org.json.JSONArray buttons -> O
    int width -> P
    int height -> Q
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    android.widget.LinearLayout setBottom() -> a
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onBackPressed() -> onBackPressed
com.mcnc.hsmart.viewer.ImageViewerTouch -> com.mcnc.hsmart.viewer.ImageViewerTouch:
    android.graphics.Matrix matrix -> a
    android.graphics.Matrix savedMatrix -> b
    android.graphics.Matrix savedMatrix2 -> c
    int mode -> d
    android.graphics.PointF start -> e
    android.graphics.PointF mid -> f
    float oldDist -> g
    boolean isInit -> h
    int touch_mode -> i
    long lastTouchTime -> j
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void init() -> a
    void setImagePit2(int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    float spacing(android.view.MotionEvent) -> a
    void matrixTurning(android.graphics.Matrix,android.widget.ImageView) -> a
com.mcnc.hsmart.wrapper.ImageWrappter -> com.mcnc.hsmart.c.a:
    boolean bUseTargetDensity -> a
    void setMode(int) -> a
    void setTargetDensity(int) -> b
    void setUseTargetDensity$1385ff() -> a
    android.graphics.drawable.Drawable setDensity(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDrawable(java.lang.String,android.content.Context) -> a
    android.graphics.drawable.Drawable getDrawableAsset(java.lang.String,android.content.Context) -> b
    java.lang.String getUri(java.lang.String) -> a
com.mcnc.parecis.bizmob.configuration.provider.LocalFileProviderImp -> com.mcnc.parecis.bizmob.configuration.provider.LocalFileProviderImp:
    java.lang.String URI_PREFIX -> a
    java.lang.String URI_LOCALFILE -> b
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    boolean onCreate() -> onCreate
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.mcnc.parecis.bizmob.controller.ImpProcessController -> com.mcnc.parecis.bizmob.controller.ImpProcessController:
    java.lang.String TAG -> k
    void onCreate() -> onCreate
    java.lang.String access$1(com.mcnc.parecis.bizmob.controller.ImpProcessController) -> a
    void access$2(com.mcnc.hsmart.core.download.IDownload) -> a
    com.mcnc.hsmart.core.download.IDownload access$3() -> d
    void access$4(com.mcnc.hsmart.core.upload.IUpload) -> a
com.mcnc.parecis.bizmob.controller.ImpProcessController$1 -> com.mcnc.parecis.bizmob.controller.a:
    com.mcnc.parecis.bizmob.controller.ImpProcessController this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.mcnc.parecis.bizmob.controller.ImpProcessController$2 -> com.mcnc.parecis.bizmob.controller.b:
    com.mcnc.parecis.bizmob.controller.ImpProcessController this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.mcnc.parecis.bizmob.def.Def -> com.mcnc.parecis.bizmob.a.a:
com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageItem -> com.mcnc.parecis.bizmob.nativeView.imageViewer.a:
    java.lang.String imageUrl -> a
    java.lang.String imagePath -> b
    boolean isDownload -> c
    int pageNum -> d
    boolean getIsDownload() -> a
    void setIsDownload$1385ff() -> b
    java.lang.String getImagePath() -> c
    void setImagePath(java.lang.String) -> a
    java.lang.String getImageUrl() -> d
    int getPageNum() -> e
    byte[] encodeBMP1(int[],int,int) -> a
    int swapEndian(int) -> a
com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity -> com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity:
    java.lang.String TAG -> L
    java.lang.String callback -> M
    org.json.JSONObject message -> N
    com.mcnc.hsmart.util.AppConfigReader imageData$1f82a114 -> O
    int viewPage -> P
    android.widget.ImageView prevButton -> Q
    android.widget.ImageView nextButton -> R
    void onCreateContent(android.os.Bundle) -> a
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onDestroy() -> onDestroy
    void setButton(int) -> b
    void setTitle(java.lang.String) -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onSelect(int) -> a
    int access$0(com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity) -> a
com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity$1 -> com.mcnc.parecis.bizmob.nativeView.imageViewer.b:
    com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity$2 -> com.mcnc.parecis.bizmob.nativeView.imageViewer.c:
    com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity$3 -> com.mcnc.parecis.bizmob.nativeView.imageViewer.d:
    int val$convert -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity$4 -> com.mcnc.parecis.bizmob.nativeView.imageViewer.e:
    com.mcnc.parecis.bizmob.nativeView.imageViewer.ImageViewActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.parecis.bizmob.portal.Login20Task -> com.mcnc.parecis.bizmob.b.a:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.parecis.bizmob.portal.Login20Task) -> a
com.mcnc.parecis.bizmob.portal.Login20Task$1 -> com.mcnc.parecis.bizmob.b.b:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Login20Task$2 -> com.mcnc.parecis.bizmob.b.c:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Login20Task$3 -> com.mcnc.parecis.bizmob.b.d:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Login20Task$4 -> com.mcnc.parecis.bizmob.b.e:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Login20Task$5 -> com.mcnc.parecis.bizmob.b.f:
    com.mcnc.parecis.bizmob.portal.Login20Task this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$callback1 -> c
    org.json.JSONObject val$root1 -> d
    void run() -> run
com.mcnc.parecis.bizmob.portal.Login20Task$6 -> com.mcnc.parecis.bizmob.b.g:
    com.mcnc.parecis.bizmob.portal.Login20Task this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$callback1 -> c
    org.json.JSONObject val$root2 -> d
    void run() -> run
com.mcnc.parecis.bizmob.portal.Upgrade20Task -> com.mcnc.parecis.bizmob.b.h:
    java.lang.String TAG -> a
    java.lang.String REQUESTURL_VALUE -> b
    java.lang.String RESOURCE_ROOT -> c
    java.lang.String CONTENT_ROOT -> d
    java.lang.String DOWNLOAD_ROOT -> e
    java.lang.String META_ROOT -> f
    java.lang.String display_type -> g
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    org.json.JSONObject makeVersionCheckObject(android.content.Context) -> a
    org.json.JSONObject makeDownloadFileObject(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean DownLoadReqeust(com.mcnc.hsmart.core.common.Request,com.mcnc.hsmart.core.common.Response,java.lang.String,java.lang.String,java.lang.String) -> a
    void DeleteDownloadFile(java.lang.String) -> a
    boolean Backup(com.mcnc.hsmart.core.common.Request,java.lang.String,java.lang.String) -> a
    boolean Restore(java.lang.String) -> b
    boolean updateSave(java.lang.String,java.lang.String) -> a
    void AppUpgrade(android.app.Activity,java.lang.String) -> a
    boolean copyFile(java.lang.String,java.lang.String) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.parecis.bizmob.portal.Upgrade20Task) -> a
com.mcnc.parecis.bizmob.portal.Upgrade20Task$1 -> com.mcnc.parecis.bizmob.b.i:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Upgrade20Task$2 -> com.mcnc.parecis.bizmob.b.j:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Upgrade20Task$3 -> com.mcnc.parecis.bizmob.b.k:
    com.mcnc.parecis.bizmob.portal.Upgrade20Task this$0 -> a
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> b
    java.lang.String val$msg -> c
    void run() -> run
com.mcnc.parecis.bizmob.portal.Upgrade20Task$4 -> com.mcnc.parecis.bizmob.b.l:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Upgrade20Task$5 -> com.mcnc.parecis.bizmob.b.m:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.portal.Upgrade20Task$6 -> com.mcnc.parecis.bizmob.b.n:
    com.mcnc.parecis.bizmob.portal.Upgrade20Task this$0 -> a
    android.app.Activity val$activity -> b
    void run() -> run
com.mcnc.parecis.bizmob.project.BixolonPrintPlugin -> com.mcnc.parecis.bizmob.project.BixolonPrintPlugin:
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends printer -> printer
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends getBixlonPrinter() -> getBixlonPrinter
    boolean isBluetoothEnable() -> isBluetoothEnable
com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends -> com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends:
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin this$0 -> this$0
    int PrintText(java.lang.String,int,int,int,java.lang.String) -> PrintText
    int PrintText(java.lang.String,int,int,int) -> PrintText
    int Connect() -> Connect
    int PrintBarcode(java.lang.String,int,int,int,int,int) -> PrintBarcode
    int PrintImage(java.lang.String,int,int,int) -> PrintImage
    int PrintSdImage(java.lang.String,int,int,int) -> PrintSdImage
    void log(java.lang.String) -> log
    void logInt(int) -> logInt
    void clearRefTable() -> clearRefTable
    java.lang.String copyToSdcard(android.content.Context,java.lang.String) -> copyToSdcard
    void ReadCard(java.lang.String) -> ReadCard
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin access$0(com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends) -> access$0
com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread -> com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread:
    int retryCount -> retryCount
    int status -> status
    java.lang.String listener -> listener
    java.lang.String errMsg -> errMsg
    boolean bSuccess -> bSuccess
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends this$1 -> this$1
    void run() -> run
    java.lang.String access$0(com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread) -> access$0
com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread$1 -> com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread$1:
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread this$2 -> this$2
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> val$activity
    void run() -> run
com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread$2 -> com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread$2:
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread this$2 -> this$2
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> val$activity
    void run() -> run
com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread$3 -> com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread$3:
    com.mcnc.parecis.bizmob.project.BixolonPrintPlugin$BixServiceExtends$CradReadThread this$2 -> this$2
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> val$activity
    void run() -> run
com.mcnc.parecis.bizmob.project.CallLogPlugin -> com.mcnc.parecis.bizmob.project.CallLogPlugin:
    java.lang.String TAG -> TAG
    int oneDay -> oneDay
    long toDay -> toDay
    org.json.JSONObject result -> result
    java.lang.String getCallLog(int,int) -> getCallLog
    java.lang.String getCallLog(int,int,int) -> getCallLog
com.mcnc.parecis.bizmob.project.PushPlugin -> com.mcnc.parecis.bizmob.project.PushPlugin:
    java.lang.String TAG -> TAG
    void start(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> start
    void start(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void setNotiMessage(int,java.lang.String) -> setNotiMessage
    java.lang.String getNotiMessage(int) -> getNotiMessage
    void setNotiMessages(java.lang.String[]) -> setNotiMessages
    java.lang.String[] getNotiMessages() -> getNotiMessages
    java.lang.String getAccessInfo() -> getAccessInfo
    void setTerminate(boolean) -> setTerminate
    boolean getTerminate() -> getTerminate
com.mcnc.parecis.bizmob.project.TmapPlugin -> com.mcnc.parecis.bizmob.project.TmapPlugin:
    java.lang.String TAG -> TAG
    void showTmap(java.lang.String) -> showTmap
    java.lang.String getLocation(java.lang.String) -> getLocation
    java.lang.String getVersion() -> getVersion
com.mcnc.parecis.bizmob.project.push.PushManager -> com.mcnc.parecis.bizmob.project.push.PushManager:
    com.mcnc.parecis.bizmob.project.push.PushManager instance -> instance
    int PUSH_MESSAGE -> PUSH_MESSAGE
    int PUSH_NOTICE -> PUSH_NOTICE
    int PUSH_REVIEW -> PUSH_REVIEW
    int PUSH_SUBKEYWORD -> PUSH_SUBKEYWORD
    int PUSH_URGENT_NOTICE -> PUSH_URGENT_NOTICE
    int MESSAGE_TITLE -> MESSAGE_TITLE
    int MESSAGE_START -> MESSAGE_START
    int MESSAGE_STOP -> MESSAGE_STOP
    java.lang.String[] messageKeys -> messageKeys
    java.lang.String[] message -> message
    java.lang.String id -> id
    java.lang.String pass -> pass
    java.lang.String registUrl -> registUrl
    java.lang.String serverEmail -> serverEmail
    java.lang.String userEmail -> userEmail
    boolean isActivityEnable -> isActivityEnable
    boolean isPushEnable -> isPushEnable
    android.os.PowerManager pm -> pm
    android.os.PowerManager$WakeLock wl -> wl
    android.content.Context context -> context
    boolean bTerminate -> bTerminate
    java.lang.Runnable run -> run
    com.mcnc.parecis.bizmob.project.push.PushManager getInstance() -> getInstance
    void pushStart(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pushStart
    void pushStop(android.content.Context) -> pushStop
    boolean isRunning(android.content.Context) -> isRunning
    void pushNoti(android.content.Context,java.lang.String) -> pushNoti
    void registDevice(android.content.Context,java.lang.String) -> registDevice
    org.json.JSONObject toRDataJSONObject(com.mcnc.parecis.bizmob.project.push.PushManager$RDataDTO) -> toRDataJSONObject
    void setNotiMessage(int,java.lang.String) -> setNotiMessage
    java.lang.String getNotiMessage(int) -> getNotiMessage
    void setNotiMessages(java.lang.String[]) -> setNotiMessages
    java.lang.String[] getNotiMessages() -> getNotiMessages
    void setContext(android.content.Context) -> setContext
    android.content.Context getContext() -> getContext
    void setTerminate(boolean) -> setTerminate
    boolean getTerminate() -> getTerminate
    android.os.PowerManager$WakeLock access$0(com.mcnc.parecis.bizmob.project.push.PushManager) -> access$0
com.mcnc.parecis.bizmob.project.push.PushManager$1 -> com.mcnc.parecis.bizmob.project.push.PushManager$1:
    com.mcnc.parecis.bizmob.project.push.PushManager this$0 -> this$0
    void run() -> run
com.mcnc.parecis.bizmob.project.push.PushManager$2 -> com.mcnc.parecis.bizmob.project.push.PushManager$2:
    com.mcnc.parecis.bizmob.project.push.PushManager this$0 -> this$0
    android.content.Context val$context -> val$context
    java.lang.String val$registration_id -> val$registration_id
    void run() -> run
com.mcnc.parecis.bizmob.project.push.PushManager$2$1 -> com.mcnc.parecis.bizmob.project.push.PushManager$2$1:
    com.mcnc.parecis.bizmob.project.push.PushManager$2 this$1 -> this$1
    java.lang.Exception val$e -> val$e
    android.content.Context val$context -> val$context
    void run() -> run
com.mcnc.parecis.bizmob.project.push.PushManager$KeyValueDataDTO -> com.mcnc.parecis.bizmob.project.push.PushManager$KeyValueDataDTO:
    java.lang.String key -> key
    java.lang.String value -> value
    com.mcnc.parecis.bizmob.project.push.PushManager this$0 -> this$0
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
com.mcnc.parecis.bizmob.project.push.PushManager$RDataDTO -> com.mcnc.parecis.bizmob.project.push.PushManager$RDataDTO:
    java.util.List keyValueData -> keyValueData
    com.mcnc.parecis.bizmob.project.push.PushManager this$0 -> this$0
    java.util.List getKeyValueData() -> getKeyValueData
    void setKeyValueData(java.util.List) -> setKeyValueData
    void addKeyValueData(com.mcnc.parecis.bizmob.project.push.PushManager$KeyValueDataDTO) -> addKeyValueData
    void removeKeyValueData(com.mcnc.parecis.bizmob.project.push.PushManager$KeyValueDataDTO) -> removeKeyValueData
    void clearAllKeyValueData() -> clearAllKeyValueData
com.mcnc.parecis.bizmob.project.push.PushReceiver -> com.mcnc.parecis.bizmob.project.push.PushReceiver:
    android.content.Context context -> context
    java.lang.String pushKey -> pushKey
    android.os.PowerManager pm -> pm
    android.os.PowerManager$WakeLock wl -> wl
    int ERROR_C2DM -> ERROR_C2DM
    int ERROR_PUSHSERVER -> ERROR_PUSHSERVER
    android.os.Handler handler -> handler
    java.lang.Runnable run -> run
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void handleRegistration(android.content.Context,android.content.Intent) -> handleRegistration
    void handleMessage(android.content.Context,android.content.Intent) -> handleMessage
    android.content.Context access$0(com.mcnc.parecis.bizmob.project.push.PushReceiver) -> access$0
    android.os.PowerManager$WakeLock access$1(com.mcnc.parecis.bizmob.project.push.PushReceiver) -> access$1
    java.lang.String access$2(com.mcnc.parecis.bizmob.project.push.PushReceiver) -> access$2
    android.os.Handler access$3(com.mcnc.parecis.bizmob.project.push.PushReceiver) -> access$3
com.mcnc.parecis.bizmob.project.push.PushReceiver$1 -> com.mcnc.parecis.bizmob.project.push.PushReceiver$1:
    com.mcnc.parecis.bizmob.project.push.PushReceiver this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.mcnc.parecis.bizmob.project.push.PushReceiver$1$1 -> com.mcnc.parecis.bizmob.project.push.PushReceiver$1$1:
    com.mcnc.parecis.bizmob.project.push.PushReceiver$1 this$1 -> this$1
    android.app.Activity val$ctx -> val$ctx
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.parecis.bizmob.project.push.PushReceiver$1$1$1 -> com.mcnc.parecis.bizmob.project.push.PushReceiver$1$1$1:
    com.mcnc.parecis.bizmob.project.push.PushReceiver$1$1 this$2 -> this$2
    android.app.Activity val$ctx -> val$ctx
    android.content.Intent val$intent -> val$intent
    void run() -> run
com.mcnc.parecis.bizmob.project.push.PushReceiver$2 -> com.mcnc.parecis.bizmob.project.push.PushReceiver$2:
    com.mcnc.parecis.bizmob.project.push.PushReceiver this$0 -> this$0
    void run() -> run
com.mcnc.parecis.bizmob.project.push.PushReceiver$3 -> com.mcnc.parecis.bizmob.project.push.PushReceiver$3:
    com.mcnc.parecis.bizmob.project.push.PushReceiver this$0 -> this$0
    android.content.Context val$context -> val$context
    void run() -> run
com.mcnc.parecis.bizmob.project.push.SimpleCrypto -> com.mcnc.parecis.bizmob.project.push.SimpleCrypto:
    java.lang.String HEX -> HEX
    java.lang.String encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    byte[] getRawKey(byte[]) -> getRawKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    byte[] decrypt(byte[],byte[]) -> decrypt
    java.lang.String toHex(java.lang.String) -> toHex
    java.lang.String fromHex(java.lang.String) -> fromHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String toHex(byte[]) -> toHex
    void appendHex(java.lang.StringBuffer,byte) -> appendHex
com.mcnc.parecis.bizmob.project.tmap.TmapUtil -> com.mcnc.parecis.bizmob.project.tmap.TmapUtil:
    java.lang.String TAG -> TAG
    java.lang.String tmapVersion -> tmapVersion
    java.lang.String TMAP_2_0 -> TMAP_2_0
    java.lang.String TMAP_2_5 -> TMAP_2_5
    java.lang.String TMAP_3_0 -> TMAP_3_0
    void showTmap(android.content.Context,java.lang.String) -> showTmap
    void showTmap20(android.content.Context,java.lang.String) -> showTmap20
    void showTmap25(android.content.Context,java.lang.String) -> showTmap25
    void showTmap30(android.content.Context,java.lang.String) -> showTmap30
    java.lang.String getVersion(android.content.Context) -> getVersion
    java.util.List getLocation(android.content.Context,java.lang.String,int) -> getLocation
com.mcnc.parecis.bizmob.task.AddContactGroupTask -> com.mcnc.parecis.bizmob.c.a:
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.parecis.bizmob.task.AddContactTask -> com.mcnc.parecis.bizmob.c.b:
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.parecis.bizmob.task.DelContactTask -> com.mcnc.parecis.bizmob.c.c:
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.parecis.bizmob.task.DownloadExternalFileTask -> com.mcnc.parecis.bizmob.c.d:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    void download(com.mcnc.hsmart.core.common.Request,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.parecis.bizmob.task.DownloadExternalFileTask$1 -> com.mcnc.parecis.bizmob.c.e:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.task.DownloadExternalFileTask$2 -> com.mcnc.parecis.bizmob.c.f:
    android.app.Activity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.task.DownloadImageTask -> com.mcnc.parecis.bizmob.c.g:
    java.lang.String ROOT_URL_IP -> a
    java.lang.String ROOT_URL_PORT -> b
    java.lang.String ROOT_URL_DIR -> c
    java.lang.String REQUESTURL_VALUE -> d
    java.lang.String TAG -> e
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    boolean DownLoadReqeust(com.mcnc.hsmart.core.common.Request,com.mcnc.hsmart.core.common.Response,java.lang.String,java.lang.String) -> a
    org.json.JSONObject makeDownloadFileObject(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.parecis.bizmob.task.DownloadImageTask) -> a
com.mcnc.parecis.bizmob.task.DownloadImageTask$1 -> com.mcnc.parecis.bizmob.c.h:
    com.mcnc.parecis.bizmob.task.DownloadImageTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$req -> b
    java.lang.String val$callback1 -> c
    org.json.JSONObject val$root1 -> d
    void run() -> run
com.mcnc.parecis.bizmob.task.ExtractZipFileTask -> com.mcnc.parecis.bizmob.c.i:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.parecis.bizmob.task.ExtractZipFileTask) -> a
com.mcnc.parecis.bizmob.task.ExtractZipFileTask$1 -> com.mcnc.parecis.bizmob.c.j:
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> a
    void run() -> run
com.mcnc.parecis.bizmob.task.ExtractZipFileTask$2 -> com.mcnc.parecis.bizmob.c.k:
    com.mcnc.parecis.bizmob.task.ExtractZipFileTask this$0 -> a
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> b
    void run() -> run
com.mcnc.parecis.bizmob.task.ExtractZipFileTask$3 -> com.mcnc.parecis.bizmob.c.l:
    com.mcnc.parecis.bizmob.task.ExtractZipFileTask this$0 -> a
    java.lang.String val$callback2 -> b
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> c
    void run() -> run
com.mcnc.parecis.bizmob.task.GotoAboutTask -> com.mcnc.parecis.bizmob.c.m:
    java.lang.String TAG -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.parecis.bizmob.task.GotoAboutTask) -> a
com.mcnc.parecis.bizmob.task.GotoAboutTask$1 -> com.mcnc.parecis.bizmob.c.n:
    com.mcnc.parecis.bizmob.task.GotoAboutTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    void run() -> run
com.mcnc.parecis.bizmob.task.GotoAboutTask$1$1 -> com.mcnc.parecis.bizmob.c.o:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mcnc.parecis.bizmob.task.HasContactGroupTask -> com.mcnc.parecis.bizmob.c.p:
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.parecis.bizmob.task.ReloadTask -> com.mcnc.parecis.bizmob.c.q:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.parecis.bizmob.task.ReloadTask) -> a
com.mcnc.parecis.bizmob.task.ReloadTask$1 -> com.mcnc.parecis.bizmob.c.r:
    com.mcnc.parecis.bizmob.task.ReloadTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$callback1 -> c
    org.json.JSONObject val$root1 -> d
    void run() -> run
com.mcnc.parecis.bizmob.task.ReloadTask$2 -> com.mcnc.parecis.bizmob.c.s:
    com.mcnc.parecis.bizmob.task.ReloadTask this$0 -> a
    com.mcnc.hsmart.core.common.Request val$request -> b
    java.lang.String val$callback1 -> c
    org.json.JSONObject val$root1 -> d
    void run() -> run
com.mcnc.parecis.bizmob.task.ShowPopupViewTask -> com.mcnc.parecis.bizmob.c.t:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.parecis.bizmob.task.SpeechRecognitionTask -> com.mcnc.parecis.bizmob.c.u:
    java.lang.String TAG -> a
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mcnc.parecis.bizmob.task.SqliteExecuteFromFileTask -> com.mcnc.parecis.bizmob.c.v:
    java.lang.String TAG -> a
    java.lang.String unzipPath -> b
    com.mcnc.hsmart.core.common.Response doInBackground$6ea5927c() -> e
    void ExecuteFromFile(java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$1(com.mcnc.parecis.bizmob.task.SqliteExecuteFromFileTask) -> a
com.mcnc.parecis.bizmob.task.SqliteExecuteFromFileTask$1 -> com.mcnc.parecis.bizmob.c.w:
    com.mcnc.parecis.bizmob.task.SqliteExecuteFromFileTask this$0 -> a
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> b
    void run() -> run
com.mcnc.parecis.bizmob.task.SqliteExecuteFromFileTask$2 -> com.mcnc.parecis.bizmob.c.x:
    com.mcnc.parecis.bizmob.task.SqliteExecuteFromFileTask this$0 -> a
    java.lang.String val$callback2 -> b
    com.mcnc.hsmart.core.view.BaseActivity val$activity -> c
    void run() -> run
com.mcnc.parecis.bizmob.util.ProjectUtils -> com.mcnc.parecis.bizmob.d.a:
    boolean isAllowUrl(java.lang.String) -> a
com.mcnc.parecis.bizmob.view.ImpHomeActivity -> com.mcnc.parecis.bizmob.view.ImpHomeActivity:
    void setHeader(android.widget.LinearLayout) -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
com.mcnc.parecis.bizmob.view.ImpLoginActivity -> com.mcnc.parecis.bizmob.view.ImpLoginActivity:
    java.lang.String TAG -> M
    android.content.Context mContext -> N
    boolean bVersionCheck -> O
    void onCreateContent(android.os.Bundle) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void setHeader(android.widget.LinearLayout) -> c
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onBackPressed() -> onBackPressed
    void onNewIntent(android.content.Intent) -> onNewIntent
    void terminate() -> a
    void restart() -> h
    void processDownloadCheck() -> i
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void requestKillProcess(android.app.Activity) -> a
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
com.mcnc.parecis.bizmob.view.ImpLoginActivity$1 -> com.mcnc.parecis.bizmob.view.a:
    android.app.Activity val$context -> a
    void run() -> run
com.mcnc.parecis.bizmob.view.ImpMainActivity -> com.mcnc.parecis.bizmob.view.ImpMainActivity:
    java.lang.String back_action -> M
    boolean btoolbarVisible -> L
    java.lang.String TAG -> N
    long lastTouchTime -> O
    long lastClickTime -> P
    java.lang.String lastAction -> Q
    long lastPostTime -> R
    java.lang.String lastTrCode -> S
    java.util.HashMap mapContext -> T
    void init() -> b
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void loadUrl(java.lang.String) -> a
    void onPause() -> onPause
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onClick(android.view.View) -> onClick
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void setContainer(org.json.JSONObject) -> a
    void createContextMenu(org.json.JSONObject) -> c
    void toggleContext() -> f
    void onBackPressed() -> onBackPressed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    org.json.JSONObject getImageInfo(android.net.Uri) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean checkUrlAction(org.json.JSONObject) -> b
    java.lang.String access$0(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> a
    android.widget.LinearLayout access$1(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> b
    android.view.animation.Animation access$2(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> c
    android.widget.LinearLayout access$3(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> d
    android.widget.LinearLayout access$4(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> e
    android.widget.LinearLayout access$5(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> f
    android.widget.LinearLayout access$6(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> g
    android.widget.LinearLayout access$7(com.mcnc.parecis.bizmob.view.ImpMainActivity) -> h
com.mcnc.parecis.bizmob.view.ImpMainActivity$1 -> com.mcnc.parecis.bizmob.view.b:
    com.mcnc.parecis.bizmob.view.ImpMainActivity this$0 -> a
    com.mcnc.hsmart.core.common.Response val$response -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    com.mcnc.parecis.bizmob.view.ImpMainActivity access$0(com.mcnc.parecis.bizmob.view.ImpMainActivity$1) -> a
com.mcnc.parecis.bizmob.view.ImpMainActivity$1$1 -> com.mcnc.parecis.bizmob.view.c:
    com.mcnc.parecis.bizmob.view.ImpMainActivity$1 this$1 -> a
    void run() -> run
com.mcnc.parecis.bizmob.view.ImpMainActivity$2 -> com.mcnc.parecis.bizmob.view.d:
    com.mcnc.parecis.bizmob.view.ImpMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.ImpMainActivity$3 -> com.mcnc.parecis.bizmob.view.e:
    com.mcnc.parecis.bizmob.view.ImpMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.ImpMainActivity$4 -> com.mcnc.parecis.bizmob.view.f:
    com.mcnc.parecis.bizmob.view.ImpMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.ImpMainActivity$5 -> com.mcnc.parecis.bizmob.view.g:
    com.mcnc.parecis.bizmob.view.ImpMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.ImpMainActivity$6 -> com.mcnc.parecis.bizmob.view.h:
    com.mcnc.parecis.bizmob.view.ImpMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.ImpMainActivity$SpeechRecognitionDialog -> com.mcnc.parecis.bizmob.view.i:
    android.content.Context context -> b
    android.widget.Button search -> c
    android.widget.Button cancel -> d
    android.app.Dialog dlg -> a
    android.widget.ListView listView -> e
    com.mcnc.parecis.bizmob.view.ImpMainActivity this$0 -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void access$0(com.mcnc.parecis.bizmob.view.ImpMainActivity$SpeechRecognitionDialog,java.lang.String) -> a
com.mcnc.parecis.bizmob.view.ImpMainActivity$SpeechRecognitionDialog$1 -> com.mcnc.parecis.bizmob.view.j:
    com.mcnc.parecis.bizmob.view.ImpMainActivity$SpeechRecognitionDialog this$1 -> a
    java.util.ArrayList val$list -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.mcnc.parecis.bizmob.view.PopupViewActivity -> com.mcnc.parecis.bizmob.view.PopupViewActivity:
    java.lang.String TAG -> M
    java.lang.String tagetPage -> N
    java.lang.String back_action -> O
    int width -> P
    int height -> Q
    int orientation -> R
    android.widget.LinearLayout bodyLayout -> S
    int titleBarHeight -> T
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onBackPressed() -> onBackPressed
    void init() -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setContainer(org.json.JSONObject) -> a
com.mcnc.parecis.bizmob.view.TabHomeActivity -> com.mcnc.parecis.bizmob.view.TabHomeActivity:
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
com.mcnc.parecis.bizmob.view.TabMainActivity -> com.mcnc.parecis.bizmob.view.TabMainActivity:
    java.lang.String back_action -> P
    java.lang.String TAG -> Q
    long lastTouchTime -> R
    java.util.HashMap mapContext -> S
    android.widget.LinearLayout webLayout -> T
    android.widget.LinearLayout rightHookLayout -> L
    android.widget.LinearLayout leftHookLayout -> M
    android.widget.ImageView rightHookImg -> U
    android.widget.ImageView leftHookImg -> V
    android.widget.LinearLayout rightBottomBaseLayout -> W
    android.widget.LinearLayout rightToolbarLayout -> X
    android.widget.LinearLayout rightBottomLayout -> N
    android.widget.LinearLayout leftBottomBaseLayout -> Y
    android.widget.LinearLayout leftToolbarLayout -> Z
    android.widget.LinearLayout leftBottomLayout -> O
    android.view.animation.Animation slideRightOut -> aa
    android.view.animation.Animation slideRightIn -> ab
    android.view.animation.Animation slideLeftOut -> ac
    android.view.animation.Animation slideLeftIn -> ad
    android.view.animation.Animation alpha_up -> ae
    android.view.animation.Animation alpha_down -> af
    boolean blefttoolbarVisible -> ag
    boolean brighttoolbarVisible -> ah
    boolean brightToolbar -> ai
    boolean bleftToolbar -> aj
    long lastClickTime -> ak
    java.lang.String lastAction -> al
    long lastPostTime -> am
    java.lang.String lastTrCode -> an
    android.widget.LinearLayout$LayoutParams layoutParam -> ao
    android.widget.LinearLayout$LayoutParams a -> ap
    android.widget.LinearLayout$LayoutParams b -> aq
    android.widget.LinearLayout$LayoutParams c -> ar
    void init() -> b
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void loadUrl(java.lang.String) -> a
    void onPause() -> onPause
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setHeader(android.widget.LinearLayout) -> c
    void setBody(android.widget.LinearLayout) -> a
    void setBottom(android.widget.LinearLayout) -> b
    void onClick(android.view.View) -> onClick
    void onError(com.mcnc.hsmart.core.common.Response) -> a
    void onSuccess(com.mcnc.hsmart.core.common.Response) -> b
    void onAction(android.view.View) -> a
    void onAction(android.webkit.WebView,java.lang.String) -> a
    void setContainer(org.json.JSONObject) -> a
    void createContextMenu2(org.json.JSONObject,java.lang.String) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> b
    void toggleContext() -> f
    void onBackPressed() -> onBackPressed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean checkUrlAction(org.json.JSONObject) -> b
    java.lang.String access$0(com.mcnc.parecis.bizmob.view.TabMainActivity) -> a
    android.widget.LinearLayout access$3(com.mcnc.parecis.bizmob.view.TabMainActivity) -> b
    android.widget.LinearLayout access$4(com.mcnc.parecis.bizmob.view.TabMainActivity) -> c
com.mcnc.parecis.bizmob.view.TabMainActivity$1 -> com.mcnc.parecis.bizmob.view.k:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    com.mcnc.hsmart.core.common.Response val$response -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    com.mcnc.parecis.bizmob.view.TabMainActivity access$0(com.mcnc.parecis.bizmob.view.TabMainActivity$1) -> a
com.mcnc.parecis.bizmob.view.TabMainActivity$1$1 -> com.mcnc.parecis.bizmob.view.l:
    com.mcnc.parecis.bizmob.view.TabMainActivity$1 this$1 -> a
    void run() -> run
com.mcnc.parecis.bizmob.view.TabMainActivity$10 -> com.mcnc.parecis.bizmob.view.m:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$11 -> com.mcnc.parecis.bizmob.view.n:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$12 -> com.mcnc.parecis.bizmob.view.o:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$3 -> com.mcnc.parecis.bizmob.view.p:
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$4 -> com.mcnc.parecis.bizmob.view.q:
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$5 -> com.mcnc.parecis.bizmob.view.r:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$6 -> com.mcnc.parecis.bizmob.view.s:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$7 -> com.mcnc.parecis.bizmob.view.t:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$8 -> com.mcnc.parecis.bizmob.view.u:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$9 -> com.mcnc.parecis.bizmob.view.v:
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mcnc.parecis.bizmob.view.TabMainActivity$SpeechRecognitionDialog -> com.mcnc.parecis.bizmob.view.w:
    android.content.Context context -> b
    android.widget.Button search -> c
    android.widget.Button cancel -> d
    android.app.Dialog dlg -> a
    android.widget.ListView listView -> e
    com.mcnc.parecis.bizmob.view.TabMainActivity this$0 -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void access$0(com.mcnc.parecis.bizmob.view.TabMainActivity$SpeechRecognitionDialog,java.lang.String) -> a
com.mcnc.parecis.bizmob.view.TabMainActivity$SpeechRecognitionDialog$1 -> com.mcnc.parecis.bizmob.view.x:
    com.mcnc.parecis.bizmob.view.TabMainActivity$SpeechRecognitionDialog this$1 -> a
    java.util.ArrayList val$list -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.phonegap.BrowserKey -> com.phonegap.a:
    org.json.JSONObject addRequestHeader$32653995(java.lang.String,java.lang.String) -> a
    org.json.JSONObject addRequestBody(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    org.json.JSONObject addRequestBody(org.json.JSONObject,java.lang.String,int) -> a
    org.json.JSONObject addRequestBody(org.json.JSONObject,java.lang.String,boolean) -> a
    org.json.JSONObject addRequestBody(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> a
    boolean isResponseResult(org.json.JSONObject) -> a
    java.lang.String getResposeStringValue(org.json.JSONObject,java.lang.String) -> a
    int getResposeIntValue(org.json.JSONObject,java.lang.String) -> b
    org.json.JSONObject getMapToJson(java.util.Map) -> a
    org.json.JSONObject getPreferencesToJson(android.content.SharedPreferences) -> a
com.phonegap.CallbackServer -> com.phonegap.b:
    java.util.LinkedList javascript -> a
    int port -> b
    java.lang.Thread serverThread -> c
    boolean active -> d
    boolean empty -> e
    java.lang.String token -> f
    void startServer() -> a
    void run() -> run
    void stopServer() -> b
    void destroy() -> c
    java.lang.String getJavascript() -> d
com.phonegap.WebViewReflect -> com.phonegap.c:
    java.lang.reflect.Method mWebSettings_setDatabaseEnabled -> a
    java.lang.reflect.Method mWebSettings_setDatabasePath -> b
    java.lang.reflect.Method mWebSettings_setDomStorageEnabled -> c
    java.lang.reflect.Method mWebSettings_setGeolocationEnabled -> d
    void checkCompatibility() -> a
    void setStorage$250552fc(android.webkit.WebSettings,java.lang.String) -> a
    void setGeolocationEnabled$1ffbdba(android.webkit.WebSettings) -> a
    void setDomStorage(android.webkit.WebSettings) -> b
com.phonegap.api.IPlugin -> com.phonegap.api.a:
com.phonegap.api.PhonegapActivity -> com.phonegap.api.PhonegapActivity:
com.phonegap.api.Plugin -> com.phonegap.api.b:
    com.phonegap.api.PluginResult execute$6b995bca() -> a
    void setContext$5c7da679() -> b
    void setView$60006d18() -> c
    void onPause() -> d
    void onResume() -> e
    void onDestroy() -> f
com.phonegap.api.PluginManager -> com.phonegap.api.c:
    java.util.HashMap plugins -> a
    java.util.HashMap services -> b
    com.phonegap.api.PhonegapActivity ctx -> c
    android.webkit.WebView app -> d
    java.lang.String exec$410fd5a9(java.lang.String,java.lang.String,java.lang.String) -> a
    com.phonegap.api.Plugin addPlugin(java.lang.String,java.lang.Class) -> a
    void addService(java.lang.String,java.lang.String) -> a
    void onPause() -> a
    void onResume() -> b
    void onDestroy() -> c
    boolean compress(java.io.File,java.io.File) -> a
    void zipDir(java.lang.String,java.util.zip.ZipOutputStream,java.lang.String) -> a
    boolean decompress(java.io.File,java.io.File) -> b
    void copyInputStream(java.io.InputStream,java.io.OutputStream) -> a
    boolean buildDirectory(java.io.File) -> a
com.phonegap.api.PluginResult -> com.phonegap.api.d:
    int status -> a
    java.lang.String message -> b
    java.lang.String[] StatusMessages -> c
    int getStatus() -> a
    boolean getKeepCallback() -> b
    java.lang.String getJSONString() -> c
com.phonegap.api.PluginResult$Status -> com.phonegap.api.e:
    com.phonegap.api.PluginResult$Status NO_RESULT -> a
    com.phonegap.api.PluginResult$Status OK -> d
    com.phonegap.api.PluginResult$Status CLASS_NOT_FOUND_EXCEPTION -> b
    com.phonegap.api.PluginResult$Status ILLEGAL_ACCESS_EXCEPTION -> e
    com.phonegap.api.PluginResult$Status INSTANTIATION_EXCEPTION -> f
    com.phonegap.api.PluginResult$Status MALFORMED_URL_EXCEPTION -> g
    com.phonegap.api.PluginResult$Status IO_EXCEPTION -> h
    com.phonegap.api.PluginResult$Status INVALID_ACTION -> i
    com.phonegap.api.PluginResult$Status JSON_EXCEPTION -> c
    com.phonegap.api.PluginResult$Status ERROR -> j
    com.phonegap.api.PluginResult$Status[] ENUM$VALUES -> k
    com.phonegap.api.PluginResult$Status[] values() -> values
    com.phonegap.api.PluginResult$Status valueOf(java.lang.String) -> valueOf
org.apache.commons.codec.binary.Base64 -> a.a.a.a.a.a:
    byte[] CHUNK_SEPARATOR -> a
    byte[] STANDARD_ENCODE_TABLE -> b
    byte[] URL_SAFE_ENCODE_TABLE -> c
    byte[] DECODE_TABLE -> d
    byte[] encodeTable -> e
    int lineLength -> f
    byte[] lineSeparator -> g
    int encodeSize -> h
    byte[] buffer -> i
    int pos -> j
    int readPos -> k
    int currentLinePos -> l
    int modulus -> m
    boolean eof -> n
    int x -> o
    void resizeBuffer() -> a
    void encode(byte[],int,int) -> a
    boolean containsBase64Byte(byte[]) -> b
    byte[] encodeBase64(byte[]) -> a
    long getEncodeLength(byte[],int,byte[]) -> a
org.apache.commons.codec.binary.StringUtils -> a.a.a.a.a.b:
    java.lang.String newString(byte[],java.lang.String) -> a
